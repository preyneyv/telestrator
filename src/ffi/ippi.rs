/* automatically generated by rust-bindgen 0.69.4 */

#![allow(dead_code)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]

pub const IPP_VERSION_MAJOR: u32 = 2021;
pub const IPP_VERSION_MINOR: u32 = 11;
pub const IPP_VERSION_UPDATE: u32 = 0;
pub const IPP_VERSION_STR: &[u8; 10] = b"2021.11.0\0";
pub const IPP_INTERFACE_VERSION_MAJOR: u32 = 10;
pub const IPP_INTERFACE_VERSION_MINOR: u32 = 10;
pub const IPP_LIB_SUBDIR_ARCH_SUFFIX: &[u8; 1] = b"\0";
pub const _FLOAT_16: u32 = 2;
pub const _SHORT_FLOAT: u32 = 1;
pub const _NO_FLOAT_16: u32 = 0;
pub const COMPILER_SUPPORT_SHORT_FLOAT: u32 = 0;
pub const IPP_PI: f64 = 3.141592653589793;
pub const IPP_2PI: f64 = 6.283185307179586;
pub const IPP_PI2: f64 = 1.5707963267948966;
pub const IPP_PI4: f64 = 0.7853981633974483;
pub const IPP_PI180: f64 = 0.017453292519943295;
pub const IPP_RPI: f64 = 0.3183098861837907;
pub const IPP_SQRT2: f64 = 1.4142135623730951;
pub const IPP_SQRT3: f64 = 1.7320508075688772;
pub const IPP_LN2: f64 = 0.6931471805599453;
pub const IPP_LN3: f64 = 1.0986122886681098;
pub const IPP_E: f64 = 2.718281828459045;
pub const IPP_RE: f64 = 0.36787944117144233;
pub const IPP_MAX_8U: u32 = 255;
pub const IPP_MAX_16U: u32 = 65535;
pub const IPP_MAX_32U: u32 = 4294967295;
pub const IPP_MIN_8U: u32 = 0;
pub const IPP_MIN_16U: u32 = 0;
pub const IPP_MIN_32U: u32 = 0;
pub const IPP_MIN_8S: i32 = -128;
pub const IPP_MAX_8S: u32 = 127;
pub const IPP_MIN_16S: i32 = -32768;
pub const IPP_MAX_16S: u32 = 32767;
pub const IPP_MIN_32S: i32 = -2147483648;
pub const IPP_MAX_32S: u32 = 2147483647;
pub const IPP_MIN_64U: u32 = 0;
pub const IPP_MAX_64U: i32 = -1;
pub const ippCPUID_MMX: u32 = 1;
pub const ippCPUID_SSE: u32 = 2;
pub const ippCPUID_SSE2: u32 = 4;
pub const ippCPUID_SSE3: u32 = 8;
pub const ippCPUID_SSSE3: u32 = 16;
pub const ippCPUID_MOVBE: u32 = 32;
pub const ippCPUID_SSE41: u32 = 64;
pub const ippCPUID_SSE42: u32 = 128;
pub const ippCPUID_AVX: u32 = 256;
pub const ippAVX_ENABLEDBYOS: u32 = 512;
pub const ippCPUID_AES: u32 = 1024;
pub const ippCPUID_CLMUL: u32 = 2048;
pub const ippCPUID_ABR: u32 = 4096;
pub const ippCPUID_RDRAND: u32 = 8192;
pub const ippCPUID_F16C: u32 = 16384;
pub const ippCPUID_AVX2: u32 = 32768;
pub const ippCPUID_ADCOX: u32 = 65536;
pub const ippCPUID_RDSEED: u32 = 131072;
pub const ippCPUID_PREFETCHW: u32 = 262144;
pub const ippCPUID_SHA: u32 = 524288;
pub const ippCPUID_AVX512F: u32 = 1048576;
pub const ippCPUID_AVX512CD: u32 = 2097152;
pub const ippCPUID_AVX512ER: u32 = 4194304;
pub const ippCPUID_AVX512PF: u32 = 8388608;
pub const ippCPUID_AVX512BW: u32 = 16777216;
pub const ippCPUID_AVX512DQ: u32 = 33554432;
pub const ippCPUID_AVX512VL: u32 = 67108864;
pub const ippCPUID_AVX512VBMI: u32 = 134217728;
pub const ippCPUID_MPX: u32 = 268435456;
pub const ippCPUID_AVX512_4FMADDPS: u32 = 536870912;
pub const ippCPUID_AVX512_4VNNIW: u32 = 1073741824;
pub const ippCPUID_KNC: u32 = 2147483648;
pub const ABI_BAD_BX: u32 = 1;
pub const ABI_BAD_DI: u32 = 2;
pub const ABI_BAD_SI: u32 = 4;
pub const ABI_BAD_BP: u32 = 8;
pub const ABI_BAD_12: u32 = 16;
pub const ABI_BAD_13: u32 = 32;
pub const ABI_BAD_14: u32 = 64;
pub const ABI_BAD_15: u32 = 128;
pub const IPP_TEMPORAL_COPY: u32 = 0;
pub const IPP_NONTEMPORAL_STORE: u32 = 1;
pub const IPP_NONTEMPORAL_LOAD: u32 = 2;
pub const IPP_HOG_MAX_CELL: u32 = 16;
pub const IPP_HOG_MAX_BLOCK: u32 = 64;
pub const IPP_HOG_MAX_BINS: u32 = 16;
pub const IPP_SEGMENT_QUEUE: u32 = 1;
pub const IPP_SEGMENT_DISTANCE: u32 = 2;
pub const IPP_SEGMENT_BORDER_4: u32 = 64;
pub const IPP_SEGMENT_BORDER_8: u32 = 128;
pub const IppZFPMINBITS: u32 = 0;
pub const IppZFPMAXBITS: u32 = 4171;
pub const IppZFPMAXPREC: u32 = 64;
pub const IppZFPMINEXP: i32 = -10740;
pub const ippStsCpuNotSupportedErr: i32 = -9999;
pub const ippStsInplaceModeNotSupportedErr: i32 = -9998;
pub const ippStsIIRIIRLengthErr: i32 = -234;
pub const ippStsWarpTransformTypeErr: i32 = -233;
pub const ippStsExceededSizeErr: i32 = -232;
pub const ippStsWarpDirectionErr: i32 = -231;
pub const ippStsFilterTypeErr: i32 = -230;
pub const ippStsNormErr: i32 = -229;
pub const ippStsAlgTypeErr: i32 = -228;
pub const ippStsMisalignedOffsetErr: i32 = -227;
pub const ippStsBorderErr: i32 = -225;
pub const ippStsDitherTypeErr: i32 = -224;
pub const ippStsUnknownStatusCodeErr: i32 = -216;
pub const ippStsLzoBrokenStreamErr: i32 = -214;
pub const ippStsRoundModeNotSupportedErr: i32 = -213;
pub const ippStsDecimateFractionErr: i32 = -212;
pub const ippStsWeightErr: i32 = -211;
pub const ippStsQualityIndexErr: i32 = -210;
pub const ippStsIIRPassbandRippleErr: i32 = -209;
pub const ippStsFilterFrequencyErr: i32 = -208;
pub const ippStsIIRGenOrderErr: i32 = -206;
pub const ippStsConvergeErr: i32 = -205;
pub const ippStsSizeMatchMatrixErr: i32 = -204;
pub const ippStsCountMatrixErr: i32 = -203;
pub const ippStsRoiShiftMatrixErr: i32 = -202;
pub const ippStsSrcDataErr: i32 = -200;
pub const ippStsSingularErr: i32 = -195;
pub const ippStsSparseErr: i32 = -194;
pub const ippStsRegExpOptionsErr: i32 = -190;
pub const ippStsRegExpErr: i32 = -189;
pub const ippStsRegExpMatchLimitErr: i32 = -188;
pub const ippStsRegExpQuantifierErr: i32 = -187;
pub const ippStsRegExpGroupingErr: i32 = -186;
pub const ippStsRegExpBackRefErr: i32 = -185;
pub const ippStsRegExpChClassErr: i32 = -184;
pub const ippStsRegExpMetaChErr: i32 = -183;
pub const ippStsStrideMatrixErr: i32 = -182;
pub const ippStsNoiseRangeErr: i32 = -125;
pub const ippStsNotEvenStepErr: i32 = -108;
pub const ippStsHistoNofLevelsErr: i32 = -107;
pub const ippStsLUTNofLevelsErr: i32 = -106;
pub const ippStsChannelOrderErr: i32 = -60;
pub const ippStsDataTypeErr: i32 = -59;
pub const ippStsQuadErr: i32 = -58;
pub const ippStsRectErr: i32 = -57;
pub const ippStsCoeffErr: i32 = -56;
pub const ippStsNoiseValErr: i32 = -55;
pub const ippStsDitherLevelsErr: i32 = -54;
pub const ippStsNumChannelsErr: i32 = -53;
pub const ippStsCOIErr: i32 = -52;
pub const ippStsDivisorErr: i32 = -51;
pub const ippStsAlphaTypeErr: i32 = -50;
pub const ippStsGammaRangeErr: i32 = -49;
pub const ippStsChannelErr: i32 = -47;
pub const ippStsToneMagnErr: i32 = -46;
pub const ippStsToneFreqErr: i32 = -45;
pub const ippStsTonePhaseErr: i32 = -44;
pub const ippStsTrnglMagnErr: i32 = -43;
pub const ippStsTrnglFreqErr: i32 = -42;
pub const ippStsTrnglPhaseErr: i32 = -41;
pub const ippStsTrnglAsymErr: i32 = -40;
pub const ippStsHugeWinErr: i32 = -39;
pub const ippStsJaehneErr: i32 = -38;
pub const ippStsStrideErr: i32 = -37;
pub const ippStsEpsValErr: i32 = -36;
pub const ippStsWtOffsetErr: i32 = -35;
pub const ippStsAnchorErr: i32 = -34;
pub const ippStsMaskSizeErr: i32 = -33;
pub const ippStsShiftErr: i32 = -32;
pub const ippStsSampleFactorErr: i32 = -31;
pub const ippStsSamplePhaseErr: i32 = -30;
pub const ippStsFIRMRFactorErr: i32 = -29;
pub const ippStsFIRMRPhaseErr: i32 = -28;
pub const ippStsRelFreqErr: i32 = -27;
pub const ippStsFIRLenErr: i32 = -26;
pub const ippStsIIROrderErr: i32 = -25;
pub const ippStsResizeFactorErr: i32 = -24;
pub const ippStsInterpolationErr: i32 = -23;
pub const ippStsMirrorFlipErr: i32 = -22;
pub const ippStsMoment00ZeroErr: i32 = -21;
pub const ippStsThreshNegLevelErr: i32 = -20;
pub const ippStsThresholdErr: i32 = -19;
pub const ippStsFftFlagErr: i32 = -18;
pub const ippStsFftOrderErr: i32 = -17;
pub const ippStsStepErr: i32 = -16;
pub const ippStsLoadDynErr: i32 = -221;
pub const ippStsLengthErr: i32 = -15;
pub const ippStsNotSupportedModeErr: i32 = -14;
pub const ippStsContextMatchErr: i32 = -13;
pub const ippStsScaleRangeErr: i32 = -12;
pub const ippStsOutOfRangeErr: i32 = -11;
pub const ippStsDivByZeroErr: i32 = -10;
pub const ippStsMemAllocErr: i32 = -9;
pub const ippStsNullPtrErr: i32 = -8;
pub const ippStsRangeErr: i32 = -7;
pub const ippStsSizeErr: i32 = -6;
pub const ippStsBadArgErr: i32 = -5;
pub const ippStsNoMemErr: i32 = -4;
pub const ippStsErr: i32 = -2;
pub const ippStsNoErr: u32 = 0;
pub const ippStsNoOperation: u32 = 1;
pub const ippStsDivByZero: u32 = 2;
pub const ippStsWaterfall: u32 = 43;
pub const ippStsOperationNotSupported: u32 = 44;
pub const ippStsSqrtNegArg: u32 = 3;
pub const ippStsInvZero: u32 = 4;
pub const ippStsEvenMedianMaskSize: u32 = 5;
pub const ippStsLnZeroArg: u32 = 7;
pub const ippStsLnNegArg: u32 = 8;
pub const ippStsNanArg: u32 = 9;
pub const ippStsOverflow: u32 = 12;
pub const ippStsUnderflow: u32 = 17;
pub const ippStsSingularity: u32 = 18;
pub const ippStsDomain: u32 = 19;
pub const ippStsNonIntelCpu: u32 = 20;
pub const ippStsCpuMismatch: u32 = 21;
pub const ippStsOvermuchStrings: u32 = 26;
pub const ippStsOverlongString: u32 = 27;
pub const ippStsAffineQuadChanged: u32 = 28;
pub const ippStsWrongIntersectROI: u32 = 29;
pub const ippStsWrongIntersectQuad: u32 = 30;
pub const ippStsSrcSizeLessExpected: u32 = 32;
pub const ippStsDstSizeLessExpected: u32 = 33;
pub const ippStsDoubleSize: u32 = 35;
pub const ippStsNotSupportedCpu: u32 = 36;
pub const ippStsUnknownCacheSize: u32 = 37;
pub const ippStsSymKernelExpected: u32 = 38;
pub const ippStsEvenMedianWeight: u32 = 39;
pub const ippStsWrongIntersectVOI: u32 = 40;
pub const ippStsNoAntialiasing: u32 = 46;
pub const ippStsRepetitiveSrcData: u32 = 47;
pub const ippStsSizeWrn: u32 = 48;
pub const ippStsFeatureNotSupported: u32 = 49;
pub const ippStsUnknownFeature: u32 = 50;
pub const ippStsFeaturesCombination: u32 = 51;
pub const ippStsAccurateModeNotSupported: u32 = 52;
pub const ippStsNonOptimalPathSelected: u32 = 53;
pub const ippStsOk: u32 = 0;
pub const khdtv0f: f64 = 0.2126;
pub const khdtv1f: f64 = 0.7152;
pub const khdtv2f: f64 = 0.0722;
pub const khdtv3f: f64 = 0.1146;
pub const khdtv4f: f64 = 0.3854;
pub const khdtv5f: f64 = 0.5;
pub const khdtv6f: f64 = 0.4542;
pub const khdtv7f: f64 = 0.0458;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppLibraryVersion {
    pub major: ::std::os::raw::c_int,
    pub minor: ::std::os::raw::c_int,
    pub majorBuild: ::std::os::raw::c_int,
    pub build: ::std::os::raw::c_int,
    pub targetCpu: [::std::os::raw::c_char; 4usize],
    pub Name: *const ::std::os::raw::c_char,
    pub Version: *const ::std::os::raw::c_char,
    pub BuildDate: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_IppLibraryVersion() {
    const UNINIT: ::std::mem::MaybeUninit<IppLibraryVersion> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppLibraryVersion>(),
        48usize,
        concat!("Size of: ", stringify!(IppLibraryVersion))
    );
    assert_eq!(
        ::std::mem::align_of::<IppLibraryVersion>(),
        8usize,
        concat!("Alignment of ", stringify!(IppLibraryVersion))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).major) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(major)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).minor) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(minor)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).majorBuild) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(majorBuild)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).build) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(build)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).targetCpu) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(targetCpu)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).Name) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(Name)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).Version) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(Version)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).BuildDate) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLibraryVersion),
            "::",
            stringify!(BuildDate)
        )
    );
}
pub type Ipp8u = ::std::os::raw::c_uchar;
pub type Ipp16u = ::std::os::raw::c_ushort;
pub type Ipp32u = ::std::os::raw::c_uint;
pub type Ipp8s = ::std::os::raw::c_schar;
pub type Ipp16s = ::std::os::raw::c_short;
pub type Ipp32s = ::std::os::raw::c_int;
pub type Ipp32f = f32;
pub type Ipp64s = ::std::os::raw::c_longlong;
pub type Ipp64u = ::std::os::raw::c_ulonglong;
pub type Ipp64f = f64;
pub type Ipp16f = Ipp16s;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp8sc {
    pub re: Ipp8s,
    pub im: Ipp8s,
}
#[test]
fn bindgen_test_layout_Ipp8sc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp8sc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp8sc>(),
        2usize,
        concat!("Size of: ", stringify!(Ipp8sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp8sc>(),
        1usize,
        concat!("Alignment of ", stringify!(Ipp8sc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp8sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp8sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp16sc {
    pub re: Ipp16s,
    pub im: Ipp16s,
}
#[test]
fn bindgen_test_layout_Ipp16sc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp16sc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp16sc>(),
        4usize,
        concat!("Size of: ", stringify!(Ipp16sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp16sc>(),
        2usize,
        concat!("Alignment of ", stringify!(Ipp16sc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp16uc {
    pub re: Ipp16u,
    pub im: Ipp16u,
}
#[test]
fn bindgen_test_layout_Ipp16uc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp16uc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp16uc>(),
        4usize,
        concat!("Size of: ", stringify!(Ipp16uc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp16uc>(),
        2usize,
        concat!("Alignment of ", stringify!(Ipp16uc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16uc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16uc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp32sc {
    pub re: Ipp32s,
    pub im: Ipp32s,
}
#[test]
fn bindgen_test_layout_Ipp32sc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp32sc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp32sc>(),
        8usize,
        concat!("Size of: ", stringify!(Ipp32sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp32sc>(),
        4usize,
        concat!("Alignment of ", stringify!(Ipp32sc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp16fc {
    pub re: Ipp16f,
    pub im: Ipp16f,
}
#[test]
fn bindgen_test_layout_Ipp16fc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp16fc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp16fc>(),
        4usize,
        concat!("Size of: ", stringify!(Ipp16fc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp16fc>(),
        2usize,
        concat!("Alignment of ", stringify!(Ipp16fc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16fc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp16fc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp32fc {
    pub re: Ipp32f,
    pub im: Ipp32f,
}
#[test]
fn bindgen_test_layout_Ipp32fc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp32fc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp32fc>(),
        8usize,
        concat!("Size of: ", stringify!(Ipp32fc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp32fc>(),
        4usize,
        concat!("Alignment of ", stringify!(Ipp32fc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32fc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp32fc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp64sc {
    pub re: Ipp64s,
    pub im: Ipp64s,
}
#[test]
fn bindgen_test_layout_Ipp64sc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp64sc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp64sc>(),
        16usize,
        concat!("Size of: ", stringify!(Ipp64sc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp64sc>(),
        8usize,
        concat!("Alignment of ", stringify!(Ipp64sc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64sc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64sc),
            "::",
            stringify!(im)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct Ipp64fc {
    pub re: Ipp64f,
    pub im: Ipp64f,
}
#[test]
fn bindgen_test_layout_Ipp64fc() {
    const UNINIT: ::std::mem::MaybeUninit<Ipp64fc> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<Ipp64fc>(),
        16usize,
        concat!("Size of: ", stringify!(Ipp64fc))
    );
    assert_eq!(
        ::std::mem::align_of::<Ipp64fc>(),
        8usize,
        concat!("Alignment of ", stringify!(Ipp64fc))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).re) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64fc),
            "::",
            stringify!(re)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).im) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Ipp64fc),
            "::",
            stringify!(im)
        )
    );
}
pub mod IppDataType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippUndef: Type = -1;
    pub const ipp1u: Type = 0;
    pub const ipp8u: Type = 1;
    pub const ipp8uc: Type = 2;
    pub const ipp8s: Type = 3;
    pub const ipp8sc: Type = 4;
    pub const ipp16u: Type = 5;
    pub const ipp16uc: Type = 6;
    pub const ipp16s: Type = 7;
    pub const ipp16sc: Type = 8;
    pub const ipp32u: Type = 9;
    pub const ipp32uc: Type = 10;
    pub const ipp32s: Type = 11;
    pub const ipp32sc: Type = 12;
    pub const ipp32f: Type = 13;
    pub const ipp32fc: Type = 14;
    pub const ipp64u: Type = 15;
    pub const ipp64uc: Type = 16;
    pub const ipp64s: Type = 17;
    pub const ipp64sc: Type = 18;
    pub const ipp64f: Type = 19;
    pub const ipp64fc: Type = 20;
    pub const ipp16fc: Type = 21;
}
pub mod IppBool {
    pub type Type = ::std::os::raw::c_int;
    pub const ippFalse: Type = 0;
    pub const ippTrue: Type = 1;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppCache {
    pub type_: ::std::os::raw::c_int,
    pub level: ::std::os::raw::c_int,
    pub size: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppCache() {
    const UNINIT: ::std::mem::MaybeUninit<IppCache> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppCache>(),
        12usize,
        concat!("Size of: ", stringify!(IppCache))
    );
    assert_eq!(
        ::std::mem::align_of::<IppCache>(),
        4usize,
        concat!("Alignment of ", stringify!(IppCache))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).type_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).level) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(level)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).size) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppCache),
            "::",
            stringify!(size)
        )
    );
}
pub mod IppRoundMode {
    pub type Type = ::std::os::raw::c_int;
    pub const ippRndZero: Type = 0;
    pub const ippRndNear: Type = 1;
    pub const ippRndFinancial: Type = 2;
    pub const ippRndHintAccurate: Type = 16;
}
pub mod IppHintAlgorithm {
    pub type Type = ::std::os::raw::c_int;
    pub const ippAlgHintNone: Type = 0;
    pub const ippAlgHintFast: Type = 1;
    pub const ippAlgHintAccurate: Type = 2;
}
pub mod IppCmpOp {
    pub type Type = ::std::os::raw::c_int;
    pub const ippCmpLess: Type = 0;
    pub const ippCmpLessEq: Type = 1;
    pub const ippCmpEq: Type = 2;
    pub const ippCmpGreaterEq: Type = 3;
    pub const ippCmpGreater: Type = 4;
}
pub mod IppAlgType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippAlgAuto: Type = 0;
    pub const ippAlgDirect: Type = 1;
    pub const ippAlgFFT: Type = 2;
    pub const ippAlgMask: Type = 255;
}
pub mod IppsNormOp {
    pub type Type = ::std::os::raw::c_int;
    pub const ippsNormNone: Type = 0;
    pub const ippsNormA: Type = 256;
    pub const ippsNormB: Type = 512;
    pub const ippsNormMask: Type = 65280;
}
pub mod IppNormType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippNormInf: Type = 1;
    pub const ippNormL1: Type = 2;
    pub const ippNormL2: Type = 4;
}
pub mod _bindgen_ty_1 {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_FFT_DIV_FWD_BY_N: Type = 1;
    pub const IPP_FFT_DIV_INV_BY_N: Type = 2;
    pub const IPP_FFT_DIV_BY_SQRTN: Type = 4;
    pub const IPP_FFT_NODIV_BY_ANY: Type = 8;
}
pub mod _bindgen_ty_2 {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_DIV_FWD_BY_N: Type = 1;
    pub const IPP_DIV_INV_BY_N: Type = 2;
    pub const IPP_DIV_BY_SQRTN: Type = 4;
    pub const IPP_NODIV_BY_ANY: Type = 8;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppPointPolar {
    pub rho: Ipp32f,
    pub theta: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppPointPolar() {
    const UNINIT: ::std::mem::MaybeUninit<IppPointPolar> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppPointPolar>(),
        8usize,
        concat!("Size of: ", stringify!(IppPointPolar))
    );
    assert_eq!(
        ::std::mem::align_of::<IppPointPolar>(),
        4usize,
        concat!("Alignment of ", stringify!(IppPointPolar))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rho) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppPointPolar),
            "::",
            stringify!(rho)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).theta) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppPointPolar),
            "::",
            stringify!(theta)
        )
    );
}
pub mod IppWinType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippWinBartlett: Type = 0;
    pub const ippWinBlackman: Type = 1;
    pub const ippWinHamming: Type = 2;
    pub const ippWinHann: Type = 3;
    pub const ippWinRect: Type = 4;
}
pub mod IppsIIRFilterType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippButterworth: Type = 0;
    pub const ippChebyshev1: Type = 1;
}
pub mod IppsZCType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippZCR: Type = 0;
    pub const ippZCXor: Type = 1;
    pub const ippZCC: Type = 2;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppsROI {
    pub left: ::std::os::raw::c_int,
    pub right: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppsROI() {
    const UNINIT: ::std::mem::MaybeUninit<IppsROI> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppsROI>(),
        8usize,
        concat!("Size of: ", stringify!(IppsROI))
    );
    assert_eq!(
        ::std::mem::align_of::<IppsROI>(),
        4usize,
        concat!("Alignment of ", stringify!(IppsROI))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).left) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppsROI),
            "::",
            stringify!(left)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).right) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppsROI),
            "::",
            stringify!(right)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_8u {
    _unused: [u8; 0],
}
pub type IppsRandUniState_8u = RandUniState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_16s {
    _unused: [u8; 0],
}
pub type IppsRandUniState_16s = RandUniState_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_32f {
    _unused: [u8; 0],
}
pub type IppsRandUniState_32f = RandUniState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandUniState_64f {
    _unused: [u8; 0],
}
pub type IppsRandUniState_64f = RandUniState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_8u {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_8u = RandGaussState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_16s {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_16s = RandGaussState_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_32f {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_32f = RandGaussState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RandGaussState_64f {
    _unused: [u8; 0],
}
pub type IppsRandGaussState_64f = RandGaussState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_16fc {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_16fc = FFTSpec_C_16fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_32fc = FFTSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_32f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_32f = FFTSpec_C_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_R_32f = FFTSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_64fc {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_64fc = FFTSpec_C_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_C_64f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_C_64f = FFTSpec_C_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFTSpec_R_64f {
    _unused: [u8; 0],
}
pub type IppsFFTSpec_R_64f = FFTSpec_R_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_16fc {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_16fc = DFTSpec_C_16fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_32fc = DFTSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_32f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_32f = DFTSpec_C_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_R_32f = DFTSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_64fc {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_64fc = DFTSpec_C_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_C_64f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_C_64f = DFTSpec_C_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFTSpec_R_64f {
    _unused: [u8; 0],
}
pub type IppsDFTSpec_R_64f = DFTSpec_R_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTFwdSpec_32f {
    _unused: [u8; 0],
}
pub type IppsDCTFwdSpec_32f = DCTFwdSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTInvSpec_32f {
    _unused: [u8; 0],
}
pub type IppsDCTInvSpec_32f = DCTInvSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTFwdSpec_64f {
    _unused: [u8; 0],
}
pub type IppsDCTFwdSpec_64f = DCTFwdSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCTInvSpec_64f {
    _unused: [u8; 0],
}
pub type IppsDCTInvSpec_64f = DCTInvSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_32f = sWTFwdState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_8u32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_8u32f = sWTFwdState_8u32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_16s32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_16s32f = sWTFwdState_16s32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTFwdState_16u32f {
    _unused: [u8; 0],
}
pub type IppsWTFwdState_16u32f = sWTFwdState_16u32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f = sWTInvState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f8u {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f8u = sWTInvState_32f8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f16s {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f16s = sWTInvState_32f16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sWTInvState_32f16u {
    _unused: [u8; 0],
}
pub type IppsWTInvState_32f16u = sWTInvState_32f16u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_32f {
    _unused: [u8; 0],
}
pub type IppsIIRState_32f = IIRState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_32fc {
    _unused: [u8; 0],
}
pub type IppsIIRState_32fc = IIRState_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState32f_16s {
    _unused: [u8; 0],
}
pub type IppsIIRState32f_16s = IIRState32f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState32fc_16sc {
    _unused: [u8; 0],
}
pub type IppsIIRState32fc_16sc = IIRState32fc_16sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_64f {
    _unused: [u8; 0],
}
pub type IppsIIRState_64f = IIRState_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState_64fc {
    _unused: [u8; 0],
}
pub type IppsIIRState_64fc = IIRState_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_32f {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_32f = IIRState64f_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_32fc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_32fc = IIRState64fc_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_32s {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_32s = IIRState64f_32s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_32sc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_32sc = IIRState64fc_32sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64f_16s {
    _unused: [u8; 0],
}
pub type IppsIIRState64f_16s = IIRState64f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRState64fc_16sc {
    _unused: [u8; 0],
}
pub type IppsIIRState64fc_16sc = IIRState64fc_16sc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_32f {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_32f = FIRSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_64f {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_64f = FIRSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_32fc = FIRSpec_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec_64fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec_64fc = FIRSpec_64fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSpec32f_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSpec32f_32fc = FIRSpec32f_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRLMSState_32f {
    _unused: [u8; 0],
}
pub type IppsFIRLMSState_32f = FIRLMSState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRLMSState32f_16s {
    _unused: [u8; 0],
}
pub type IppsFIRLMSState32f_16s = FIRLMSState32f_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HilbertSpec {
    _unused: [u8; 0],
}
pub type IppsHilbertSpec = HilbertSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSparseState_32f {
    _unused: [u8; 0],
}
pub type IppsFIRSparseState_32f = FIRSparseState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IIRSparseState_32f {
    _unused: [u8; 0],
}
pub type IppsIIRSparseState_32f = IIRSparseState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FIRSparseState_32fc {
    _unused: [u8; 0],
}
pub type IppsFIRSparseState_32fc = FIRSparseState_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphase_16s {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphase_16s = ResamplingPolyphase_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphaseFixed_16s {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphaseFixed_16s = ResamplingPolyphaseFixed_16s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphase_32f {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphase_32f = ResamplingPolyphase_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResamplingPolyphaseFixed_32f {
    _unused: [u8; 0],
}
pub type IppsResamplingPolyphaseFixed_32f = ResamplingPolyphaseFixed_32f;
pub type IppEnum = ::std::os::raw::c_int;
pub mod IppiNormOp {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiNormNone: Type = 0;
    pub const ippiNorm: Type = 256;
    pub const ippiNormCoefficient: Type = 512;
    pub const ippiNormMask: Type = 65280;
}
pub mod IppiROIShape {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiROIFull: Type = 0;
    pub const ippiROIValid: Type = 65536;
    pub const ippiROISame: Type = 131072;
    pub const ippiROIMask: Type = 16711680;
}
pub mod IppChannels {
    pub type Type = ::std::os::raw::c_int;
    pub const ippC0: Type = 0;
    pub const ippC1: Type = 1;
    pub const ippC2: Type = 2;
    pub const ippC3: Type = 3;
    pub const ippC4: Type = 4;
    pub const ippP2: Type = 5;
    pub const ippP3: Type = 6;
    pub const ippP4: Type = 7;
    pub const ippAC1: Type = 8;
    pub const ippAC4: Type = 9;
    pub const ippA0C4: Type = 10;
    pub const ippAP4: Type = 11;
}
pub mod _IppiBorderType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippBorderRepl: Type = 1;
    pub const ippBorderWrap: Type = 2;
    pub const ippBorderMirror: Type = 3;
    pub const ippBorderMirrorR: Type = 4;
    pub const ippBorderDefault: Type = 5;
    pub const ippBorderConst: Type = 6;
    pub const ippBorderTransp: Type = 7;
    pub const ippBorderInMemTop: Type = 16;
    pub const ippBorderInMemBottom: Type = 32;
    pub const ippBorderInMemLeft: Type = 64;
    pub const ippBorderInMemRight: Type = 128;
    pub const ippBorderInMem: Type = 240;
    pub const ippBorderFirstStageInMemTop: Type = 256;
    pub const ippBorderFirstStageInMemBottom: Type = 512;
    pub const ippBorderFirstStageInMemLeft: Type = 1024;
    pub const ippBorderFirstStageInMemRight: Type = 2048;
    pub const ippBorderFirstStageInMem: Type = 3840;
}
pub use self::_IppiBorderType::Type as IppiBorderType;
pub mod IppiAxis {
    pub type Type = ::std::os::raw::c_int;
    pub const ippAxsHorizontal: Type = 0;
    pub const ippAxsVertical: Type = 1;
    pub const ippAxsBoth: Type = 2;
    pub const ippAxs45: Type = 3;
    pub const ippAxs135: Type = 4;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiRect {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiRect() {
    const UNINIT: ::std::mem::MaybeUninit<IppiRect> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiRect>(),
        16usize,
        concat!("Size of: ", stringify!(IppiRect))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiRect>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiRect))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRect),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiPoint {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiPoint() {
    const UNINIT: ::std::mem::MaybeUninit<IppiPoint> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiPoint>(),
        8usize,
        concat!("Size of: ", stringify!(IppiPoint))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPoint>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiPoint))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiSize {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppiSize() {
    const UNINIT: ::std::mem::MaybeUninit<IppiSize> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiSize>(),
        8usize,
        concat!("Size of: ", stringify!(IppiSize))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiSize>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiSize))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSize),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSize),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiPoint_32f {
    pub x: Ipp32f,
    pub y: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppiPoint_32f() {
    const UNINIT: ::std::mem::MaybeUninit<IppiPoint_32f> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiPoint_32f>(),
        8usize,
        concat!("Size of: ", stringify!(IppiPoint_32f))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPoint_32f>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiPoint_32f))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint_32f),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPoint_32f),
            "::",
            stringify!(y)
        )
    );
}
pub mod _IppiMaskSize {
    pub type Type = ::std::os::raw::c_int;
    pub const ippMskSize1x3: Type = 13;
    pub const ippMskSize1x5: Type = 15;
    pub const ippMskSize3x1: Type = 31;
    pub const ippMskSize3x3: Type = 33;
    pub const ippMskSize5x1: Type = 51;
    pub const ippMskSize5x5: Type = 55;
}
pub use self::_IppiMaskSize::Type as IppiMaskSize;
pub mod _bindgen_ty_3 {
    pub type Type = ::std::os::raw::c_int;
    pub const IPPI_INTER_NN: Type = 1;
    pub const IPPI_INTER_LINEAR: Type = 2;
    pub const IPPI_INTER_CUBIC: Type = 4;
    pub const IPPI_INTER_CUBIC2P_BSPLINE: Type = 5;
    pub const IPPI_INTER_CUBIC2P_CATMULLROM: Type = 6;
    pub const IPPI_INTER_CUBIC2P_B05C03: Type = 7;
    pub const IPPI_INTER_SUPER: Type = 8;
    pub const IPPI_INTER_LANCZOS: Type = 16;
    pub const IPPI_ANTIALIASING: Type = 536870912;
    pub const IPPI_SUBPIXEL_EDGE: Type = 1073741824;
    pub const IPPI_SMOOTH_EDGE: Type = -2147483648;
}
pub mod IppiInterpolationType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippNearest: Type = 1;
    pub const ippLinear: Type = 2;
    pub const ippCubic: Type = 6;
    pub const ippLanczos: Type = 16;
    pub const ippHahn: Type = 0;
    pub const ippSuper: Type = 8;
}
pub mod IppiFraction {
    pub type Type = ::std::os::raw::c_int;
    pub const ippPolyphase_1_2: Type = 0;
    pub const ippPolyphase_3_5: Type = 1;
    pub const ippPolyphase_2_3: Type = 2;
    pub const ippPolyphase_7_10: Type = 3;
    pub const ippPolyphase_3_4: Type = 4;
}
pub mod _bindgen_ty_4 {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_FASTN_ORIENTATION: Type = 1;
    pub const IPP_FASTN_NMS: Type = 2;
    pub const IPP_FASTN_CIRCLE: Type = 4;
    pub const IPP_FASTN_SCORE_MODE0: Type = 32;
}
pub mod IppiAlphaType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippAlphaOver: Type = 0;
    pub const ippAlphaIn: Type = 1;
    pub const ippAlphaOut: Type = 2;
    pub const ippAlphaATop: Type = 3;
    pub const ippAlphaXor: Type = 4;
    pub const ippAlphaPlus: Type = 5;
    pub const ippAlphaOverPremul: Type = 6;
    pub const ippAlphaInPremul: Type = 7;
    pub const ippAlphaOutPremul: Type = 8;
    pub const ippAlphaATopPremul: Type = 9;
    pub const ippAlphaXorPremul: Type = 10;
    pub const ippAlphaPlusPremul: Type = 11;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvFFTState_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiDeconvFFTState_32f_C1R = DeconvFFTState_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvFFTState_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiDeconvFFTState_32f_C3R = DeconvFFTState_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvLR_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiDeconvLR_32f_C1R = DeconvLR_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DeconvLR_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiDeconvLR_32f_C3R = DeconvLR_32f_C3R;
pub mod IppiFilterBilateralType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiFilterBilateralGauss: Type = 100;
    pub const ippiFilterBilateralGaussFast: Type = 101;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralSpec {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec = FilterBilateralSpec;
pub mod IppiFilterILSType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiFilterILS_Norm: Type = 100;
    pub const ippiFilterILS_Welsch: Type = 101;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterILSSpec {
    _unused: [u8; 0],
}
pub type IppiFilterILSSpec = FilterILSSpec;
pub mod IppiDistanceMethodType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippDistNormL1: Type = 2;
    pub const ippDistNormL2: Type = 4;
}
pub mod IppiResizeFilterType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippResizeFilterHann: Type = 0;
    pub const ippResizeFilterLanczos: Type = 1;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeFilterState {
    _unused: [u8; 0],
}
pub type IppiResizeFilterState = ResizeFilterState;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiBorderSize {
    pub borderLeft: Ipp32u,
    pub borderTop: Ipp32u,
    pub borderRight: Ipp32u,
    pub borderBottom: Ipp32u,
}
#[test]
fn bindgen_test_layout_IppiBorderSize() {
    const UNINIT: ::std::mem::MaybeUninit<IppiBorderSize> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiBorderSize>(),
        16usize,
        concat!("Size of: ", stringify!(IppiBorderSize))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiBorderSize>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiBorderSize))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).borderLeft) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderLeft)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).borderTop) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderTop)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).borderRight) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderRight)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).borderBottom) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiBorderSize),
            "::",
            stringify!(borderBottom)
        )
    );
}
pub mod IppiWarpDirection {
    pub type Type = ::std::os::raw::c_int;
    pub const ippWarpForward: Type = 0;
    pub const ippWarpBackward: Type = 1;
}
pub mod IppiWarpTransformType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippWarpAffine: Type = 0;
    pub const ippWarpPerspective: Type = 1;
    pub const ippWarpBilinear: Type = 2;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_32f {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_32f = ResizeSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeYUV422Spec {
    _unused: [u8; 0],
}
pub type IppiResizeYUV422Spec = ResizeYUV422Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeYUV420Spec {
    _unused: [u8; 0],
}
pub type IppiResizeYUV420Spec = ResizeYUV420Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_64f {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_64f = ResizeSpec_64f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IppiWarpSpec {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBorderSpec {
    _unused: [u8; 0],
}
pub type IppiFilterBorderSpec = FilterBorderSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ThresholdAdaptiveSpec {
    _unused: [u8; 0],
}
pub type IppiThresholdAdaptiveSpec = ThresholdAdaptiveSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HistogramSpec {
    _unused: [u8; 0],
}
pub type IppiHistogramSpec = HistogramSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiHOGConfig {
    pub cvCompatible: ::std::os::raw::c_int,
    pub cellSize: ::std::os::raw::c_int,
    pub blockSize: ::std::os::raw::c_int,
    pub blockStride: ::std::os::raw::c_int,
    pub nbins: ::std::os::raw::c_int,
    pub sigma: Ipp32f,
    pub l2thresh: Ipp32f,
    pub winSize: IppiSize,
}
#[test]
fn bindgen_test_layout_IppiHOGConfig() {
    const UNINIT: ::std::mem::MaybeUninit<IppiHOGConfig> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiHOGConfig>(),
        36usize,
        concat!("Size of: ", stringify!(IppiHOGConfig))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiHOGConfig>(),
        4usize,
        concat!("Alignment of ", stringify!(IppiHOGConfig))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).cvCompatible) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(cvCompatible)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).cellSize) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(cellSize)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).blockSize) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(blockSize)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).blockStride) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(blockStride)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).nbins) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(nbins)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).sigma) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(sigma)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).l2thresh) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(l2thresh)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).winSize) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiHOGConfig),
            "::",
            stringify!(winSize)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFT2DSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppiFFTSpec_C_32fc = FFT2DSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FFT2DSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppiFFTSpec_R_32f = FFT2DSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFT2DSpec_C_32fc {
    _unused: [u8; 0],
}
pub type IppiDFTSpec_C_32fc = DFT2DSpec_C_32fc;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DFT2DSpec_R_32f {
    _unused: [u8; 0],
}
pub type IppiDFTSpec_R_32f = DFT2DSpec_R_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCT2DFwdSpec_32f {
    _unused: [u8; 0],
}
pub type IppiDCTFwdSpec_32f = DCT2DFwdSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DCT2DInvSpec_32f {
    _unused: [u8; 0],
}
pub type IppiDCTInvSpec_32f = DCT2DInvSpec_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTFwdSpec_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiWTFwdSpec_32f_C1R = iWTFwdSpec_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTInvSpec_32f_C1R {
    _unused: [u8; 0],
}
pub type IppiWTInvSpec_32f_C1R = iWTInvSpec_32f_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTFwdSpec_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiWTFwdSpec_32f_C3R = iWTFwdSpec_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct iWTInvSpec_32f_C3R {
    _unused: [u8; 0],
}
pub type IppiWTInvSpec_32f_C3R = iWTInvSpec_32f_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MomentState64f {
    _unused: [u8; 0],
}
pub type IppiMomentState_64f = MomentState64f;
pub type IppiHuMoment_64f = [Ipp64f; 7usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LUT_Spec {
    _unused: [u8; 0],
}
pub type IppiLUT_Spec = LUT_Spec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _ipHOG {
    _unused: [u8; 0],
}
pub type IppiHOGSpec = _ipHOG;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IpprVolume {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub depth: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprVolume() {
    const UNINIT: ::std::mem::MaybeUninit<IpprVolume> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IpprVolume>(),
        12usize,
        concat!("Size of: ", stringify!(IpprVolume))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprVolume>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprVolume))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).depth) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolume),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IpprCuboid {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub depth: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprCuboid() {
    const UNINIT: ::std::mem::MaybeUninit<IpprCuboid> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IpprCuboid>(),
        24usize,
        concat!("Size of: ", stringify!(IpprCuboid))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprCuboid>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprCuboid))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(z)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).depth) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprCuboid),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IpprPoint {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub z: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IpprPoint() {
    const UNINIT: ::std::mem::MaybeUninit<IpprPoint> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IpprPoint>(),
        12usize,
        concat!("Size of: ", stringify!(IpprPoint))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprPoint>(),
        4usize,
        concat!("Alignment of ", stringify!(IpprPoint))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPoint),
            "::",
            stringify!(z)
        )
    );
}
pub mod _IppiDifferentialKernel {
    pub type Type = ::std::os::raw::c_int;
    pub const ippFilterSobelVert: Type = 0;
    pub const ippFilterSobelHoriz: Type = 1;
    pub const ippFilterSobel: Type = 2;
    pub const ippFilterScharrVert: Type = 3;
    pub const ippFilterScharrHoriz: Type = 4;
    pub const ippFilterScharr: Type = 5;
    pub const ippFilterCentralDiffVert: Type = 6;
    pub const ippFilterCentralDiffHoriz: Type = 7;
    pub const ippFilterCentralDiff: Type = 8;
}
pub use self::_IppiDifferentialKernel::Type as IppiDifferentialKernel;
pub mod _IppiKernelType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippKernelSobel: Type = 0;
    pub const ippKernelScharr: Type = 1;
    pub const ippKernelSobelNeg: Type = 2;
}
pub use self::_IppiKernelType::Type as IppiKernelType;
pub mod _IppiNorm {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiNormInf: Type = 0;
    pub const ippiNormL1: Type = 1;
    pub const ippiNormL2: Type = 2;
    pub const ippiNormFM: Type = 3;
}
pub use self::_IppiNorm::Type as IppiNorm;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphState {
    _unused: [u8; 0],
}
pub type IppiMorphState = ipcvMorphState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphStateL {
    _unused: [u8; 0],
}
pub type IppiMorphStateL = ipcvMorphStateL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphAdvState {
    _unused: [u8; 0],
}
pub type IppiMorphAdvState = ipcvMorphAdvState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphAdvStateL {
    _unused: [u8; 0],
}
pub type IppiMorphAdvStateL = ipcvMorphAdvStateL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_8u {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_8u = ipcvMorphGrayState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_8uL {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_8uL = ipcvMorphGrayState_8uL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_32f {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_32f = ipcvMorphGrayState_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvMorphGrayState_32fL {
    _unused: [u8; 0],
}
pub type IppiMorphGrayState_32fL = ipcvMorphGrayState_32fL;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvConvState {
    _unused: [u8; 0],
}
pub type IppiConvState = ipcvConvState;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct _IppiConnectedComp {
    pub area: Ipp64f,
    pub value: [Ipp64f; 3usize],
    pub rect: IppiRect,
}
#[test]
fn bindgen_test_layout__IppiConnectedComp() {
    const UNINIT: ::std::mem::MaybeUninit<_IppiConnectedComp> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<_IppiConnectedComp>(),
        48usize,
        concat!("Size of: ", stringify!(_IppiConnectedComp))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiConnectedComp>(),
        8usize,
        concat!("Alignment of ", stringify!(_IppiConnectedComp))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).area) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(area)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).value) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(value)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).rect) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiConnectedComp),
            "::",
            stringify!(rect)
        )
    );
}
pub type IppiConnectedComp = _IppiConnectedComp;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyramidState {
    _unused: [u8; 0],
}
pub type IppiPyramidState = PyramidState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSeparableSpec {
    _unused: [u8; 0],
}
pub type IppiFilterSeparableSpec = FilterSeparableSpec;
pub type IppiPyramidDownState_8u_C1R = IppiPyramidState;
pub type IppiPyramidDownState_16u_C1R = IppiPyramidState;
pub type IppiPyramidDownState_32f_C1R = IppiPyramidState;
pub type IppiPyramidDownState_8u_C3R = IppiPyramidState;
pub type IppiPyramidDownState_16u_C3R = IppiPyramidState;
pub type IppiPyramidDownState_32f_C3R = IppiPyramidState;
pub type IppiPyramidUpState_8u_C1R = IppiPyramidState;
pub type IppiPyramidUpState_16u_C1R = IppiPyramidState;
pub type IppiPyramidUpState_32f_C1R = IppiPyramidState;
pub type IppiPyramidUpState_8u_C3R = IppiPyramidState;
pub type IppiPyramidUpState_16u_C3R = IppiPyramidState;
pub type IppiPyramidUpState_32f_C3R = IppiPyramidState;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct _IppiPyramid {
    pub pImage: *mut *mut Ipp8u,
    pub pRoi: *mut IppiSize,
    pub pRate: *mut Ipp64f,
    pub pStep: *mut ::std::os::raw::c_int,
    pub pState: *mut Ipp8u,
    pub level: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout__IppiPyramid() {
    const UNINIT: ::std::mem::MaybeUninit<_IppiPyramid> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<_IppiPyramid>(),
        48usize,
        concat!("Size of: ", stringify!(_IppiPyramid))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiPyramid>(),
        8usize,
        concat!("Alignment of ", stringify!(_IppiPyramid))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pImage) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pImage)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pRoi) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pRoi)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pRate) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pRate)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pStep) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pStep)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pState) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(pState)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).level) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramid),
            "::",
            stringify!(level)
        )
    );
}
pub type IppiPyramid = _IppiPyramid;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct OptFlowPyrLK {
    _unused: [u8; 0],
}
pub type IppiOptFlowPyrLK = OptFlowPyrLK;
pub type IppiOptFlowPyrLK_8u_C1R = IppiOptFlowPyrLK;
pub type IppiOptFlowPyrLK_16u_C1R = IppiOptFlowPyrLK;
pub type IppiOptFlowPyrLK_32f_C1R = IppiOptFlowPyrLK;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvHaarClassifier_32f {
    _unused: [u8; 0],
}
pub type IppiHaarClassifier_32f = ipcvHaarClassifier_32f;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvHaarClassifier_32s {
    _unused: [u8; 0],
}
pub type IppiHaarClassifier_32s = ipcvHaarClassifier_32s;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGHistogramState_8u_C1R {
    _unused: [u8; 0],
}
pub type IppFGHistogramState_8u_C1R = ipcvFGHistogramState_8u_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGHistogramState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGHistogramState_8u_C3R = ipcvFGHistogramState_8u_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGGaussianState_8u_C1R {
    _unused: [u8; 0],
}
pub type IppFGGaussianState_8u_C1R = ipcvFGGaussianState_8u_C1R;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvFGGaussianState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGGaussianState_8u_C3R = ipcvFGGaussianState_8u_C3R;
pub mod _IppiInpaintFlag {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_INPAINT_TELEA: Type = 0;
    pub const IPP_INPAINT_NS: Type = 1;
}
pub use self::_IppiInpaintFlag::Type as IppiInpaintFlag;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ippcvFilterGaussianSpec {
    _unused: [u8; 0],
}
pub type IppFilterGaussianSpec = ippcvFilterGaussianSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ipcvInpaintState_8u {
    _unused: [u8; 0],
}
pub type IppiInpaintState_8u_C1R = ipcvInpaintState_8u;
pub type IppiInpaintState_8u_C3R = ipcvInpaintState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct HoughProbSpec {
    _unused: [u8; 0],
}
pub type IppiHoughProbSpec = HoughProbSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FastNSpec {
    _unused: [u8; 0],
}
pub type IppiFastNSpec = FastNSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct _IppiCornerFastN {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub cornerType: ::std::os::raw::c_int,
    pub orientation: ::std::os::raw::c_int,
    pub angle: f32,
    pub score: f32,
}
#[test]
fn bindgen_test_layout__IppiCornerFastN() {
    const UNINIT: ::std::mem::MaybeUninit<_IppiCornerFastN> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<_IppiCornerFastN>(),
        24usize,
        concat!("Size of: ", stringify!(_IppiCornerFastN))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiCornerFastN>(),
        4usize,
        concat!("Alignment of ", stringify!(_IppiCornerFastN))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).cornerType) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(cornerType)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).orientation) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(orientation)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).angle) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(angle)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).score) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiCornerFastN),
            "::",
            stringify!(score)
        )
    );
}
pub type IppiCornerFastN = _IppiCornerFastN;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FGMMState_8u_C3R {
    _unused: [u8; 0],
}
pub type IppFGMMState_8u_C3R = FGMMState_8u_C3R;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppFGMModel {
    pub numFrames: ::std::os::raw::c_uint,
    pub maxNGauss: ::std::os::raw::c_uint,
    pub varInit: Ipp32f,
    pub varMin: Ipp32f,
    pub varMax: Ipp32f,
    pub varWBRatio: Ipp32f,
    pub bckgThr: Ipp32f,
    pub varNGRatio: Ipp32f,
    pub reduction: Ipp32f,
    pub shadowValue: Ipp8u,
    pub shadowFlag: ::std::os::raw::c_char,
    pub shadowRatio: Ipp32f,
}
#[test]
fn bindgen_test_layout_IppFGMModel() {
    const UNINIT: ::std::mem::MaybeUninit<IppFGMModel> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppFGMModel>(),
        44usize,
        concat!("Size of: ", stringify!(IppFGMModel))
    );
    assert_eq!(
        ::std::mem::align_of::<IppFGMModel>(),
        4usize,
        concat!("Alignment of ", stringify!(IppFGMModel))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).numFrames) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(numFrames)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).maxNGauss) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(maxNGauss)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).varInit) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varInit)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).varMin) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varMin)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).varMax) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varMax)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).varWBRatio) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varWBRatio)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).bckgThr) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(bckgThr)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).varNGRatio) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(varNGRatio)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).reduction) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(reduction)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).shadowValue) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowValue)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).shadowFlag) as usize - ptr as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowFlag)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).shadowRatio) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(IppFGMModel),
            "::",
            stringify!(shadowRatio)
        )
    );
}
pub mod _bindgen_ty_5 {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_UPPER: Type = 1;
    pub const IPP_LEFT: Type = 2;
    pub const IPP_CENTER: Type = 4;
    pub const IPP_RIGHT: Type = 8;
    pub const IPP_LOWER: Type = 16;
    pub const IPP_UPPER_LEFT: Type = 32;
    pub const IPP_UPPER_RIGHT: Type = 64;
    pub const IPP_LOWER_LEFT: Type = 128;
    pub const IPP_LOWER_RIGHT: Type = 256;
}
pub mod IppiDitherType {
    pub type Type = ::std::os::raw::c_int;
    pub const ippDitherNone: Type = 0;
    pub const ippDitherFS: Type = 1;
    pub const ippDitherJJN: Type = 2;
    pub const ippDitherStucki: Type = 3;
    pub const ippDitherBayer: Type = 4;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppRegExpFind {
    pub pFind: *mut ::std::os::raw::c_void,
    pub lenFind: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_IppRegExpFind() {
    const UNINIT: ::std::mem::MaybeUninit<IppRegExpFind> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppRegExpFind>(),
        16usize,
        concat!("Size of: ", stringify!(IppRegExpFind))
    );
    assert_eq!(
        ::std::mem::align_of::<IppRegExpFind>(),
        8usize,
        concat!("Alignment of ", stringify!(IppRegExpFind))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pFind) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppRegExpFind),
            "::",
            stringify!(pFind)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).lenFind) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppRegExpFind),
            "::",
            stringify!(lenFind)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RegExpState {
    _unused: [u8; 0],
}
pub type IppRegExpState = RegExpState;
pub mod IppRegExpFormat {
    pub type Type = ::std::os::raw::c_int;
    pub const ippFmtASCII: Type = 0;
    pub const ippFmtUTF8: Type = 1;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RegExpReplaceState {
    _unused: [u8; 0],
}
pub type IppRegExpReplaceState = RegExpReplaceState;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct MTFState_8u {
    _unused: [u8; 0],
}
pub type IppMTFState_8u = MTFState_8u;
pub mod IppBWTSortAlgorithmHint {
    pub type Type = ::std::os::raw::c_int;
    pub const ippBWTItohTanakaLimSort: Type = 0;
    pub const ippBWTItohTanakaUnlimSort: Type = 1;
    pub const ippBWTSuffixSort: Type = 2;
    pub const ippBWTAutoSort: Type = 3;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZSSState_8u {
    _unused: [u8; 0],
}
pub type IppLZSSState_8u = LZSSState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZ77State_8u {
    _unused: [u8; 0],
}
pub type IppLZ77State_8u = LZ77State_8u;
pub mod IppLZ77ComprLevel {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77FastCompr: Type = 0;
    pub const IppLZ77AverageCompr: Type = 1;
    pub const IppLZ77BestCompr: Type = 2;
}
pub mod IppLZ77Chcksm {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77NoChcksm: Type = 0;
    pub const IppLZ77Adler32: Type = 1;
    pub const IppLZ77CRC32: Type = 2;
}
pub mod IppLZ77Flush {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77NoFlush: Type = 0;
    pub const IppLZ77SyncFlush: Type = 1;
    pub const IppLZ77FullFlush: Type = 2;
    pub const IppLZ77FinishFlush: Type = 3;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppLZ77Pairs_16u {
    pub length: Ipp16u,
    pub offset: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppLZ77Pairs_16u() {
    const UNINIT: ::std::mem::MaybeUninit<IppLZ77Pairs_16u> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppLZ77Pairs_16u>(),
        4usize,
        concat!("Size of: ", stringify!(IppLZ77Pairs_16u))
    );
    assert_eq!(
        ::std::mem::align_of::<IppLZ77Pairs_16u>(),
        2usize,
        concat!("Alignment of ", stringify!(IppLZ77Pairs_16u))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).length) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLZ77Pairs_16u),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).offset) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppLZ77Pairs_16u),
            "::",
            stringify!(offset)
        )
    );
}
pub type IppLZ77Pair = IppLZ77Pairs_16u;
pub mod IppLZ77DeflateStatus {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77StatusInit: Type = 0;
    pub const IppLZ77StatusLZ77Process: Type = 1;
    pub const IppLZ77StatusHuffProcess: Type = 2;
    pub const IppLZ77StatusFinal: Type = 3;
}
pub mod IppLZ77HuffMode {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77UseFixed: Type = 0;
    pub const IppLZ77UseDynamic: Type = 1;
    pub const IppLZ77UseStored: Type = 2;
}
pub mod IppLZ77InflateStatus {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZ77InflateStatusInit: Type = 0;
    pub const IppLZ77InflateStatusHuffProcess: Type = 1;
    pub const IppLZ77InflateStatusLZ77Process: Type = 2;
    pub const IppLZ77InflateStatusFinal: Type = 3;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppInflateState {
    pub pWindow: *const Ipp8u,
    pub winSize: ::std::os::raw::c_uint,
    pub tableType: ::std::os::raw::c_uint,
    pub tableBufferSize: ::std::os::raw::c_uint,
}
#[test]
fn bindgen_test_layout_IppInflateState() {
    const UNINIT: ::std::mem::MaybeUninit<IppInflateState> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppInflateState>(),
        24usize,
        concat!("Size of: ", stringify!(IppInflateState))
    );
    assert_eq!(
        ::std::mem::align_of::<IppInflateState>(),
        8usize,
        concat!("Alignment of ", stringify!(IppInflateState))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pWindow) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(pWindow)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).winSize) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(winSize)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tableType) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(tableType)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).tableBufferSize) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppInflateState),
            "::",
            stringify!(tableBufferSize)
        )
    );
}
pub mod IppInflateMode {
    pub type Type = ::std::os::raw::c_int;
    pub const ippTYPE: Type = 0;
    pub const ippLEN: Type = 1;
    pub const ippLENEXT: Type = 2;
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppDeflateFreqTable {
    pub freq: Ipp16u,
    pub code: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppDeflateFreqTable() {
    const UNINIT: ::std::mem::MaybeUninit<IppDeflateFreqTable> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppDeflateFreqTable>(),
        4usize,
        concat!("Size of: ", stringify!(IppDeflateFreqTable))
    );
    assert_eq!(
        ::std::mem::align_of::<IppDeflateFreqTable>(),
        2usize,
        concat!("Alignment of ", stringify!(IppDeflateFreqTable))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).freq) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateFreqTable),
            "::",
            stringify!(freq)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).code) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateFreqTable),
            "::",
            stringify!(code)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppDeflateHuffCode {
    pub code: Ipp16u,
    pub len: Ipp16u,
}
#[test]
fn bindgen_test_layout_IppDeflateHuffCode() {
    const UNINIT: ::std::mem::MaybeUninit<IppDeflateHuffCode> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppDeflateHuffCode>(),
        4usize,
        concat!("Size of: ", stringify!(IppDeflateHuffCode))
    );
    assert_eq!(
        ::std::mem::align_of::<IppDeflateHuffCode>(),
        2usize,
        concat!("Alignment of ", stringify!(IppDeflateHuffCode))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).code) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateHuffCode),
            "::",
            stringify!(code)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).len) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(IppDeflateHuffCode),
            "::",
            stringify!(len)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RLEState_BZ2 {
    _unused: [u8; 0],
}
pub type IppRLEState_BZ2 = RLEState_BZ2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct EncodeHuffState_BZ2 {
    _unused: [u8; 0],
}
pub type IppEncodeHuffState_BZ2 = EncodeHuffState_BZ2;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct DecodeHuffState_BZ2 {
    _unused: [u8; 0],
}
pub type IppDecodeHuffState_BZ2 = DecodeHuffState_BZ2;
pub mod IppLZOMethod {
    pub type Type = ::std::os::raw::c_int;
    pub const IppLZO1XST: Type = 0;
    pub const IppLZO1XMT: Type = 1;
    pub const IppLZO1X1ST: Type = 2;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct LZOState_8u {
    _unused: [u8; 0],
}
pub type IppLZOState_8u = LZOState_8u;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ZfpState_32f {
    _unused: [u8; 0],
}
pub type IppEncodeZfpState_32f = ZfpState_32f;
pub type IppDecodeZfpState_32f = ZfpState_32f;
pub mod IppPatternMatchMode {
    pub type Type = ::std::os::raw::c_int;
    pub const ippPatternMatchAuto: Type = 0;
    pub const ippPatternMatchDirect: Type = 1;
    pub const ippPatternMatchTable: Type = 2;
}
pub mod IppTopKMode {
    pub type Type = ::std::os::raw::c_int;
    pub const ippTopKAuto: Type = 0;
    pub const ippTopKDirect: Type = 1;
    pub const ippTopKRadix: Type = 2;
}
pub type IppStatus = ::std::os::raw::c_int;
pub type IppSizeL = Ipp64s;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiRectL {
    pub x: IppSizeL,
    pub y: IppSizeL,
    pub width: IppSizeL,
    pub height: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiRectL() {
    const UNINIT: ::std::mem::MaybeUninit<IppiRectL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiRectL>(),
        32usize,
        concat!("Size of: ", stringify!(IppiRectL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiRectL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiRectL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiRectL),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiPointL {
    pub x: IppSizeL,
    pub y: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiPointL() {
    const UNINIT: ::std::mem::MaybeUninit<IppiPointL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiPointL>(),
        16usize,
        concat!("Size of: ", stringify!(IppiPointL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiPointL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiPointL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPointL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiPointL),
            "::",
            stringify!(y)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IppiSizeL {
    pub width: IppSizeL,
    pub height: IppSizeL,
}
#[test]
fn bindgen_test_layout_IppiSizeL() {
    const UNINIT: ::std::mem::MaybeUninit<IppiSizeL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IppiSizeL>(),
        16usize,
        concat!("Size of: ", stringify!(IppiSizeL))
    );
    assert_eq!(
        ::std::mem::align_of::<IppiSizeL>(),
        8usize,
        concat!("Alignment of ", stringify!(IppiSizeL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSizeL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IppiSizeL),
            "::",
            stringify!(height)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IpprVolumeL {
    pub width: IppSizeL,
    pub height: IppSizeL,
    pub depth: IppSizeL,
}
#[test]
fn bindgen_test_layout_IpprVolumeL() {
    const UNINIT: ::std::mem::MaybeUninit<IpprVolumeL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IpprVolumeL>(),
        24usize,
        concat!("Size of: ", stringify!(IpprVolumeL))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprVolumeL>(),
        8usize,
        concat!("Alignment of ", stringify!(IpprVolumeL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).width) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(width)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).height) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(height)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).depth) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprVolumeL),
            "::",
            stringify!(depth)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct IpprPointL {
    pub x: IppSizeL,
    pub y: IppSizeL,
    pub z: IppSizeL,
}
#[test]
fn bindgen_test_layout_IpprPointL() {
    const UNINIT: ::std::mem::MaybeUninit<IpprPointL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<IpprPointL>(),
        24usize,
        concat!("Size of: ", stringify!(IpprPointL))
    );
    assert_eq!(
        ::std::mem::align_of::<IpprPointL>(),
        8usize,
        concat!("Alignment of ", stringify!(IpprPointL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).x) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(x)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).y) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(y)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).z) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(IpprPointL),
            "::",
            stringify!(z)
        )
    );
}
pub mod _IpprBorderType {
    pub type Type = ::std::os::raw::c_int;
    pub const ipprBorderRepl: Type = 1;
    pub const ipprBorderConst: Type = 6;
    pub const ipprBorderInMemTop: Type = 16;
    pub const ipprBorderInMemBottom: Type = 32;
    pub const ipprBorderInMemLeft: Type = 64;
    pub const ipprBorderInMemRight: Type = 128;
    pub const ipprBorderInMemFront: Type = 4096;
    pub const ipprBorderInMemBack: Type = 8192;
    pub const ipprBorderInMem: Type = 12528;
}
pub use self::_IpprBorderType::Type as IpprBorderType;
pub mod IppiMorphMode {
    pub type Type = ::std::os::raw::c_int;
    pub const IPP_MORPH_DEFAULT: Type = 0;
    pub const IPP_MORPH_MASK_NO_FLIP: Type = 1;
    pub const IPP_MORPH_NO_THRESHOLD: Type = 4;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec {
    _unused: [u8; 0],
}
pub type IppiResizeSpec = ResizeSpec;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralType_T {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec_T = FilterBilateralType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBilateralType_LT {
    _unused: [u8; 0],
}
pub type IppiFilterBilateralSpec_LT = FilterBilateralType_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ResizeSpec_LT {
    _unused: [u8; 0],
}
pub type IppiResizeSpec_LT = ResizeSpec_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSobelType_T {
    _unused: [u8; 0],
}
pub type IppiFilterSobelSpec_T = FilterSobelType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterBorderSpecV {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec = FilterBorderSpecV;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterMedianSpecV {
    _unused: [u8; 0],
}
pub type IpprFilterMedianSpec = FilterMedianSpecV;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterBorderType_T {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec_T = IpprFilterBorderType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterBorderType_LT {
    _unused: [u8; 0],
}
pub type IpprFilterBorderSpec_LT = IpprFilterBorderType_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IpprFilterMedianType_T {
    _unused: [u8; 0],
}
pub type IpprFilterMedianSpec_T = IpprFilterMedianType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSeparableType_T {
    _unused: [u8; 0],
}
pub type IppiFilterSeparableSpec_T = FilterSeparableType_T;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct FilterSeparableType_LT {
    _unused: [u8; 0],
}
pub type IppiFilterSeparableSpec_LT = FilterSeparableType_LT;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PyramidStateL {
    _unused: [u8; 0],
}
pub type IppiPyramidStateL = PyramidStateL;
pub type IppiPyramidUpState_32f_C1R_L = IppiPyramidStateL;
pub type IppiPyramidDownState_32f_C1R_L = IppiPyramidStateL;
#[repr(C)]
#[derive(Debug, Copy, Clone, PartialEq)]
pub struct _IppiPyramidL {
    pub pImage: *mut *mut Ipp8u,
    pub pRoi: *mut IppiSizeL,
    pub pRate: *mut Ipp64f,
    pub pStep: *mut IppSizeL,
    pub pState: *mut Ipp8u,
    pub level: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout__IppiPyramidL() {
    const UNINIT: ::std::mem::MaybeUninit<_IppiPyramidL> = ::std::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::std::mem::size_of::<_IppiPyramidL>(),
        48usize,
        concat!("Size of: ", stringify!(_IppiPyramidL))
    );
    assert_eq!(
        ::std::mem::align_of::<_IppiPyramidL>(),
        8usize,
        concat!("Alignment of ", stringify!(_IppiPyramidL))
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pImage) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(pImage)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pRoi) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(pRoi)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pRate) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(pRate)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pStep) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(pStep)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).pState) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(pState)
        )
    );
    assert_eq!(
        unsafe { ::std::ptr::addr_of!((*ptr).level) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(_IppiPyramidL),
            "::",
            stringify!(level)
        )
    );
}
pub type IppiPyramidL = _IppiPyramidL;
extern "C" {
    pub fn ippMalloc_L(length: IppSizeL) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn ippGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippGetStatusString(StsCode: IppStatus) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ippGetCpuClocks() -> Ipp64u;
}
extern "C" {
    pub fn ippSetFlushToZero(
        value: ::std::os::raw::c_int,
        pUMask: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippSetDenormAreZeros(value: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippAlignPtr(
        ptr: *mut ::std::os::raw::c_void,
        alignBytes: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn ippMalloc(length: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn ippFree(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn ippInit() -> IppStatus;
}
extern "C" {
    pub fn ippGetCpuFreqMhz(pMhz: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippSetNumThreads(numThr: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippGetNumThreads(pNumThr: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippGetMaxCacheSizeB(pSizeByte: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippGetCpuFeatures(pFeaturesMask: *mut Ipp64u, pCpuidInfoRegs: *mut Ipp32u) -> IppStatus;
}
extern "C" {
    pub fn ippGetEnabledCpuFeatures() -> Ipp64u;
}
extern "C" {
    pub fn ippSetCpuFeatures(cpuFeatures: Ipp64u) -> IppStatus;
}
extern "C" {
    pub fn ippGetCacheParams(ppCacheInfo: *mut *mut IppCache) -> IppStatus;
}
extern "C" {
    pub fn ippGetL2CacheSize(pSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
pub mod IppiBayerGrid {
    pub type Type = ::std::os::raw::c_int;
    pub const ippiBayerBGGR: Type = 0;
    pub const ippiBayerRGGB: Type = 1;
    pub const ippiBayerGBRG: Type = 2;
    pub const ippiBayerGRBG: Type = 3;
}
extern "C" {
    pub fn ippiCFAToBGRA_VNG_8u_C1C4R_L(
        pSrc: *const Ipp8u,
        srcRoiL: IppiRectL,
        srcSizeL: IppiSizeL,
        srcStepL: IppSizeL,
        scale: *mut Ipp32f,
        pDst: *mut Ipp8u,
        dstStepL: IppSizeL,
        grid: IppiBayerGrid::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCFAToBGRA_VNG_16u_C1C4R_L(
        pSrc: *const Ipp16u,
        srcRoiL: IppiRectL,
        srcSizeL: IppiSizeL,
        srcStepL: IppSizeL,
        scale: *mut Ipp32f,
        pDst: *mut Ipp16u,
        dstStepL: IppSizeL,
        grid: IppiBayerGrid::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_32f_P3R_L(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_64f_P3R_L(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_32f_P3R_L(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_64f_P3R_L(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippccGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippiCbYCr422ToBGR_709HDTV_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToBGR_709HDTV_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToCbYCr422_709HDTV_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToCbYCr422_709HDTV_8u_AC4C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_709HDTV_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_709HDTV_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_709CSC_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCrCb420_709CSC_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_709CSC_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCrCb420_709CSC_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_709CSC_8u_C3P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_709CSC_8u_AC4P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_709CSC_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToBGR_709CSC_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToBGR_709CSC_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr420_8u_C3P2R(
        pRGB: *const Ipp8u,
        rgbStep: ::std::os::raw::c_int,
        pY: *mut Ipp8u,
        YStep: ::std::os::raw::c_int,
        pCbCr: *mut Ipp8u,
        CbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr420_8u_C4P2R(
        pRGB: *const Ipp8u,
        rgbStep: ::std::os::raw::c_int,
        pY: *mut Ipp8u,
        YStep: ::std::os::raw::c_int,
        pCbCr: *mut Ipp8u,
        CbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_8u_C3P2R(
        pRGB: *const Ipp8u,
        rgbStep: ::std::os::raw::c_int,
        pY: *mut Ipp8u,
        YStep: ::std::os::raw::c_int,
        pCbCr: *mut Ipp8u,
        CbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_8u_AC4P2R(
        pRGB: *const Ipp8u,
        rgbStep: ::std::os::raw::c_int,
        pY: *mut Ipp8u,
        YStep: ::std::os::raw::c_int,
        pCbCr: *mut Ipp8u,
        CbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToRGB_8u_P2C3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToRGB_8u_P2C4R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_8u_P2C3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_8u_P2C4R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToCbYCr422_8u_AC4C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToBGR_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToBGR_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToRGB_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToCbYCr422Gamma_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToCbYCr422_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr422_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToRGB_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToRGB_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToRGB_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr420_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCrCb422_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToRGB_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToBGR_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToRGB_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToBGR_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCrCb422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToRGB_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToBGR_8u_C2C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToBGR_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToBGR_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr411_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr411_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr422_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr422_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr420_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr422_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCbCr422_8u_AC4C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCrCb420_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCrCb420_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCrCb420_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToBGR_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToRGB_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToRGB_8u_P2C4R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCrCb: *const Ipp8u,
        srcCrCbStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToBGR_8u_P2C4R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCrCb: *const Ipp8u,
        srcCrCbStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToRGB_8u_P2C3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCrCb: *const Ipp8u,
        srcCrCbStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToBGR_8u_P2C3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCrCb: *const Ipp8u,
        srcCrCbStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToRGB_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToCbYCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToBGR_Filter_8u_P3C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_8u_P2C2R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_Filter_8u_P2C2R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        layout: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCrCb420_Filter_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
        layout: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCrCb420_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr420_8u_C2P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCrCb420_8u_C2P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCrCb: *mut Ipp8u,
        dstUVStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr420_8u_C2P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCrCb420_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCrCb420_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToCbYCr422_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr422_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToCbYCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToYCbCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr422_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToYCbCr420_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToCbYCr422_8u_P2C2R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToYCbCr422_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr422_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr420_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr420_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToYCbCr420_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr411_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr411_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb422ToYCbCr411_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr420_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr411_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr411_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToYCbCr411_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr420_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToYCbCr422_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_Filter_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCrCb420ToYCbCr422_Filter_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_Filter_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr422_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToYCbCr411_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCrCb422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr422_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCrCb422_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr420_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr420_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411_8u_P3P2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr422_8u_P2C2R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr422_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCrCb420_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411ToYCbCr420_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411_8u_P2P3R(
        pSrcY: *const Ipp8u,
        srcYStep: ::std::os::raw::c_int,
        pSrcCbCr: *const Ipp8u,
        srcCbCrStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr411_8u_C2P2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstY: *mut Ipp8u,
        dstYStep: ::std::os::raw::c_int,
        pDstCbCr: *mut Ipp8u,
        dstCbCrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCbCr411_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCrCb422_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToYCrCb422_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422ToGray_8u_C2C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCbCr_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCrToRGB_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUVToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUVToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUVToRGB_8u_C3C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUVToRGB_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUVToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYUV420_8u_AC4P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV_8u_AC4P4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToRGB_8u_P3AC4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_P3AC4R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV422_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV422_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV420_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV420_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToRGB_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV422_8u_C3C2R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_C2C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV422_8u_P3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_P3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV422_8u_C3P3(
        pSrc: *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422ToRGB_8u_P3C3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV420_8u_C3P3(
        pSrc: *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToRGB_8u_P3C3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYUV420_8u_P3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV420ToRGB_8u_P3(
        pSrc: *mut *const Ipp8u,
        pDst: *mut *mut Ipp8u,
        imgSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422v210ToRGB_709HDTV_32u16u_C3(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422v210ToBGR_709HDTV_32u16u_C3(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYUV422v210ToGray_709HDTV_32u16u_C3C1(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToBGR_16s8u_P3C3R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCoCg_8u16s_C3P3R(
        pBGR: *const Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToBGR_16s8u_P3C4R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCoCg_8u16s_C4P3R(
        pBGR: *const Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_16s_P3C3R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_16s_C3P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_16s_P3C4R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_16s_C4P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_32s16s_P3C3R(
        pYCC: *mut *const Ipp32s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_16s32s_C3P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp32s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_32s16s_P3C4R(
        pYCC: *mut *const Ipp32s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_16s32s_C4P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp32s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToBGR_Rev_16s8u_P3C3R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCoCg_Rev_8u16s_C3P3R(
        pBGR: *const Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToBGR_Rev_16s8u_P3C4R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToYCoCg_Rev_8u16s_C4P3R(
        pBGR: *const Ipp8u,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_Rev_16s_P3C3R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_Rev_16s_C3P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_Rev_16s_P3C4R(
        pYCC: *mut *const Ipp16s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_Rev_16s_C4P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp16s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_Rev_16s32s_C3P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp32s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_Rev_32s16s_P3C4R(
        pYCC: *mut *const Ipp32s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToSBGR_Rev_32s16s_P3C3R(
        pYCC: *mut *const Ipp32s,
        yccStep: ::std::os::raw::c_int,
        pBGR: *mut Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSBGRToYCoCg_Rev_16s32s_C4P3R(
        pBGR: *const Ipp16s,
        bgrStep: ::std::os::raw::c_int,
        pYCC: *mut *mut Ipp32s,
        yccStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_8u_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_16u_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_16s_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_8u_AC4C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_16u_AC4C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_16s_AC4C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToGray_32f_AC4C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_16u_C1C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_32f_C1C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_16u_C1C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToRGB_32f_C1C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        aval: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_8u_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_16u_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_16s_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_64f_C3C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_8u_AC4C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_16u_AC4C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_16s_AC4C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_32f_AC4C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorToGray_64f_AC4C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coeffs: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHLS_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToRGB_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_AP4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_AP4C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_AC4P4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToHLS_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_AP4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_AP4C4R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_AC4P4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHLSToBGR_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHSV_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHSVToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHSV_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHSVToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHSV_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHSVToRGB_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToHSV_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHSVToRGB_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCCToRGB_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToXYZ_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXYZToRGB_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToLUV_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToBGR_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToLUV_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToBGR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLUV_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUVToRGB_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToLab_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToBGR_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToLab_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToBGR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBGRToLab_8u16u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToBGR_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_8u1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        seed: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        threshold: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u8u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16u8u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s8u_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s8u_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_16s8u_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f8u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f8u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f8u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16s_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16s_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBits_32f16s_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        levels: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiReduceBitsGetBufferSize(
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        noise: ::std::os::raw::c_int,
        dtype: IppiDitherType::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_P3R(
        pSrc: *mut *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_P3R(
        pSrc: *mut *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_8u_IP3R(
        pSrcDst: *mut *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16u_IP3R(
        pSrcDst: *mut *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist32f_16s_IP3R(
        pSrcDst: *mut *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_IP3R(
        pSrcDst: *mut *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiColorTwist_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        twist: *const [Ipp32f; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_P3R(
        pSrc: *mut *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_P3R(
        pSrc: *mut *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_IP3R(
        pSrcDst: *mut *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_IP3R(
        pSrcDst: *mut *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_IP3R(
        pSrcDst: *mut *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_IP3R(
        pSrcDst: *mut *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_IP3R(
        pSrcDst: *mut *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaFwd_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_IP3R(
        pSrcDst: *mut *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGammaInv_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiToneMapLinear_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiToneMapMean_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420To411_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr411To420_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420To1620_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr1620To420_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCFAToRGB_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCFAToRGB_16u_C1C3R(
        pSrc: *const Ipp16u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCbYCr422ToYCbCr420_Interlace_8u_C2P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr422To420_Interlace_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420ToCbYCr422_Interlace_8u_P3C2R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCbCr420To422_Interlace_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDemosaicAHD_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
        pTmp: *mut Ipp8u,
        tmpStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDemosaicAHD_16u_C1C3R(
        pSrc: *const Ipp16u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
        pTmp: *mut Ipp16u,
        tmpStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToYCoCg_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiYCoCgToRGB_8u_P3C3R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRGBToLab_64f_P3R(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabToRGB_64f_P3R(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCFAToBGRA_VNG_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        scale: *mut Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCFAToBGRA_VNG_16u_C1C4R(
        pSrc: *const Ipp16u,
        srcRoi: IppiRect,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        scale: *mut Ipp32f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        grid: IppiBayerGrid::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUnpack_12u16u_C1R(
        pSrc: *mut Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPack_16u12u_C1R(
        pSrc: *mut Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippdcGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippsMTFInit_8u(pMTFState: *mut IppMTFState_8u) -> IppStatus;
}
extern "C" {
    pub fn ippsMTFGetSize_8u(pMTFStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsMTFFwd_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pMTFState: *mut IppMTFState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMTFInv_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pMTFState: *mut IppMTFState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTFwdGetSize_8u(
        wndSize: ::std::os::raw::c_int,
        pBWTFwdBuffSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTFwd_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        index: *mut ::std::os::raw::c_int,
        pBWTFwdBuff: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTFwdGetBufSize_SelectSort_8u(
        wndSize: Ipp32u,
        pBWTFwdBufSize: *mut Ipp32u,
        sortAlgorithmHint: IppBWTSortAlgorithmHint::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTFwd_SelectSort_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: Ipp32u,
        index: *mut Ipp32u,
        pBWTFwdBuf: *mut Ipp8u,
        sortAlgorithmHint: IppBWTSortAlgorithmHint::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTInvGetSize_8u(
        wndSize: ::std::os::raw::c_int,
        pBWTInvBuffSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsBWTInv_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        index: ::std::os::raw::c_int,
        pBWTInvBuff: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLZSSGetSize_8u(pLZSSStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZSSInit_8u(pLZSSState: *mut IppLZSSState_8u) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZSS_8u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pLZSSState: *mut IppLZSSState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZSSFlush_8u(
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pLZSSState: *mut IppLZSSState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZSSInit_8u(pLZSSState: *mut IppLZSSState_8u) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZSS_8u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pLZSSState: *mut IppLZSSState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdler32_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pAdler32: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCRC32_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pCRC32: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCRC32C_8u(pSrc: *const Ipp8u, srcLen: Ipp32u, pCRC32C: *mut Ipp32u) -> IppStatus;
}
extern "C" {
    pub fn ippsInflateBuildHuffTable(
        pCodeLens: *const Ipp16u,
        nLitCodeLens: ::std::os::raw::c_uint,
        nDistCodeLens: ::std::os::raw::c_uint,
        pIppInflateState: *mut IppInflateState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsInflate_8u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_uint,
        pCode: *mut Ipp32u,
        pCodeLenBits: *mut ::std::os::raw::c_uint,
        winIdx: ::std::os::raw::c_uint,
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_uint,
        dstIdx: ::std::os::raw::c_uint,
        pMode: *mut IppInflateMode::Type,
        pIppInflateState: *mut IppInflateState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        pHashPrev: *mut Ipp32s,
        hashSize: Ipp32u,
        pLitFreqTable: *mut IppDeflateFreqTable,
        pDistFreqTable: *mut IppDeflateFreqTable,
        pLitDst: *mut Ipp8u,
        pDistDst: *mut Ipp16u,
        pDstLen: *mut Ipp32u,
        comprLevel: ::std::os::raw::c_int,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77Fast_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        pHashPrev: *mut Ipp32s,
        hashSize: Ipp32u,
        pLitFreqTable: *mut IppDeflateFreqTable,
        pDistFreqTable: *mut IppDeflateFreqTable,
        pLitDst: *mut Ipp8u,
        pDistDst: *mut Ipp16u,
        pDstLen: *mut Ipp32u,
        pVecMatch: *mut ::std::os::raw::c_int,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77Fastest_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        hashSize: Ipp32u,
        pCode: *mut Ipp16u,
        pCodeLenBits: *mut Ipp32u,
        pDst: *mut Ipp8u,
        dstLen: Ipp32u,
        pDstIdx: *mut Ipp32u,
        pLitHuffCodes: *mut IppDeflateHuffCode,
        pDistHuffCodes: *mut IppDeflateHuffCode,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77FastestPrecompHeader_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        hashSize: Ipp32u,
        pCode: *mut Ipp16u,
        pCodeLenBits: *mut Ipp32u,
        pDst: *mut Ipp8u,
        dstLen: Ipp32u,
        pDstIdx: *mut Ipp32u,
        pLitHuffCodes: *mut IppDeflateHuffCode,
        pDistHuffCodes: *mut IppDeflateHuffCode,
        pHeaderCodeLens: *const Ipp8u,
        numBitsHeader: ::std::os::raw::c_int,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77Slow_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        pHashPrev: *mut Ipp32s,
        hashSize: Ipp32u,
        pLitFreqTable: *mut IppDeflateFreqTable,
        pDistFreqTable: *mut IppDeflateFreqTable,
        pLitDst: *mut Ipp8u,
        pDistDst: *mut Ipp16u,
        pDstLen: *mut Ipp32u,
        pVecMatch: *mut ::std::os::raw::c_int,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77FastestGetStat_8u(
        ppSrc: *mut *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pSrcIdx: *mut Ipp32u,
        pWindow: *const Ipp8u,
        winSize: Ipp32u,
        pHashHead: *mut Ipp32s,
        hashSize: Ipp32u,
        pLitStat: *mut ::std::os::raw::c_int,
        pDistStat: *mut ::std::os::raw::c_int,
        flush: IppLZ77Flush::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77FastestGenHuffTable_8u(
        pLitStat: *const ::std::os::raw::c_int,
        pDistStat: *const ::std::os::raw::c_int,
        pLitCodeTable: *mut IppDeflateHuffCode,
        pDistCodeTable: *mut IppDeflateHuffCode,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateLZ77FastestGenHeader_8u(
        pLitCodeTable: *const IppDeflateHuffCode,
        pDistCodeTable: *const IppDeflateHuffCode,
        pDstHeader: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pDstBits: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateHuff_8u(
        pLitSrc: *const Ipp8u,
        pDistSrc: *const Ipp16u,
        srcLen: Ipp32u,
        pCode: *mut Ipp16u,
        pCodeLenBits: *mut Ipp32u,
        pLitHuffCodes: *mut IppDeflateHuffCode,
        pDistHuffCodes: *mut IppDeflateHuffCode,
        pDst: *mut Ipp8u,
        pDstIdx: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateDictionarySet_8u(
        pDictSrc: *const Ipp8u,
        dictLen: Ipp32u,
        pHashHeadDst: *mut Ipp32s,
        hashSize: Ipp32u,
        pHashPrevDst: *mut Ipp32s,
        pWindowDst: *mut Ipp8u,
        winSize: Ipp32u,
        comprLevel: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDeflateUpdateHash_8u(
        pSrc: *const Ipp8u,
        srcIdx: Ipp32u,
        srcLen: Ipp32u,
        pHashHeadDst: *mut Ipp32s,
        hashSize: Ipp32u,
        pHashPrevDst: *mut Ipp32s,
        winSize: Ipp32u,
        comprLevel: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRLEGetSize_BZ2_8u(pRLEStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeRLEInit_BZ2_8u(pRLEState: *mut IppRLEState_BZ2) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeRLE_BZ2_8u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pRLEState: *mut IppRLEState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeRLEFlush_BZ2_8u(
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pRLEState: *mut IppRLEState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeRLEStateInit_BZ2_8u(pRLEState: *mut IppRLEState_BZ2) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeRLEState_BZ2_8u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut Ipp32u,
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut Ipp32u,
        pRLEState: *mut IppRLEState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeRLEStateFlush_BZ2_8u(
        pRLEState: *mut IppRLEState_BZ2,
        ppDst: *mut *mut Ipp8u,
        pDstLen: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRLEGetInUseTable_8u(inUse: *mut Ipp8u, pRLEState: *mut IppRLEState_BZ2)
        -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZ1Z2_BZ2_8u16u(
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        pDstLen: *mut ::std::os::raw::c_int,
        freqTable: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZ1Z2_BZ2_16u8u(
        ppSrc: *mut *mut Ipp16u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReduceDictionary_8u_I(
        inUse: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstLen: ::std::os::raw::c_int,
        pSizeDictionary: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExpandDictionary_8u_I(
        inUse: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstLen: ::std::os::raw::c_int,
        sizeDictionary: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCRC32_BZ2_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pCRC32: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeHuffGetSize_BZ2_16u8u(
        wndSize: ::std::os::raw::c_int,
        pEncodeHuffStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeHuffInit_BZ2_16u8u(
        sizeDictionary: ::std::os::raw::c_int,
        freqTable: *const ::std::os::raw::c_int,
        pSrc: *const Ipp16u,
        srcLen: ::std::os::raw::c_int,
        pEncodeHuffState: *mut IppEncodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPackHuffContext_BZ2_16u8u(
        pCode: *mut Ipp32u,
        pCodeLenBits: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pEncodeHuffState: *mut IppEncodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeHuff_BZ2_16u8u(
        pCode: *mut Ipp32u,
        pCodeLenBits: *mut ::std::os::raw::c_int,
        ppSrc: *mut *mut Ipp16u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pEncodeHuffState: *mut IppEncodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeHuffGetSize_BZ2_8u16u(
        wndSize: ::std::os::raw::c_int,
        pDecodeHuffStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeHuffInit_BZ2_8u16u(
        sizeDictionary: ::std::os::raw::c_int,
        pDecodeHuffState: *mut IppDecodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsUnpackHuffContext_BZ2_8u16u(
        pCode: *mut Ipp32u,
        pCodeLenBits: *mut ::std::os::raw::c_int,
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDecodeHuffState: *mut IppDecodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeHuff_BZ2_8u16u(
        pCode: *mut Ipp32u,
        pCodeLenBits: *mut ::std::os::raw::c_int,
        ppSrc: *mut *mut Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        pDstLen: *mut ::std::os::raw::c_int,
        pDecodeHuffState: *mut IppDecodeHuffState_BZ2,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeBlockGetSize_BZ2_8u(
        blockSize: ::std::os::raw::c_int,
        pBuffSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeBlock_BZ2_16u8u(
        pSrc: *const Ipp16u,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        index: ::std::os::raw::c_int,
        dictSize: ::std::os::raw::c_int,
        inUse: *const Ipp8u,
        pBuff: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZOGetSize(
        method: IppLZOMethod::Type,
        maxInputLen: Ipp32u,
        pSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZO_8u(
        pSrc: *const Ipp8u,
        srcLen: Ipp32u,
        pDst: *mut Ipp8u,
        pDstLen: *mut Ipp32u,
        pLZOState: *mut IppLZOState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZOInit_8u(
        method: IppLZOMethod::Type,
        maxInputLen: Ipp32u,
        pLZOState: *mut IppLZOState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZO_8u(
        pSrc: *const Ipp8u,
        srcLen: Ipp32u,
        pDst: *mut Ipp8u,
        pDstLen: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZOSafe_8u(
        pSrc: *const Ipp8u,
        srcLen: Ipp32u,
        pDst: *mut Ipp8u,
        pDstLen: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HashTableGetSize_8u(
        pHashTableSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HashTableInit_8u(
        pHashTable: *mut Ipp8u,
        srcLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4DictHashTableInit_8u(
        pHashTable: *mut Ipp8u,
        srcLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4LoadDict_8u(
        pHashTable: *mut Ipp8u,
        pDict: *const Ipp8u,
        dictLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pHashTable: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4Fast_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pHashTable: *mut Ipp8u,
        acceleration: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4Safe_8u(
        pSrc: *const Ipp8u,
        srcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pHashTable: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4Dict_8u(
        pSrc: *const Ipp8u,
        srcIdx: ::std::os::raw::c_int,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pHashTable: *mut Ipp8u,
        pDict: *const Ipp8u,
        dictLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4DictSafe_8u(
        pSrc: *const Ipp8u,
        srcIdx: ::std::os::raw::c_int,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pHashTable: *mut Ipp8u,
        pDict: *const Ipp8u,
        dictLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HCHashTableGetSize_8u(
        pHashTableSize: *mut ::std::os::raw::c_int,
        pPrevTableSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HCHashTableInit_8u(ppHashTables: *mut *mut Ipp8u) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HC_8u(
        pSrc: *const Ipp8u,
        srcIdx: ::std::os::raw::c_int,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        ppHashTables: *mut *mut Ipp8u,
        pDict: *const Ipp8u,
        dictLen: ::std::os::raw::c_int,
        level: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeLZ4HCDictLimit_8u(
        pSrc: *const Ipp8u,
        srcIdx: ::std::os::raw::c_int,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        ppHashTables: *mut *mut Ipp8u,
        pDict: *const Ipp8u,
        dictLen: ::std::os::raw::c_int,
        level: ::std::os::raw::c_int,
        lowDictIdx: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZ4_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeLZ4Dict_8u(
        pSrc: *const Ipp8u,
        pSrcLen: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstIdx: ::std::os::raw::c_int,
        pDstLen: *mut ::std::os::raw::c_int,
        pDict: *const Ipp8u,
        dictSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpGetStateSize_32f(pStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpInit_32f(
        pDst: *mut Ipp8u,
        dstLen: ::std::os::raw::c_int,
        pState: *mut IppEncodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpInitLong_32f(
        pDst: *mut Ipp8u,
        dstLen: Ipp64u,
        pState: *mut IppEncodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpSet_32f(
        minBits: ::std::os::raw::c_int,
        maxBits: ::std::os::raw::c_int,
        maxPrec: ::std::os::raw::c_int,
        minExp: ::std::os::raw::c_int,
        pState: *mut IppEncodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpSetAccuracy_32f(
        precision: Ipp64f,
        pState: *mut IppEncodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfp444_32f(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        pState: *mut IppEncodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpFlush_32f(pState: *mut IppEncodeZfpState_32f) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpGetCompressedSize_32f(
        pState: *mut IppEncodeZfpState_32f,
        pCompressedSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpGetCompressedSizeLong_32f(
        pState: *mut IppEncodeZfpState_32f,
        pCompressedSize: *mut Ipp64u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEncodeZfpGetCompressedBitSize_32f(
        pState: *mut IppEncodeZfpState_32f,
        pCompressedBitSize: *mut Ipp64u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpGetStateSize_32f(pStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpInit_32f(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pState: *mut IppDecodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpInitLong_32f(
        pSrc: *const Ipp8u,
        srcLen: Ipp64u,
        pState: *mut IppDecodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpSetAccuracy_32f(
        precision: Ipp64f,
        pState: *mut IppDecodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpSet_32f(
        minBits: ::std::os::raw::c_int,
        maxBits: ::std::os::raw::c_int,
        maxPrec: ::std::os::raw::c_int,
        minExp: ::std::os::raw::c_int,
        pState: *mut IppDecodeZfpState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfp444_32f(
        pState: *mut IppDecodeZfpState_32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpGetDecompressedSize_32f(
        pState: *mut IppDecodeZfpState_32f,
        pDecompressedSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDecodeZfpGetDecompressedSizeLong_32f(
        pState: *mut IppDecodeZfpState_32f,
        pDecompressedSize: *mut Ipp64u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippchGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippsFind_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pFind: *const Ipp8u,
        lenFind: ::std::os::raw::c_int,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindC_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        valFind: Ipp8u,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindRev_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pFind: *const Ipp8u,
        lenFind: ::std::os::raw::c_int,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindRevC_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        valFind: Ipp8u,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFind_Z_8u(
        pSrcZ: *const Ipp8u,
        pFindZ: *const Ipp8u,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindC_Z_8u(
        pSrcZ: *const Ipp8u,
        valFind: Ipp8u,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCompare_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pResult: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsEqual_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pResult: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTrimC_8u_I(
        pSrcDst: *mut Ipp8u,
        pLen: *mut ::std::os::raw::c_int,
        odd: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTrimC_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        odd: Ipp8u,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsUppercaseLatin_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsLowercaseLatin_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsLowercaseLatin_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsUppercaseLatin_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHash_8u32u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHash_16u32u(
        pSrc: *const Ipp16u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHashSJ2_8u32u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHashSJ2_16u32u(
        pSrc: *const Ipp16u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHashMSCS_8u32u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHashMSCS_16u32u(
        pSrc: *const Ipp16u,
        len: ::std::os::raw::c_int,
        pHashVal: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConcat_8u(
        pSrc1: *const Ipp8u,
        len1: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        len2: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConcat_8u_D2L(
        pSrc: *const *const Ipp8u,
        srcLen: *const ::std::os::raw::c_int,
        numSrc: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConcatC_8u_D2L(
        pSrc: *const *const Ipp8u,
        srcLen: *const ::std::os::raw::c_int,
        numSrc: ::std::os::raw::c_int,
        delim: Ipp8u,
        pDst: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSplitC_8u_D2L(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        delim: Ipp8u,
        pDst: *mut *mut Ipp8u,
        dstLen: *mut ::std::os::raw::c_int,
        pNumDst: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindCAny_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pAnyOf: *const Ipp8u,
        lenAnyOf: ::std::os::raw::c_int,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindRevCAny_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pAnyOf: *const Ipp8u,
        lenAnyOf: ::std::os::raw::c_int,
        pIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReplaceC_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        oldVal: Ipp8u,
        newVal: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTrimCAny_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pTrim: *const Ipp8u,
        trimLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTrimEndCAny_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pTrim: *const Ipp8u,
        trimLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTrimStartCAny_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pTrim: *const Ipp8u,
        trimLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCompareIgnoreCaseLatin_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pResult: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsInsert_8u_I(
        pInsert: *const Ipp8u,
        insertLen: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        pSrcDstLen: *mut ::std::os::raw::c_int,
        startIndex: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsInsert_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pInsert: *const Ipp8u,
        insertLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        startIndex: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRemove_8u_I(
        pSrcDst: *mut Ipp8u,
        pSrcDstLen: *mut ::std::os::raw::c_int,
        startIndex: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRemove_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        startIndex: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpGetSize(
        pPattern: *const ::std::os::raw::c_char,
        pRegExpStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpInit(
        pPattern: *const ::std::os::raw::c_char,
        pOptions: *const ::std::os::raw::c_char,
        pRegExpState: *mut IppRegExpState,
        pErrOffset: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpSetMatchLimit(
        matchLimit: ::std::os::raw::c_int,
        pRegExpState: *mut IppRegExpState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpSetFormat(
        fmt: IppRegExpFormat::Type,
        pRegExpState: *mut IppRegExpState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpFind_8u(
        pSrc: *const Ipp8u,
        srcLen: ::std::os::raw::c_int,
        pRegExpState: *mut IppRegExpState,
        pFind: *mut IppRegExpFind,
        pNumFind: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvertUTF_8u16u(
        pSrc: *const Ipp8u,
        pSrcLen: *mut Ipp32u,
        pDst: *mut Ipp16u,
        pDstLen: *mut Ipp32u,
        BEFlag: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvertUTF_16u8u(
        pSrc: *const Ipp16u,
        pSrcLen: *mut Ipp32u,
        pDst: *mut Ipp8u,
        pDstLen: *mut Ipp32u,
        BEFlag: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpReplaceGetSize(pSrcReplacement: *const Ipp8u, pSize: *mut Ipp32u)
        -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpReplaceInit(
        pSrcReplacement: *const Ipp8u,
        pReplaceState: *mut IppRegExpReplaceState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRegExpReplace_8u(
        pSrc: *const Ipp8u,
        pSrcLenOffset: *mut ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pDstLen: *mut ::std::os::raw::c_int,
        pFind: *mut IppRegExpFind,
        pNumFind: *mut ::std::os::raw::c_int,
        pRegExpState: *mut IppRegExpState,
        pReplaceState: *mut IppRegExpReplaceState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianGetBufferSize_L(
        maxRoiSize: IppiSizeL,
        kernelSize: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        borderType: IppiBorderType,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianGetSpecSize_L(
        kernelSize: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
        pInitBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianInit_L(
        roiSize: IppiSizeL,
        kernelSize: ::std::os::raw::c_int,
        sigma: Ipp32f,
        borderType: IppiBorderType,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppFilterGaussianSpec,
        pInitBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateGetBufferSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        datatype: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeGetBufferSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        datatype: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateGetSpecSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        pSpecSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeGetSpecSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        pSpecSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateInit_L(
        roiSize: IppiSizeL,
        pMask: *const Ipp8u,
        maskSize: IppiSizeL,
        pMorphSpec: *mut IppiMorphStateL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeInit_L(
        roiSize: IppiSizeL,
        pMask: *const Ipp8u,
        maskSize: IppiSizeL,
        pMorphSpec: *mut IppiMorphStateL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorphSpec: *const IppiMorphStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGetSpecSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        depth: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGetBufferSize_L(
        roiSize: IppiSizeL,
        maskSize: IppiSizeL,
        depth: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        bufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphInit_L(
        roiSize: IppiSizeL,
        pMask: *const Ipp8u,
        maskSize: IppiSizeL,
        depth: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pMorphSpec: *mut IppiMorphAdvStateL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpen_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphClose_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophat_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhat_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_1u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradient_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pMorthSpec: *const IppiMorphAdvStateL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphSetMode_L(
        mode: ::std::os::raw::c_int,
        pMorphSpec: *mut IppiMorphAdvStateL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCannyGetSize_L(roi: IppiSizeL, bufferSize: *mut IppSizeL) -> IppStatus;
}
extern "C" {
    pub fn ippiCanny_16s8u_C1R_L(
        pSrcDx: *mut Ipp16s,
        srcDxStep: IppSizeL,
        pSrcDy: *mut Ipp16s,
        srcDyStep: IppSizeL,
        pDstEdges: *mut Ipp8u,
        dstEdgeStep: IppSizeL,
        roiSize: IppiSizeL,
        lowThreshold: Ipp32f,
        highThreshold: Ipp32f,
        norm: IppNormType::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCanny_32f8u_C1R_L(
        pSrcDx: *mut Ipp32f,
        srcDxStep: IppSizeL,
        pSrcDy: *mut Ipp32f,
        srcDyStep: IppSizeL,
        pDstEdges: *mut Ipp8u,
        dstEdgeStep: IppSizeL,
        roiSize: IppiSizeL,
        lowThreshold: Ipp32f,
        highThreshold: Ipp32f,
        norm: IppNormType::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableGetBufferSize_L(
        roiSize: IppiSizeL,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        kernelType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableGetSpecSize_L(
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableInit_16s_L(
        pRowKernel: *const Ipp16s,
        pColumnKernel: *const Ipp16s,
        kernelSize: IppiSize,
        divisor: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterSeparableSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableInit_32f_L(
        pRowKernel: *const Ipp32f,
        pColumnKernel: *const Ipp32f,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterSeparableSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        borderType: IppiBorderType,
        borderValue: *mut Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidGetSize_L(
        pPyrSize: *mut IppSizeL,
        pBufSize: *mut IppSizeL,
        level: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidInit_L(
        pPyr: *mut *mut IppiPyramidL,
        level: ::std::os::raw::c_int,
        roiSize: IppiSizeL,
        rate: Ipp32f,
        pPyrBuffer: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_32f_C1R_L(
        srcRoi: IppiSizeL,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut IppSizeL,
        pBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_32f_C1R_L(
        dstRoi: IppiSizeL,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_32f_C1R_L(
        pState: *mut *mut IppiPyramidDownState_32f_C1R_L,
        srcRoi: IppiSizeL,
        rate: Ipp32f,
        pKernel: *const Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_32f_C1R_L(
        ppState: *mut *mut IppiPyramidUpState_32f_C1R_L,
        dstRoi: IppiSizeL,
        rate: Ipp32f,
        pKernel: *const Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPyramidDownROI_L(
        srcRoi: IppiSizeL,
        pDstRoi: *mut IppiSizeL,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPyramidUpROI_L(
        srcRoi: IppiSizeL,
        pDstRoiMin: *mut IppiSizeL,
        pDstRoiMax: *mut IppiSizeL,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        pState: *mut IppiPyramidDownState_32f_C1R_L,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        pState: *mut IppiPyramidUpState_32f_C1R_L,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippcvGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippiCopySubpix_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpix_8u16u_C1R_Sfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpix_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpix_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpix_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpix_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dx: Ipp32f,
        dy: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_8u16u_C1R_Sfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopySubpixIntersect_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        point: IppiPoint_32f,
        pMin: *mut IppiPoint,
        pMax: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp8u,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp8u,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp16u,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp16u,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32f,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSampleLine_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32f,
        pt1: IppiPoint,
        pt2: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u32f_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u32f_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u32f_C1IMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u32f_C1IMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1IMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_8u32f_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_16u32f_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_8u32f_C1IMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_16u32f_C1IMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddSquare_32f_C1IMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_8u32f_C1IR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_16u32f_C1IR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_32f_C1IR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_8u32f_C1IMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_16u32f_C1IMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddProduct_32f_C1IMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_8u32f_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_16u32f_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_8u32f_C1IMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_16u32f_C1IMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_32f_C1IMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddWeighted_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiff_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiff_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiff_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiff_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiffC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiffC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbsDiffC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_8u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_8u_C3R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_8u_C4R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_32f_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_32f_C3R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_32f_C4R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_16u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_16s_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderGetSize_1u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_16u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_16s_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_1u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_8u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_8u_C3R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_8u_C4R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_32f_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_32f_C3R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphologyBorderInit_32f_C4R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilateBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErodeBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphSetMode(
        mode: ::std::os::raw::c_int,
        pMorphSpec: *mut IppiMorphAdvState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_1u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_8u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_8u_C3R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_8u_C4R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_16u_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_16s_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_32f_C1R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_32f_C3R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvGetSize_32f_C4R(
        roiSize: IppiSize,
        maskSize: IppiSize,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_8u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_8u_C3R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_8u_C4R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_16u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_16s_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_1u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_32f_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_32f_C3R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphAdvInit_32f_C4R(
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskSize: IppiSize,
        pSpec: *mut IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphOpenBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphCloseBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphTophatBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphBlackhatBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGradientBorder_1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiMorphAdvState,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGrayGetSize_8u_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp32s,
        maskSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGrayGetSize_32f_C1R(
        roiSize: IppiSize,
        pMask: *const Ipp32f,
        maskSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGrayInit_8u_C1R(
        pState: *mut IppiMorphGrayState_8u,
        roiSize: IppiSize,
        pMask: *const Ipp32s,
        maskSize: IppiSize,
        anchor: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphGrayInit_32f_C1R(
        pState: *mut IppiMorphGrayState_32f,
        roiSize: IppiSize,
        pMask: *const Ipp32f,
        maskSize: IppiSize,
        anchor: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayErodeBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        border: IppiBorderType,
        pState: *mut IppiMorphGrayState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayErodeBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        border: IppiBorderType,
        pState: *mut IppiMorphGrayState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayDilateBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        border: IppiBorderType,
        pState: *mut IppiMorphGrayState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayDilateBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        border: IppiBorderType,
        pState: *mut IppiMorphGrayState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructGetBufferSize(
        roiSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructDilate_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructErode_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructDilate_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructErode_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructDilate_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp32f,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructErode_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp32f,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructDilate_64f_C1IR(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp64f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMorphReconstructErode_64f_C1IR(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp64f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuf: *mut Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_8u16s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_8u16s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_16s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_16s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_16u_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_16u_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_Low_16s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_Low_16s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipelineGetBufferSize_32f_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_Low_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_Low_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16s,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16u,
        roiSize: IppiSize,
        pKernel: *const Ipp16u,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp16u,
        roiSize: IppiSize,
        pKernel: *const Ipp16u,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16u,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp32f,
        roiSize: IppiSize,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRowBorderPipeline_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        ppDst: *mut *mut Ipp32f,
        roiSize: IppiSize,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        xAnchor: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_Low_16s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_Low_16s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16u_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16u_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s8u_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s8u_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s8s_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_16s8s_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipelineGetBufferSize_32f_C3R(
        roiSize: IppiSize,
        kernelSize: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s_C1R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s_C3R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_Low_16s_C1R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_Low_16s_C3R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16u_C1R(
        ppSrc: *mut *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16u,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16u_C3R(
        ppSrc: *mut *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16u,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s8u_C1R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s8u_C3R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s8s_C1R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_16s8s_C3R(
        ppSrc: *mut *const Ipp16s,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_32f_C1R(
        ppSrc: *mut *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterColumnPipeline_32f_C3R(
        ppSrc: *mut *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelCrossGetBufferSize_8u16s_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplacianGetBufferSize_8u16s_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLowpassGetBufferSize_8u_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelCrossGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplacianGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLowpassGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelCrossBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplacianBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLowpassBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelCrossBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLowpassBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplacianBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGenSobelKernel_16s(
        pDst: *mut Ipp16s,
        kernelSize: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
        sign: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGenSobelKernel_32f(
        pDst: *mut Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        dx: ::std::os::raw::c_int,
        sign: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiIntegral_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        val: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiIntegral_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        val: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiIntegral_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedIntegral_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedIntegral_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrIntegral_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp32s,
        sqrStep: ::std::os::raw::c_int,
        roi: IppiSize,
        val: Ipp32s,
        valSqr: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrIntegral_8u32s64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32s,
        valSqr: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrIntegral_8u32f64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32f,
        valSqr: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedSqrIntegral_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp32s,
        sqrStep: ::std::os::raw::c_int,
        roi: IppiSize,
        val: Ipp32s,
        valSqr: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedSqrIntegral_8u32s64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32s,
        valSqr: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedSqrIntegral_8u32f64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSqr: *mut Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp32f,
        valSqr: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_8u_C3CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_16u_C3CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_32f_C3CR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_StdDev_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRectStdDev_32s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp32s,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rect: IppiRect,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRectStdDev_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rect: IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRectStdDev_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rect: IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedRectStdDev_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rect: IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedRectStdDev_32s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp32s,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rect: IppiRect,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedRectStdDev_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSqr: *const Ipp64f,
        sqrStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rect: IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_8u_C3CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_16u_C3CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_32f_C1R(
        pSrc: *const Ipp32f,
        step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_32f_C3CR(
        pSrc: *const Ipp32f,
        step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMaxIndx_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pMinVal: *mut Ipp32f,
        pMaxVal: *mut Ipp32f,
        pMinIndex: *mut IppiPoint,
        pMaxIndex: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C3CMR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C3CMR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C3CMR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C1MR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C1MR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C1MR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C3CMR(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C3CMR(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C3CMR(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        coi: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCannyGetSize(roiSize: IppiSize, bufferSize: *mut ::std::os::raw::c_int)
        -> IppStatus;
}
extern "C" {
    pub fn ippiCanny_16s8u_C1R(
        pSrcDx: *mut Ipp16s,
        srcDxStep: ::std::os::raw::c_int,
        pSrcDy: *mut Ipp16s,
        srcDyStep: ::std::os::raw::c_int,
        pDstEdges: *mut Ipp8u,
        dstEdgeStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        lowThresh: Ipp32f,
        highThresh: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCanny_32f8u_C1R(
        pSrcDx: *mut Ipp32f,
        srcDxStep: ::std::os::raw::c_int,
        pSrcDy: *mut Ipp32f,
        srcDyStep: ::std::os::raw::c_int,
        pDstEdges: *mut Ipp8u,
        dstEdgeStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        lowThresh: Ipp32f,
        highThresh: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecsGetBufferSize_8u32f_C1R(
        roiSize: IppiSize,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        bufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecsGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        bufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecs_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecs_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecsBorder_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiEigenValsVecsBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenValGetBufferSize_8u32f_C1R(
        roiSize: IppiSize,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        bufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenValGetBufferSize_32f_C1R(
        roiSize: IppiSize,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        bufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenVal_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMinEigenVal: *mut Ipp32f,
        minValStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMinEigenVal: *mut Ipp32f,
        minValStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWindow: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenValBorder_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWndSize: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEigenValBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pEigenVV: *mut Ipp32f,
        eigStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        kernType: IppiKernelType,
        apertureSize: ::std::os::raw::c_int,
        avgWndSize: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTrueDistanceTransformGetBufferSize_8u32f_C1R(
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_3x3_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_5x5_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_3x3_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_5x5_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_3x3_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_5x5_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_3x3_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDistanceTransform_5x5_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTrueDistanceTransform_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetDistanceTransformMask_32f(
        kerSize: ::std::os::raw::c_int,
        norm: IppiNorm,
        pMetrics: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetDistanceTransformMask_32s(
        kerSize: ::std::os::raw::c_int,
        norm: IppiNorm,
        pMetrics: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetDistanceTransformMask(
        maskType: ::std::os::raw::c_int,
        pMetrics: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastMarchingGetBufferSize_8u32f_C1R(
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastMarching_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        radius: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFillGetSize(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFillGetSize_Grad(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_32s_C1IR(
        pImage: *mut Ipp32s,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32s,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_32s_C1IR(
        pImage: *mut Ipp32s,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32s,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        minDelta: Ipp8u,
        maxDelta: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        minDelta: Ipp8u,
        maxDelta: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        minDelta: Ipp16u,
        maxDelta: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        minDelta: Ipp16u,
        maxDelta: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        minDelta: Ipp32f,
        maxDelta: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        minDelta: Ipp32f,
        maxDelta: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        minDelta: Ipp8u,
        maxDelta: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_8u_C1IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp8u,
        minDelta: Ipp8u,
        maxDelta: Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        minDelta: Ipp16u,
        maxDelta: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_16u_C1IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp16u,
        minDelta: Ipp16u,
        maxDelta: Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        minDelta: Ipp32f,
        maxDelta: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_32f_C1IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        newVal: Ipp32f,
        minDelta: Ipp32f,
        maxDelta: Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_4Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_8Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pMinDelta: *mut Ipp8u,
        pMaxDelta: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pMinDelta: *mut Ipp8u,
        pMaxDelta: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pMinDelta: *mut Ipp16u,
        pMaxDelta: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pMinDelta: *mut Ipp16u,
        pMaxDelta: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad4Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pMinDelta: *mut Ipp32f,
        pMaxDelta: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Grad8Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pMinDelta: *mut Ipp32f,
        pMaxDelta: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pMinDelta: *mut Ipp8u,
        pMaxDelta: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_8u_C3IR(
        pImage: *mut Ipp8u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp8u,
        pMinDelta: *mut Ipp8u,
        pMaxDelta: *mut Ipp8u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pMinDelta: *mut Ipp16u,
        pMaxDelta: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_16u_C3IR(
        pImage: *mut Ipp16u,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp16u,
        pMinDelta: *mut Ipp16u,
        pMaxDelta: *mut Ipp16u,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range4Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pMinDelta: *mut Ipp32f,
        pMaxDelta: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFloodFill_Range8Con_32f_C3IR(
        pImage: *mut Ipp32f,
        imageStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        seed: IppiPoint,
        pNewVal: *mut Ipp32f,
        pMinDelta: *mut Ipp32f,
        pMaxDelta: *mut Ipp32f,
        pRegion: *mut IppiConnectedComp,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUpdateMotionHistory_8u32f_C1IR(
        pSilhouette: *const Ipp8u,
        silhStep: ::std::os::raw::c_int,
        pMHI: *mut Ipp32f,
        mhiStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        timestamp: Ipp32f,
        mhiDuration: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUpdateMotionHistory_16u32f_C1IR(
        pSilhouette: *const Ipp16u,
        silhStep: ::std::os::raw::c_int,
        pMHI: *mut Ipp32f,
        mhiStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        timestamp: Ipp32f,
        mhiDuration: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUpdateMotionHistory_32f_C1IR(
        pSilhouette: *const Ipp32f,
        silhStep: ::std::os::raw::c_int,
        pMHI: *mut Ipp32f,
        mhiStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        timestamp: Ipp32f,
        mhiDuration: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLKGetSize(
        winSize: ::std::os::raw::c_int,
        roi: IppiSize,
        dataType: IppDataType::Type,
        hint: IppHintAlgorithm::Type,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLKInit_8u_C1R(
        ppState: *mut *mut IppiOptFlowPyrLK_8u_C1R,
        roi: IppiSize,
        winSize: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pStateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLKInit_16u_C1R(
        ppState: *mut *mut IppiOptFlowPyrLK_16u_C1R,
        roi: IppiSize,
        winSize: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pStateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLKInit_32f_C1R(
        ppState: *mut *mut IppiOptFlowPyrLK_32f_C1R,
        roi: IppiSize,
        winSize: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pStateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLK_8u_C1R(
        pPyr1: *mut IppiPyramid,
        pPyr2: *mut IppiPyramid,
        pPrev: *const IppiPoint_32f,
        pNext: *mut IppiPoint_32f,
        pStatus: *mut Ipp8s,
        pError: *mut Ipp32f,
        numFeat: ::std::os::raw::c_int,
        winSize: ::std::os::raw::c_int,
        maxLev: ::std::os::raw::c_int,
        maxIter: ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiOptFlowPyrLK_8u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLK_16u_C1R(
        pPyr1: *mut IppiPyramid,
        pPyr2: *mut IppiPyramid,
        pPrev: *const IppiPoint_32f,
        pNext: *mut IppiPoint_32f,
        pStatus: *mut Ipp8s,
        pError: *mut Ipp32f,
        numFeat: ::std::os::raw::c_int,
        winSize: ::std::os::raw::c_int,
        maxLev: ::std::os::raw::c_int,
        maxIter: ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiOptFlowPyrLK_16u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOpticalFlowPyrLK_32f_C1R(
        pPyr1: *mut IppiPyramid,
        pPyr2: *mut IppiPyramid,
        pRrev: *const IppiPoint_32f,
        pNext: *mut IppiPoint_32f,
        pStatus: *mut Ipp8s,
        pError: *mut Ipp32f,
        numFeat: ::std::os::raw::c_int,
        winSize: ::std::os::raw::c_int,
        maxLev: ::std::os::raw::c_int,
        maxIter: ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiOptFlowPyrLK_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidGetSize(
        pPyrSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
        level: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidInit(
        pPyr: *mut *mut IppiPyramid,
        level: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rate: Ipp32f,
        pPyrBuffer: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_8u_C1R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_16u_C1R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_32f_C1R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_8u_C3R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_16u_C3R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownGetSize_32f_C3R(
        srcRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_8u_C1R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_16u_C1R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_32f_C1R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_8u_C3R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_16u_C3R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpGetSize_32f_C3R(
        dstRoi: IppiSize,
        rate: Ipp32f,
        kerSize: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_8u_C1R(
        ppState: *mut *mut IppiPyramidDownState_8u_C1R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_16u_C1R(
        ppState: *mut *mut IppiPyramidDownState_16u_C1R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_32f_C1R(
        pState: *mut *mut IppiPyramidDownState_32f_C1R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_8u_C3R(
        ppState: *mut *mut IppiPyramidDownState_8u_C3R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_16u_C3R(
        ppState: *mut *mut IppiPyramidDownState_16u_C3R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDownInit_32f_C3R(
        ppState: *mut *mut IppiPyramidDownState_32f_C3R,
        srcRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
        Buffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_8u_C1R(
        ppState: *mut *mut IppiPyramidUpState_8u_C1R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_16u_C1R(
        ppState: *mut *mut IppiPyramidUpState_16u_C1R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_32f_C1R(
        ppState: *mut *mut IppiPyramidUpState_32f_C1R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_8u_C3R(
        ppState: *mut *mut IppiPyramidUpState_8u_C3R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_16u_C3R(
        ppState: *mut *mut IppiPyramidUpState_16u_C3R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp16s,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUpInit_32f_C3R(
        ppState: *mut *mut IppiPyramidUpState_32f_C3R,
        dstRoi: IppiSize,
        rate: Ipp32f,
        pKernel: *mut Ipp32f,
        kerSize: ::std::os::raw::c_int,
        mode: ::std::os::raw::c_int,
        StateBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPyramidDownROI(
        srcRoi: IppiSize,
        pDstRoi: *mut IppiSize,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPyramidUpROI(
        srcRoi: IppiSize,
        pDstRoiMin: *mut IppiSize,
        pDstRoiMax: *mut IppiSize,
        rate: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_8u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_8u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_16u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_16u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerDown_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidDownState_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_8u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_8u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_16u_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_16u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPyramidLayerUp_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiPyramidUpState_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHaarClassifierInit_32f(
        pState: *mut IppiHaarClassifier_32f,
        pFeature: *const IppiRect,
        pWeight: *const Ipp32f,
        pThreshold: *const Ipp32f,
        pVal1: *const Ipp32f,
        pVal2: *const Ipp32f,
        pNum: *const ::std::os::raw::c_int,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHaarClassifierInit_32s(
        pState: *mut IppiHaarClassifier_32s,
        pFeature: *const IppiRect,
        pWeight: *const Ipp32s,
        pThreshold: *const Ipp32s,
        pVal1: *const Ipp32s,
        pVal2: *const Ipp32s,
        pNum: *const ::std::os::raw::c_int,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedHaarClassifierInit_32f(
        pState: *mut IppiHaarClassifier_32f,
        pFeature: *const IppiRect,
        pWeight: *const Ipp32f,
        pThreshold: *const Ipp32f,
        pVal1: *const Ipp32f,
        pVal2: *const Ipp32f,
        pNum: *const ::std::os::raw::c_int,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltedHaarClassifierInit_32s(
        pState: *mut IppiHaarClassifier_32s,
        pFeature: *const IppiRect,
        pWeight: *const Ipp32s,
        pThreshold: *const Ipp32s,
        pVal1: *const Ipp32s,
        pVal2: *const Ipp32s,
        pNum: *const ::std::os::raw::c_int,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHaarClassifierGetSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        pNum: *const ::std::os::raw::c_int,
        length: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltHaarFeatures_32f(
        pMask: *const Ipp8u,
        flag: ::std::os::raw::c_int,
        pState: *mut IppiHaarClassifier_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTiltHaarFeatures_32s(
        pMask: *const Ipp8u,
        flag: ::std::os::raw::c_int,
        pState: *mut IppiHaarClassifier_32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetHaarClassifierSize_32f(
        pState: *mut IppiHaarClassifier_32f,
        pSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetHaarClassifierSize_32s(
        pState: *mut IppiHaarClassifier_32s,
        pSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyHaarClassifier_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32f,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiHaarClassifier_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyHaarClassifier_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32f,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiHaarClassifier_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyHaarClassifier_32s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32s,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32s,
        pState: *mut IppiHaarClassifier_32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyMixedHaarClassifier_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pTilt: *const Ipp32f,
        tiltStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32f,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiHaarClassifier_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyMixedHaarClassifier_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pTilt: *const Ipp32s,
        tiltStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32f,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32f,
        pState: *mut IppiHaarClassifier_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiApplyMixedHaarClassifier_32s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pTilt: *const Ipp32s,
        tiltStep: ::std::os::raw::c_int,
        pNorm: *const Ipp32s,
        normStep: ::std::os::raw::c_int,
        pMask: *mut Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pPositive: *mut ::std::os::raw::c_int,
        threshold: Ipp32s,
        pState: *mut IppiHaarClassifier_32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortGetSize(
        roiSize: IppiSize,
        pBufsize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCreateMapCameraUndistort_32f_C1R(
        pxMap: *mut Ipp32f,
        xStep: ::std::os::raw::c_int,
        pyMap: *mut Ipp32f,
        yStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        p1: Ipp32f,
        p2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiUndistortRadial_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        fx: Ipp32f,
        fy: Ipp32f,
        cx: Ipp32f,
        cy: Ipp32f,
        k1: Ipp32f,
        k2: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientColorToGray_8u_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientColorToGray_16u_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientColorToGray_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiInpaintGetSize(
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        radius: Ipp32f,
        flags: IppiInpaintFlag,
        channels: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiInpaintInit_8u_C1R(
        ppState: *mut *mut IppiInpaintState_8u_C1R,
        pDist: *const Ipp32f,
        distStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        radius: Ipp32f,
        flags: IppiInpaintFlag,
        pStateBuf: *mut Ipp8u,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiInpaintInit_8u_C3R(
        ppState: *mut *mut IppiInpaintState_8u_C3R,
        pDist: *const Ipp32f,
        distStep: ::std::os::raw::c_int,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        radius: Ipp32f,
        flags: IppiInpaintFlag,
        pStateBuf: *mut Ipp8u,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiInpaint_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pState: *mut IppiInpaintState_8u_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiInpaint_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pState: *mut IppiInpaintState_8u_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentGradientGetBufferSize_8u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentGradientGetBufferSize_8u_C3R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentGradient_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMarker: *mut Ipp8u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
        flags: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentGradient_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMarker: *mut Ipp8u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
        flags: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershedGetBufferSize_8u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershedGetBufferSize_8u16u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershedGetBufferSize_32f16u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershed_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMarker: *mut Ipp8u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
        flag: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershed_8u16u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pMarker: *mut Ipp16u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
        flag: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSegmentWatershed_32f16u_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pMarker: *mut Ipp16u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        norm: IppiNorm,
        flag: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBoundSegments_8u_C1IR(
        pMarker: *mut Ipp8u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp8u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBoundSegments_16u_C1IR(
        pMarker: *mut Ipp16u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        val: Ipp16u,
        norm: IppiNorm,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkersGetBufferSize_8u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkersGetBufferSize_8u32s_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkersGetBufferSize_16u_C1R(
        roiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkers_8u_C1IR(
        pMarker: *mut Ipp8u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        minLabel: ::std::os::raw::c_int,
        maxLabel: ::std::os::raw::c_int,
        norm: IppiNorm,
        pNumber: *mut ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkers_8u32s_C1R(
        pSrcMarker: *mut Ipp8u,
        srcMarkerStep: ::std::os::raw::c_int,
        pDstMarker: *mut Ipp32s,
        dstMarkerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        minLabel: ::std::os::raw::c_int,
        maxLabel: ::std::os::raw::c_int,
        norm: IppiNorm,
        pNumber: *mut ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLabelMarkers_16u_C1IR(
        pMarker: *mut Ipp16u,
        markerStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        minLabel: ::std::os::raw::c_int,
        maxLabel: ::std::os::raw::c_int,
        norm: IppiNorm,
        pNumber: *mut ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianGetBufferSize(
        maxRoiSize: IppiSize,
        kernelSize: Ipp32u,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianInit(
        roiSize: IppiSize,
        kernelSize: Ipp32u,
        sigma: Ipp32f,
        borderType: IppiBorderType,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianGetSpecSize(
        kernelSize: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussian_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: *mut Ipp32f,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: *mut Ipp16u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: *mut Ipp16s,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGaussianBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderValue: *mut Ipp8u,
        pSpec: *mut IppFilterGaussianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFindPeaks3x3GetBufferSize_32f_C1R(
        roiWidth: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFindPeaks3x3GetBufferSize_32s_C1R(
        roiWidth: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFindPeaks3x3_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        pPeak: *mut IppiPoint,
        maxPeakCount: ::std::os::raw::c_int,
        pPeakCount: *mut ::std::os::raw::c_int,
        norm: IppiNorm,
        Border: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFindPeaks3x3_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32s,
        pPeak: *mut IppiPoint,
        maxPeakCount: ::std::os::raw::c_int,
        pPeakCount: *mut ::std::os::raw::c_int,
        norm: IppiNorm,
        Border: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughLineGetSize_8u_C1R(
        roiSize: IppiSize,
        delta: IppPointPolar,
        maxLineCount: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughLine_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        delta: IppPointPolar,
        threshold: ::std::os::raw::c_int,
        pLine: *mut IppPointPolar,
        maxLineCount: ::std::os::raw::c_int,
        pLineCount: *mut ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughLine_Region_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLine: *mut IppPointPolar,
        dstRoi: *mut IppPointPolar,
        maxLineCount: ::std::os::raw::c_int,
        pLineCount: *mut ::std::os::raw::c_int,
        delta: IppPointPolar,
        threshold: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughProbLineGetSize_8u_C1R(
        roiSize: IppiSize,
        delta: IppPointPolar,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughProbLineInit_8u32f_C1R(
        roiSize: IppiSize,
        delta: IppPointPolar,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppiHoughProbSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHoughProbLine_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: ::std::os::raw::c_int,
        lineLength: ::std::os::raw::c_int,
        lineGap: ::std::os::raw::c_int,
        pLine: *mut IppiPoint,
        maxLineCount: ::std::os::raw::c_int,
        pLineCount: *mut ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
        pSpec: *const IppiHoughProbSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCannyBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        filterType: IppiDifferentialKernel,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        lowThresh: Ipp32f,
        highThresh: Ipp32f,
        norm: IppNormType::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCannyBorderGetSize(
        roiSize: IppiSize,
        filterType: IppiDifferentialKernel,
        mask: IppiMaskSize,
        dataType: IppDataType::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHarrisCornerGetBufferSize(
        roiSize: IppiSize,
        filterMask: IppiMaskSize,
        avgWndSize: Ipp32u,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHarrisCorner_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        filterType: IppiDifferentialKernel,
        filterMask: IppiMaskSize,
        avgWndSize: Ipp32u,
        k: f32,
        scale: f32,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHarrisCorner_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        filterType: IppiDifferentialKernel,
        filterMask: IppiMaskSize,
        avgWndSize: Ipp32u,
        k: f32,
        scale: f32,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLineSuppressionGetBufferSize(
        roiSize: IppiSize,
        filterMask: IppiMaskSize,
        avgWndSize: Ipp32u,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLineSuppression_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pFeature: *const Ipp8u,
        featureStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        filterType: IppiDifferentialKernel,
        filterMask: IppiMaskSize,
        avgWndSize: Ipp32u,
        threshold: f32,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMarkSpecklesGetBufferSize(
        roiSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMarkSpeckles_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        speckleVal: Ipp8u,
        maxSpeckleSize: ::std::os::raw::c_int,
        maxPixDiff: Ipp8u,
        norm: IppiNorm,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMarkSpeckles_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        speckleVal: Ipp16u,
        maxSpeckleSize: ::std::os::raw::c_int,
        maxPixDiff: Ipp16u,
        norm: IppiNorm,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMarkSpeckles_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        speckleVal: Ipp16s,
        maxSpeckleSize: ::std::os::raw::c_int,
        maxPixDiff: Ipp16s,
        norm: IppiNorm,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMarkSpeckles_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        speckleVal: Ipp32f,
        maxSpeckleSize: ::std::os::raw::c_int,
        maxPixDiff: Ipp32f,
        norm: IppiNorm,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastNGetSize(
        srcSize: IppiSize,
        circleRadius: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        orientationBins: ::std::os::raw::c_int,
        option: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        nChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastNInit(
        srcSize: IppiSize,
        circleRadius: ::std::os::raw::c_int,
        N: ::std::os::raw::c_int,
        orientationBins: ::std::os::raw::c_int,
        option: ::std::os::raw::c_int,
        threshold: Ipp32f,
        dataType: IppDataType::Type,
        nChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiFastNSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastNGetBufferSize(
        pSpec: *mut IppiFastNSpec,
        dstRoiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastN_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDstCorner: *mut Ipp8u,
        dstCornerStep: ::std::os::raw::c_int,
        pDstScore: *mut Ipp8u,
        dstScoreStep: ::std::os::raw::c_int,
        pNumCorner: *mut ::std::os::raw::c_int,
        srcRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *mut IppiFastNSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFastN2DToVec_8u(
        pSrcCorner: *const Ipp8u,
        srcCornerStep: ::std::os::raw::c_int,
        pSrcScore: *const Ipp8u,
        srcScoreStep: ::std::os::raw::c_int,
        pDst: *mut IppiCornerFastN,
        srcRoiSize: IppiSize,
        maxLen: ::std::os::raw::c_int,
        pNumCorners: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiFastNSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFGMMGetBufferSize_8u_C3R(
        roi: IppiSize,
        maxNGauss: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFGMMInit_8u_C3R(
        roi: IppiSize,
        maxNGauss: ::std::os::raw::c_int,
        pModel: *mut IppFGMModel,
        pState: *mut IppFGMMState_8u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFGMMForeground_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pState: *mut IppFGMMState_8u_C3R,
        pModel: *mut IppFGMModel,
        learning_rate: f64,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFGMMBackground_8u_C3R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pState: *mut IppFGMMState_8u_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableGetBufferSize(
        roiSize: IppiSize,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        kernelType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableGetSpecSize(
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableInit_16s(
        pRowKernel: *const Ipp16s,
        pColumnKernel: *const Ipp16s,
        kernelSize: IppiSize,
        divisor: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterSeparableSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparableInit_32f(
        pRowKernel: *const Ipp32f,
        pColumnKernel: *const Ipp32f,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterSeparableSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_8u16s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp8u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16s,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp16u,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSeparable_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: *mut Ipp32f,
        pSpec: *const IppiFilterSeparableSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMalloc_8u_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C1_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C2_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C3_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_AC4_L(
        widthPixels: IppSizeL,
        heightPixels: IppSizeL,
        pStepBytes: *mut IppSizeL,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiCopy_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4IR_L(
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4IR_L(
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4IR_L(
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4IR_L(
        pSrcDst: *mut Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4IR_L(
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4R_L(
        pSrc: *const Ipp32s,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32s,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4IR_L(
        pSrc: *const Ipp8u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4IR_L(
        pSrc: *const Ipp16s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4IR_L(
        pSrc: *const Ipp32s,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4IR_L(
        pSrc: *const Ipp16u,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcDstStep: IppSizeL,
        srcRoiSize: IppiSizeL,
        dstRoiSize: IppiSizeL,
        topBorderHeight: IppSizeL,
        leftborderwidth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4IR_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSizeL: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4R_L(
        pSrc1: *const Ipp32f,
        src1Step: IppSizeL,
        pSrc2: *const Ipp32f,
        src2Step: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4IR_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4RSfs_L(
        pSrc1: *const Ipp16s,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16s,
        src2Step: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4RSfs_L(
        pSrc1: *const Ipp8u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp8u,
        src2Step: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4RSfs_L(
        pSrc1: *const Ipp16u,
        src1Step: IppSizeL,
        pSrc2: *const Ipp16u,
        src2Step: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4IRSfs_L(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4IRSfs_L(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4IRSfs_L(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4IRSfs_L(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4IRSfs_L(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4IRSfs_L(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4IR_L(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4IR_L(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: Ipp32f,
        Dst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1IR_L(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4IR_L(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4IRSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4IRSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4IRSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4RSfs_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4RSfs_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4RSfs_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1IRSfs_L(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4IRSfs_L(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1IRSfs_L(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4IRSfs_L(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1IRSfs_L(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4IRSfs_L(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: IppSizeL,
        roiSize: IppiSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderGetBufferSize_L(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSizeL,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType::Type,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderInit_L(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSizeL,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType::Type,
        valSquareSigma: Ipp32f,
        posSquareSigma: Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut IppSizeL,
        pInitBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_L(
        pSpec: *const IppiResizeSpec,
        dstSize: IppiSizeL,
        numChannels: Ipp32u,
        pBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_L(
        pSpec: *const IppiResizeSpec,
        pBorderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_L(
        pSpec: *const IppiResizeSpec,
        dstOffset: IppiPointL,
        srcOffset: *mut IppiPointL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_L(
        pSpec: *const IppiResizeSpec,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        srcRoiOffset: *mut IppiPointL,
        srcRoiSize: *mut IppiSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppiResizeSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        valueB: Ipp32f,
        valueC: Ipp32f,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_8u_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        numLobes: Ipp32u,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLanczosInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstOffset: IppiPointL,
        dstSize: IppiSizeL,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetBufferSize_L(
        pSpec: *const IppiWarpSpec,
        dstRoiSize: IppiSizeL,
        pBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineBound_L(
        srcROI: IppiRectL,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineQuad_L(
        srcROI: IppiRectL,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineTransform_L(
        srcROI: IppiRectL,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineSrcRoi_L(
        srcSize: IppiSizeL,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        srcRoi: *mut IppiRectL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateShift_L(
        xCenter: f64,
        yCenter: f64,
        angle: f64,
        xShift: *mut f64,
        yShift: *mut f64,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateTransform_L(
        angle: f64,
        xShift: f64,
        yShift: f64,
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineGetSize_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType::Type,
        direction: IppiWarpDirection::Type,
        borderType: IppiBorderType,
        flags: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
        pInitBufSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearestInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinearInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubicInit_L(
        srcSize: IppiSizeL,
        dstSize: IppiSizeL,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        flags: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C4R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C1R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C3R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C4R_L(
        pSrc: *const Ipp16u,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C1R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C3R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C4R_L(
        pSrc: *const Ipp16s,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C4R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C4R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiOffset: IppiPointL,
        dstRoiSize: IppiSizeL,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderGetSize_L(
        kernelVolume: IpprVolumeL,
        dstRoiVolume: IpprVolumeL,
        dataType: IppDataType::Type,
        kernelType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_16s_L(
        pKernel: *const Ipp16s,
        kernelVolume: IpprVolumeL,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_32f_L(
        pKernel: *const Ipp32f,
        kernelVolume: IpprVolumeL,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_64f_L(
        pKernel: *const Ipp64f,
        kernelVolume: IpprVolumeL,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        borderType: IpprBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
        value: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_8u_C1V_L(
        pSrc: *const Ipp8u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp8u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16u_C1V_L(
        pSrc: *const Ipp16u,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16u,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16s_C1V_L(
        pSrc: *const Ipp16s,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp16s,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_32f_C1V_L(
        pSrc: *const Ipp32f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp32f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_64f_C1V_L(
        pSrc: *const Ipp64f,
        srcPlaneStep: IppSizeL,
        srcStep: IppSizeL,
        srcRoiVolume: IpprVolumeL,
        pDst: *mut Ipp64f,
        dstPlaneStep: IppSizeL,
        dstStep: IppSizeL,
        dstRoiVolume: IpprVolumeL,
        topBorderHeight: IppSizeL,
        leftBorderWidth: IppSizeL,
        forwardBorderDepth: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralGetBufferSize_L(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSizeL,
        kernelWidthHeight: IppSizeL,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType::Type,
        pSpecSize: *mut IppSizeL,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralInit_L(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSizeL,
        kernelWidthHeight: IppSizeL,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType::Type,
        valSquareSigma: Ipp64f,
        posSquareSigma: Ipp64f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C1R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C3R_L(
        pSrc: *const Ipp8u,
        srcStep: IppSizeL,
        pDst: *mut Ipp8u,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C1R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C3R_L(
        pSrc: *const Ipp32f,
        srcStep: IppSizeL,
        pDst: *mut Ipp32f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C1R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C3R_L(
        pSrc: *const Ipp64f,
        srcStep: IppSizeL,
        pDst: *mut Ipp64f,
        dstStep: IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_P3R_L(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_P3R_L(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_P3R_L(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut IppSizeL,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut IppSizeL,
        dstRoiSize: IppiSizeL,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippiMalloc_8u_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C1(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C2(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C3(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_C4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiMalloc_8u_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippiMalloc_16u_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippiMalloc_16s_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippiMalloc_32s_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippiMalloc_32f_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippiMalloc_32sc_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippiMalloc_32fc_AC4(
        widthPixels: ::std::os::raw::c_int,
        heightPixels: ::std::os::raw::c_int,
        pStepBytes: *mut ::std::os::raw::c_int,
    ) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippiFree(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn ippiAdd_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSubC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_C4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC_32f_AC4IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAdd_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSub_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMul_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        val: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C1IR(
        value: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C3IR(
        value: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_C4IR(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_32f_AC4IR(
        val: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C1IRSfs(
        value: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C3IRSfs(
        value: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_C4IRSfs(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16s_AC4IRSfs(
        val: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C1IRSfs(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C3IRSfs(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_C4IRSfs(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_8u_AC4IRSfs(
        val: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C1IRSfs(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C3IRSfs(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_C4IRSfs(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDivC_16u_AC4IRSfs(
        val: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAbs_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_AC4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_8u_C4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_AC4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16u_C4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_AC4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_16s_C4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqr_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_AC4RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_AC4RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_AC4RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_8u_AC4IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16u_AC4IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_16s_AC4IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrt_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLn_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ScalFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C1IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C3IRSfs(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16s_C3RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C1IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C3IRSfs(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C1IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C3IRSfs(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_8u_C3RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiExp_16u_C3RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sFact: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulScale_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulCScale_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C3R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_C4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_8u64f_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16u64f_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_16s64f_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32u64f_AC4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32s64f_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProd_32f64f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDp: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProdCol_32f_L2(
        ppSrcRow: *const *const Ipp32f,
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        width: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDotProdCol_64f_L2(
        ppSrcRow: *const *const Ipp64f,
        pTaps: *const Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        width: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPack_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulPackConj_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPackToCplxExtend_32f32fc_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCplxExtendToPack_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCplxExtendToPack_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhasePackGetBufferSize_32f(
        numChannels: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitudePackGetBufferSize_32f(
        numChannels: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitude_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMagnitude_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhase_32fc32f_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPhase_32fc32f_C3R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AP4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AP4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_8u_AP4IR(
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremul_16u_AP4IR(
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AC4IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AC4IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AP4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AP4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_AP4IR(
        alpha: Ipp8u,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_AP4IR(
        alpha: Ipp16u,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C4IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C4IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C3IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C3IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_8u_C1IR(
        alpha: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaPremulC_16u_C1IR(
        alpha: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC4R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AP4R(
        pSrc1: *const *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AP4R(
        pSrc1: *const *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AP4R(
        pSrc1: *const *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AP4R(
        pSrc1: *const *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp16s,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32s,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32u_C1R(
        pSrc1: *const Ipp32u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32u,
        pSrc2: *const Ipp32u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32u,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp32f,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32u_AC4IR(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_8u_AP4IR(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaComp_16u_AP4IR(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_AP4IR(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *const *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_AP4IR(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *const *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp16s,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp16s,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32s,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32u_C1IR(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32u,
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32u,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompC_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        alpha1: Ipp32f,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        alpha2: Ipp32f,
        roiSize: IppiSize,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInit_C_32fc(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pFFTSpec: *mut IppiFFTSpec_C_32fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInit_R_32f(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pFFTSpec: *mut IppiFFTSpec_R_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTGetSize_C_32fc(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTGetSize_R_32f(
        orderX: ::std::os::raw::c_int,
        orderY: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTFwd_RToPack_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFFTInv_PackToR_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pFFTSpec: *const IppiFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInit_C_32fc(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppiDFTSpec_C_32fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInit_R_32f(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppiDFTSpec_R_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTGetSize_C_32fc(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTGetSize_R_32f(
        roiSize: IppiSize,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_CToC_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_CToC_32fc_C1IR(
        pSrcDst: *mut Ipp32fc,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTFwd_RToPack_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDFTInv_PackToR_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        pDFTSpec: *const IppiDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwdInit_32f(
        pDCTSpec: *mut IppiDCTFwdSpec_32f,
        roiSize: IppiSize,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInvInit_32f(
        pDCTSpec: *mut IppiDCTInvSpec_32f,
        roiSize: IppiSize,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwdGetSize_32f(
        roiSize: IppiSize,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInvGetSize_32f(
        roiSize: IppiSize,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTFwd_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCTInv_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pDCTSpec: *const IppiDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_2x2_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_4x4_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_2x2_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_4x4_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To2x2Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To4x4Inv_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To2x2Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8To4x4Inv_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_A10_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_A10_16s_C1I(pSrcDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_16s8u_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8FwdLS_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        addVal: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8InvLSClip_16s8u_C1R(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        addVal: Ipp16s,
        clipDown: Ipp8u,
        clipUp: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_32f_C1(pSrc: *const Ipp32f, pDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_32f_C1(pSrc: *const Ipp32f, pDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Fwd_32f_C1I(pSrcDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiDCT8x8Inv_32f_C1I(pSrcDst: *mut Ipp32f) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdInit_32f_C1R(
        pSpec: *mut IppiWTFwdSpec_32f_C1R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwdInit_32f_C3R(
        pSpec: *mut IppiWTFwdSpec_32f_C3R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwd_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pApproxDst: *mut Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXDst: *mut Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYDst: *mut Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYDst: *mut Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWTFwdSpec_32f_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTFwd_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pApproxDst: *mut Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXDst: *mut Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYDst: *mut Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYDst: *mut Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWTFwdSpec_32f_C3R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvInit_32f_C1R(
        pSpec: *mut IppiWTInvSpec_32f_C1R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInvInit_32f_C3R(
        pSpec: *mut IppiWTInvSpec_32f_C3R,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        anchorLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        anchorHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInv_32f_C1R(
        pApproxSrc: *const Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXSrc: *const Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYSrc: *const Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYSrc: *const Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSpec: *const IppiWTInvSpec_32f_C1R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWTInv_32f_C3R(
        pApproxSrc: *const Ipp32f,
        approxStep: ::std::os::raw::c_int,
        pDetailXSrc: *const Ipp32f,
        detailXStep: ::std::os::raw::c_int,
        pDetailYSrc: *const Ipp32f,
        detailYStep: ::std::os::raw::c_int,
        pDetailXYSrc: *const Ipp32f,
        detailXYStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        pSpec: *const IppiWTInvSpec_32f_C3R,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDecimateFilterRow_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        fraction: IppiFraction::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDecimateFilterColumn_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        fraction: IppiFraction::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMirror_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flip: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_8u_AC4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16u_AC4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C1R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C3R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_C4R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_16s_AC4R(
        pSrc: *const Ipp16s,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_32f_AC4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp32f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp32f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C1R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C3R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_C4R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRemap_64f_AC4R(
        pSrc: *const Ipp64f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pxMap: *const Ipp64f,
        xMapStep: ::std::os::raw::c_int,
        pyMap: *const Ipp64f,
        yMapStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSetMode(hint: IppHintAlgorithm::Type, pSpec: *mut IppiResizeSpec)
        -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilterGetSize_8u_C1R(
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        filter: IppiResizeFilterType::Type,
        pSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilterInit_8u_C1R(
        pState: *mut IppiResizeFilterState,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        filter: IppiResizeFilterType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeFilter_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pState: *mut IppiResizeFilterState,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYCbCr422GetBufSize(
        srcROI: IppiRect,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYCbCr422_8u_C2R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetAffineSrcRoi(
        srcSize: IppiSize,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoi: *mut IppiRect,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateShift(
        xCenter: f64,
        yCenter: f64,
        angle: f64,
        xShift: *mut f64,
        yShift: *mut f64,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetRotateTransform(
        angle: f64,
        xShift: f64,
        yShift: f64,
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetPerspectiveTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 3usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearBound(
        srcROI: IppiRect,
        bound: *mut [f64; 2usize],
        coeffs: *const [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearQuad(
        srcROI: IppiRect,
        quad: *mut [f64; 2usize],
        coeffs: *const [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetBilinearTransform(
        srcROI: IppiRect,
        quad: *const [f64; 2usize],
        coeffs: *mut [f64; 4usize],
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearGetBufferSize(
        srcSize: IppiSize,
        srcROI: IppiRect,
        dstROI: IppiRect,
        direction: IppiWarpDirection::Type,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearBack_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuadGetBufferSize(
        srcSize: IppiSize,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C1R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C3R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_8u_C4R(
        pSrc: *const Ipp8u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C1R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C3R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_32f_C4R(
        pSrc: *const Ipp32f,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C1R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C3R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpBilinearQuad_16u_C4R(
        pSrc: *const Ipp16u,
        srcSize: IppiSize,
        srcStep: ::std::os::raw::c_int,
        srcROI: IppiRect,
        srcQuad: *const [f64; 2usize],
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstROI: IppiRect,
        dstQuad: *const [f64; 2usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetBufferSize(
        pSpec: *const IppiWarpSpec,
        dstRoiSize: IppiSize,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadGetSize(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType::Type,
        dataType: IppDataType::Type,
        interpolation: IppiInterpolationType::Type,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadNearestInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType::Type,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadLinearInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType::Type,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpQuadCubicInit(
        srcSize: IppiSize,
        srcQuad: *const [f64; 2usize],
        dstSize: IppiSize,
        dstQuad: *const [f64; 2usize],
        transform: IppiWarpTransformType::Type,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineGetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType::Type,
        direction: IppiWarpDirection::Type,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearestInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubicInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineNearest_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineLinear_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpAffineCubic_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpGetRectInfinite() -> IppiRect;
}
extern "C" {
    pub fn ippiWarpPerspectiveGetSize(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        interpolation: IppiInterpolationType::Type,
        direction: IppiWarpDirection::Type,
        borderType: IppiBorderType,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearestInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinearInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubicInit(
        srcSize: IppiSize,
        srcRoi: IppiRect,
        dstSize: IppiSize,
        dataType: IppDataType::Type,
        coeffs: *const [f64; 3usize],
        direction: IppiWarpDirection::Type,
        numChannels: ::std::os::raw::c_int,
        valueB: Ipp64f,
        valueC: Ipp64f,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        smoothEdge: ::std::os::raw::c_int,
        pSpec: *mut IppiWarpSpec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWarpPerspectiveCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        pSpec: *const IppiWarpSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMomentGetStateSize_64f(
        hint: IppHintAlgorithm::Type,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMomentInit_64f(
        pState: *mut IppiMomentState_64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMoments64f_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pCtx: *mut IppiMomentState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetSpatialMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        roiOffset: IppiPoint,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetCentralMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetNormalizedSpatialMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        roiOffset: IppiPoint,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetNormalizedCentralMoment_64f(
        pState: *const IppiMomentState_64f,
        mOrd: ::std::os::raw::c_int,
        nOrd: ::std::os::raw::c_int,
        nChannel: ::std::os::raw::c_int,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGetHuMoments_64f(
        pState: *const IppiMomentState_64f,
        nChannel: ::std::os::raw::c_int,
        pHm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_Inf_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L1_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNorm_L2_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_Inf_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L1_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormDiff_L2_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_Inf_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L1_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pValue: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNormRel_L2_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        value: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSum: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSum_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        sum: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMean: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMean_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_8u32f_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_16u32f_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndex_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pQualityIndex: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiQualityIndexGetBufferSize(
        srcType: IppDataType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramGetBufferSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        nLevels: *const ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        uniform: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramInit(
        dataType: IppDataType::Type,
        pLevels: *mut *const Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiHistogramSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramUniformInit(
        dataType: IppDataType::Type,
        lowerLevel: *mut Ipp32f,
        upperLevel: *mut Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiHistogramSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogramGetLevels(
        pSpec: *const IppiHistogramSpec,
        pLevels: *mut *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHistogram_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pHist: *mut *mut Ipp32u,
        pSpec: *const IppiHistogramSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_GetSize(
        interp: IppiInterpolationType::Type,
        dataType: IppDataType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        nLevels: *const ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_8u(
        interp: IppiInterpolationType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_16u(
        interp: IppiInterpolationType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_16s(
        interp: IppiInterpolationType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32s,
        pLevels: *mut *const Ipp32s,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUT_Init_32f(
        interp: IppiInterpolationType::Type,
        ippChan: IppChannels::Type,
        roiSize: IppiSize,
        pValues: *mut *const Ipp32f,
        pLevels: *mut *const Ipp32f,
        nLevels: *mut ::std::os::raw::c_int,
        pSpec: *mut IppiLUT_Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u32u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp32u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u24u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u32u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp32u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u24u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp8u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLUTPalette_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pTable: *const *const Ipp16u,
        nBitSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: Ipp8u,
        upperBound: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp8u,
        upperBound: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp8u,
        upperBound: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: Ipp32f,
        upperBound: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp32f,
        upperBound: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCountInRange_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        counts: *mut ::std::os::raw::c_int,
        lowerBound: *mut Ipp32f,
        upperBound: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianGetBufferSize_32f(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        nChannels: Ipp32u,
        bufferSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianGetBufferSize_64f(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        nChannels: Ipp32u,
        bufferSize: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedian_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianCross_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianColor_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianWeightedCenter3x3_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        weight: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMedianBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorderGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMaxBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterMinBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorderGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBoxBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBox_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16s32f_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_16u32f_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindow_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        BorderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowRow_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSumWindowColumn_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: ::std::os::raw::c_int,
        anchor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorderGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorder_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertSecondBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizSecondBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelNegVertBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelVertBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelHorizBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrVertMaskBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterScharrHorizMaskBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittVertBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterPrewittHorizBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsDownBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterRobertsUpBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterLaplaceBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterHipassBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSharpenBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobelGetBufferSize(
        dstRoiSize: IppiSize,
        mask: IppiMaskSize,
        normType: IppNormType::Type,
        srcDataType: IppDataType::Type,
        dstDataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterSobel_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWienerGetBufferSize(
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        channels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterWiener_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiSize,
        anchor: IppiPoint,
        noise: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvGetBufferSize(
        src1Size: IppiSize,
        src2Size: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConv_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        src1Size: IppiSize,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        src2Size: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        divisor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNormGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCrossCorrNorm_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNormGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSqrDistanceNorm_8u_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LT_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_Val_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_GTVal_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp8u,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16s,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp32f,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTVal_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: *const Ipp16u,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp8u,
        valueLT: Ipp8u,
        thresholdGT: Ipp8u,
        valueGT: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16s,
        valueLT: Ipp16s,
        thresholdGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp32f,
        valueLT: Ipp32f,
        thresholdGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp8u,
        valueLT: Ipp8u,
        thresholdGT: Ipp8u,
        valueGT: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16s,
        valueLT: Ipp16s,
        thresholdGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp32f,
        valueLT: Ipp32f,
        thresholdGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp8u,
        valueLT: *const Ipp8u,
        thresholdGT: *const Ipp8u,
        valueGT: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16s,
        valueLT: *const Ipp16s,
        thresholdGT: *const Ipp16s,
        valueGT: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp32f,
        valueLT: *const Ipp32f,
        thresholdGT: *const Ipp32f,
        valueGT: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16u,
        valueLT: Ipp16u,
        thresholdGT: Ipp16u,
        valueGT: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: Ipp16u,
        valueLT: Ipp16u,
        thresholdGT: Ipp16u,
        valueGT: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThreshold_LTValGTVal_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        thresholdLT: *const Ipp16u,
        valueLT: *const Ipp16u,
        thresholdGT: *const Ipp16u,
        valueGT: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComputeThreshold_Otsu_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pThreshold: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBoxGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGaussGetBufferSize(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGaussInit(
        roiSize: IppiSize,
        maskSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        sigma: Ipp32f,
        pSpec: *mut IppiThresholdAdaptiveSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBox_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGauss_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *mut IppiThresholdAdaptiveSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveBox_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        maskSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiThresholdAdaptiveGauss_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        delta: Ipp32f,
        valGT: Ipp8u,
        valLE: Ipp8u,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pSpec: *mut IppiThresholdAdaptiveSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyManaged_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        flags: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4CR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C1MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_AC4MR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3CR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4CR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C1MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_AC4MR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3CR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4CR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C1MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_AC4MR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C3P3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_P3C3R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_C4P4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_8u_P4C4R(
        pSrc: *const *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C3P3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_P3C3R(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_C4P4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16s_P4C4R(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C3P3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_P3C3R(
        pSrc: *const *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_C4P4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32f_P4C4R(
        pSrc: *const *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3CR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4CR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C1MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_AC4MR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C3P3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_P3C3R(
        pSrc: *const *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_C4P4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_32s_P4C4R(
        pSrc: *const *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4CR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C1MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_AC4MR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C3P3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_P3C3R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_C4P4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopy_16u_P4C4R(
        pSrc: *const *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C1IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C3IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_8u_C4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C1IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C3IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16s_C4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C3IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32s_C4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C3IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyReplicateBorder_32f_C4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyConstBorder_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C1IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C3IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_8u_C4IR(
        pSrc: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C1IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C3IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16s_C4IR(
        pSrc: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C3IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32s_C4IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4IR(
        pSrc: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C3IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyMirrorBorder_32f_C4IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32s_C1IR(
        pSrc: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCopyWrapBorder_32f_C1IR(
        pSrc: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        dstRoiSize: IppiSize,
        topBorderHeight: ::std::os::raw::c_int,
        leftborderwidth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyConstBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
        value: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprCopyReplicateBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        srcRoiVolume: IpprVolume,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        topBorderHeight: ::std::os::raw::c_int,
        leftBorderWidth: ::std::os::raw::c_int,
        forwardBorderDepth: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDup_8u_C1C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDup_8u_C1C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C1R(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3CR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4CR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_AC4R(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C1MR(
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C3MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_C4MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_8u_AC4MR(
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C1R(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3CR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4CR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_AC4R(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C1MR(
        value: Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C3MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_C4MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16s_AC4MR(
        value: *const Ipp16s,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C1R(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3CR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4CR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_AC4R(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C1MR(
        value: Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C3MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_C4MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32f_AC4MR(
        value: *const Ipp32f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C1R(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3CR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4CR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_AC4R(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C1MR(
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C3MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_C4MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_32s_AC4MR(
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C1R(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3CR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4CR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_AC4R(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C1MR(
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C3MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_C4MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSet_16u_AC4MR(
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMask: *const Ipp8u,
        maskStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp8u,
        high: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16s,
        high: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp32f,
        high: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandUniform_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        low: Ipp16u,
        high: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp8u,
        stdev: Ipp8u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16s,
        stdev: Ipp16s,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_32f_AC4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp32f,
        stdev: Ipp32f,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAddRandGauss_16u_AC4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        mean: Ipp16u,
        stdev: Ipp16u,
        pSeed: *mut ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C1R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C3R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_C4R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_8u_AC4R(
        pDst: *mut Ipp8u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C1R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C3R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_C4R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16u_AC4R(
        pDst: *mut Ipp16u,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C1R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C3R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_C4R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_16s_AC4R(
        pDst: *mut Ipp16s,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C1R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C3R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_C4R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageJaehne_32f_AC4R(
        pDst: *mut Ipp32f,
        DstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C1R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C3R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_C4R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_8u_AC4R(
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C1R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C3R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_C4R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16u_AC4R(
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C1R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C3R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_C4R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_16s_AC4R(
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C1R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C3R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_C4R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiImageRamp_32f_AC4R(
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        offset: f32,
        slope: f32,
        axis: IppiAxis::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u8s_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u16s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s8u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s16s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s16u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32u_C1Rs(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C3R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_AC4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32s_C4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C3R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_AC4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s32f_C4R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u8s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u16s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32s_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16u32f_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s8u_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s16u_C1Rs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32u_C1Rs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_16s32f_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u8u_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u8s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u16u_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u16s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u32s_C1RSfs(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32u32f_C1R(
        pSrc: *const Ipp32u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8u_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s8s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s16u_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s16s_C1RSfs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s32u_C1Rs(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f8s_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f16s_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32u_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32u,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32u_C1IRSfs(
        pSrcDst: *mut Ipp32u,
        srcDstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_32f32s_C1RSfs(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        round: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f8u_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f8s_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f16u_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_64f16s_C1RSfs(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        roundMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiConvert_8s64f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u8s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u64f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s8u_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s16u_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s16s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s32s_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s32f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s64f_C1R(
        pSrc: *const Ipp8s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u8s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u16s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u32s_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u64f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s8s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s16u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s32s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s64f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s8s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s16u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s16s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s32f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s64f_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f8s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f16s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f32s_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f64f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f8u_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f8s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f16u_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f16s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f32s_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f32f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8u_C1IR(
        pSrcDst: *const Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_8s_C1IR(
        pSrcDst: *const Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16u_C1IR(
        pSrcDst: *const Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_16s_C1IR(
        pSrcDst: *const Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32s_C1IR(
        pSrcDst: *const Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_32f_C1IR(
        pSrcDst: *const Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScaleC_64f_C1IR(
        pSrcDst: *const Ipp64f,
        srcDstStep: ::std::os::raw::c_int,
        mVal: Ipp64f,
        aVal: Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp8u,
        hiVal: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp16u,
        hiVal: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp16s,
        hiVal: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBinToGray_1u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        loVal: Ipp32f,
        hiVal: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_8u1u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_16u1u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_16s1u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGrayToBin_32f1u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstBitOffset: ::std::os::raw::c_int,
        roiSize: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPolarToCart_32fc_C1R(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiPolarToCart_32fc_C3R(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C3C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_8u_C4C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C3C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16s_C4C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C3C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_16u_C4C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C3C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32s_C4C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C3C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
        val: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSwapChannels_32f_C4C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        dstOrder: *const ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u16s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32s_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_8u32f_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16u8u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_16s8u_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32s8u_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiScale_32f8u_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        vMin: Ipp32f,
        vMax: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMin_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinIndx_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMax_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp8u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp8u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16s,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16s,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp16u,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp16u,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMax: *mut Ipp32f,
        pIndexX: *mut ::std::os::raw::c_int,
        pIndexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxIndx_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        max: *mut Ipp32f,
        indexX: *mut ::std::os::raw::c_int,
        indexY: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp8u,
        pMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp8u,
        max: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16s,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16s,
        max: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp16u,
        pMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp16u,
        max: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pMin: *mut Ipp32f,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinMax_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        min: *mut Ipp32f,
        max: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp32f,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp32f,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp32f,
        pDstGlobalMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp16s,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp16s,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp16s,
        pDstGlobalMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp16u,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp16u,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp16u,
        pDstGlobalMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiBlockMinMax_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcSize: IppiSize,
        pDstMin: *mut Ipp8u,
        dstMinStep: ::std::os::raw::c_int,
        pDstMax: *mut Ipp8u,
        dstMaxStep: ::std::os::raw::c_int,
        blockSize: IppiSize,
        pDstGlobalMin: *mut Ipp8u,
        pDstGlobalMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C1IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C1IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C3IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C3IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C3IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_C4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_C4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16s_AC4IR(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_AC4IR(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMinEvery_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMaxEvery_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAnd_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAndC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOr_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiOrC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C1IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C3IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_C4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_8u_AC4IR(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C1IR(
        value: Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C3IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_C4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_8u_AC4IR(
        value: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C1IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C3IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_C4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_16u_AC4IR(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C1IR(
        value: Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C3IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_C4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_16u_AC4IR(
        value: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C1R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C3R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_AC4R(
        pSrc1: *const Ipp32s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C1IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C3IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_C4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXor_32s_AC4IR(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32s,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C1IR(
        value: Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C3IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_C4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiXorC_32s_AC4IR(
        value: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiNot_8u_AC4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_8u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_16u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLShiftC_32s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_8u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16u_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_16s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_AC4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32u,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C1IR(
        value: Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C3IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_C4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiRShiftC_32s_AC4IR(
        value: *const Ipp32u,
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_AC4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_AC4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_AC4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16s,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_AC4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_AC4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp16u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompare_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        ippCmpOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C1R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C3R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_AC4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEps_32f_C4R(
        pSrc1: *const Ipp32f,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_AC4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompareEqualEpsC_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp32f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        eps: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiErode3x3_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDilate3x3_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiZigzagInv8x8_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiZigzagFwd8x8_16s_C1(pSrc: *const Ipp16s, pDst: *mut Ipp16s) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlett_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSep_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettGetBufferSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinBartlettSepGetBufferSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHamming_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSep_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingGetBufferSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiWinHammingSepGetBufferSize(
        dataType: IppDataType::Type,
        roiSize: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C1R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C3R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C4R(
        pSrc: *const Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiTranspose_32fc_C1R(
        pSrc: *const Ipp32fc,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTGetSize_32f(
        nChannels: ::std::os::raw::c_int,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTInit_32f_C1R(
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C1R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFTInit_32f_C3R(
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C3R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        FFTorder: ::std::os::raw::c_int,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFT_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvFFT_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        pDeconvFFTState: *mut IppiDeconvFFTState_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRGetSize_32f(
        numChannels: ::std::os::raw::c_int,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRInit_32f_C1R(
        pDeconvLR: *mut IppiDeconvLR_32f_C1R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLRInit_32f_C3R(
        pDeconvLR: *mut IppiDeconvLR_32f_C3R,
        pKernel: *const Ipp32f,
        kernelSize: ::std::os::raw::c_int,
        maxroi: IppiSize,
        threshold: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLR_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        numiter: ::std::os::raw::c_int,
        pDeconvLR: *mut IppiDeconvLR_32f_C1R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeconvLR_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roi: IppiSize,
        numiter: ::std::os::raw::c_int,
        pDeconvLR: *mut IppiDeconvLR_32f_C3R,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C3R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_8u_C4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C3R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16u_C4R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C1R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C3R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiCompColorKey_16s_C4R(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorkey: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiAlphaCompColorKey_8u_AC4R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        alpha1: Ipp8u,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        alpha2: Ipp8u,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        colorKey: *mut Ipp8u,
        alphaType: IppiAlphaType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMedian_8u_P3C1R(
        pSrc: *mut *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        size: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDeinterlaceFilterCAVT_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        threshold: Ipp16u,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderGetBufferSize(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSize,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorderInit(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSize,
        radius: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType::Type,
        valSquareSigma: Ipp32f,
        posSquareSigma: Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp8u,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *mut Ipp32f,
        pSpec: *mut IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterGetBufSize_64f_C1R(
        kernelSize: IppiSize,
        roiWidth: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilter_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        pKernel: *const Ipp64f,
        kernelSize: IppiSize,
        anchor: IppiPoint,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C1RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C3RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_AC4RSfs(
        pSrc1: *const Ipp16s,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16s,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C1RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C3RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_AC4RSfs(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C1RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C3RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_AC4RSfs(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C1IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C3IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_C4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16s_AC4IRSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C1IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C3IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_C4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_8u_AC4IRSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C1IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C3IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_C4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiDiv_Round_16u_AC4IRSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        rndMode: IppRoundMode::Type,
        ScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSize_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut ::std::os::raw::c_int,
        pInitBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBufferSize_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstSize: IppiSize,
        numChannels: Ipp32u,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_8u(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_16u(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_16s(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_32f(
        pSpec: *const IppiResizeSpec_32f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetBorderSize_64f(
        pSpec: *const IppiResizeSpec_64f,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcOffset_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_8u(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_16u(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_16s(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_32f(
        pSpec: *const IppiResizeSpec_32f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeGetSrcRoi_64f(
        pSpec: *const IppiResizeSpec_64f,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearestInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinearInit_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubicInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczosInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperShiftInit_8u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        xShift: Ipp64f,
        yShift: Ipp64f,
        borderType: IppiBorderType,
        borderVal: *const Ipp8u,
        smoothEdge: ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperShiftInit_16u(
        srcSize: IppiSize,
        dstSize: IppiSize,
        xShift: Ipp64f,
        yShift: Ipp64f,
        borderType: IppiBorderType,
        borderVal: *const Ipp16u,
        smoothEdge: ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperShiftInit_16s(
        srcSize: IppiSize,
        dstSize: IppiSize,
        xShift: Ipp64f,
        yShift: Ipp64f,
        borderType: IppiBorderType,
        borderVal: *const Ipp16s,
        smoothEdge: ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuperShiftInit_32f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        xShift: Ipp64f,
        yShift: Ipp64f,
        borderType: IppiBorderType,
        borderVal: *const Ipp32f,
        smoothEdge: ::std::os::raw::c_int,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IppiResizeSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeNearest_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLinear_64f_C4R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeCubic_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeLanczos_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeSuper_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLinearInit_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeSpec_64f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingCubicInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp32f,
        valueC: Ipp32f,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingCubicInit_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        valueB: Ipp64f,
        valueC: Ipp64f,
        pSpec: *mut IppiResizeSpec_64f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLanczosInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_32f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasingLanczosInit_64f(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeSpec_64f,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: Ipp32s,
        pDst: *mut Ipp16u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: Ipp32s,
        pDst: *mut Ipp16s,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: Ipp32s,
        pDst: *mut Ipp32f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiResizeSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeAntialiasing_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: Ipp32s,
        pDst: *mut Ipp64f,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiResizeSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut Ipp32s,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetBufSize(
        pSpec: *const IppiResizeYUV422Spec,
        dstSize: IppiSize,
        pBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetBorderSize(
        pSpec: *const IppiResizeYUV422Spec,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSrcOffset(
        pSpec: *const IppiResizeYUV422Spec,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422GetSrcRoi(
        pSpec: *const IppiResizeYUV422Spec,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422NearestInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV422Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422LinearInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV422Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422Nearest_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeYUV422Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV422Linear_8u_C2R(
        pSrc: *const Ipp8u,
        srcStep: Ipp32s,
        pDst: *mut Ipp8u,
        dstStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiResizeYUV422Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSize(
        srcSize: IppiSize,
        dstSize: IppiSize,
        interpolation: IppiInterpolationType::Type,
        antialiasing: Ipp32u,
        pSpecSize: *mut Ipp32s,
        pInitBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetBufferSize(
        pSpec: *const IppiResizeYUV420Spec,
        dstSize: IppiSize,
        pBufSize: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetBorderSize(
        pSpec: *const IppiResizeYUV420Spec,
        borderSize: *mut IppiBorderSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSrcOffset(
        pSpec: *const IppiResizeYUV420Spec,
        dstOffset: IppiPoint,
        srcOffset: *mut IppiPoint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420GetSrcRoi(
        pSpec: *const IppiResizeYUV420Spec,
        dstRoiOffset: IppiPoint,
        dstRoiSize: IppiSize,
        srcRoiOffset: *mut IppiPoint,
        srcRoiSize: *mut IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420LanczosInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        numLobes: Ipp32u,
        pSpec: *mut IppiResizeYUV420Spec,
        pInitBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420SuperInit(
        srcSize: IppiSize,
        dstSize: IppiSize,
        pSpec: *mut IppiResizeYUV420Spec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420Lanczos_8u_P2R(
        pSrcY: *const Ipp8u,
        srcYStep: Ipp32s,
        pSrcUV: *const Ipp8u,
        srcUVStep: Ipp32s,
        pDstY: *mut Ipp8u,
        dstYStep: Ipp32s,
        pDstUV: *mut Ipp8u,
        dstUVStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiResizeYUV420Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiResizeYUV420Super_8u_P2R(
        pSrcY: *const Ipp8u,
        srcYStep: Ipp32s,
        pSrcUV: *const Ipp8u,
        srcUVStep: Ipp32s,
        pDstY: *mut Ipp8u,
        dstYStep: Ipp32s,
        pDstUV: *mut Ipp8u,
        dstUVStep: Ipp32s,
        dstOffset: IppiPoint,
        dstSize: IppiSize,
        pSpec: *const IppiResizeYUV420Spec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderGetSize(
        kernelSize: IppiSize,
        dstRoiSize: IppiSize,
        dataType: IppDataType::Type,
        kernelType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_16s(
        pKernel: *const Ipp16s,
        kernelSize: IppiSize,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode::Type,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_32f(
        pKernel: *const Ipp32f,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode::Type,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderInit_64f(
        pKernel: *const Ipp64f,
        kernelSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        roundMode: IppRoundMode::Type,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorder_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        border: IppiBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IppiFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBorderSetMode(
        hint: IppHintAlgorithm::Type,
        offset: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode3x3_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_8u16u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode3x3_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_32f8u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageMode5x5_32f16u_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        mode: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageHorizCorr_8u_C1R(
        pSrc1: *const Ipp8u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp8u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        horShift: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiLBPImageHorizCorr_16u_C1R(
        pSrc1: *const Ipp16u,
        src1Step: ::std::os::raw::c_int,
        pSrc2: *const Ipp16u,
        src2Step: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        horShift: ::std::os::raw::c_int,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSADGetBufferSize(
        srcRoiSize: IppiSize,
        tplRoiSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        shape: IppiROIShape::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_8u32s_C1RSfs(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp8u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape::Type,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_16u32s_C1RSfs(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16u,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape::Type,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_16s32s_C1RSfs(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp16s,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape::Type,
        scaleFactor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiSAD_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        srcRoiSize: IppiSize,
        pTpl: *const Ipp32f,
        tplStep: ::std::os::raw::c_int,
        tplRoiSize: IppiSize,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        shape: IppiROIShape::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorGetBufferSize(
        roiSize: IppiSize,
        mask: IppiMaskSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_8u16s_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorSobel_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorScharr_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_8u16s_C3C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp16s,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp16s,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp16s,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16u32f_C3C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_16s32f_C3C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiGradientVectorPrewitt_32f_C3C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pGx: *mut Ipp32f,
        gxStep: ::std::os::raw::c_int,
        pGy: *mut Ipp32f,
        gyStep: ::std::os::raw::c_int,
        pMag: *mut Ipp32f,
        magStep: ::std::os::raw::c_int,
        pAngle: *mut Ipp32f,
        angleStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        maskSize: IppiMaskSize,
        normType: IppNormType::Type,
        borderType: IppiBorderType,
        borderValue: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetSize(
        pConfig: *const IppiHOGConfig,
        pHOGSpecSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGInit(pConfig: *const IppiHOGConfig, pHOGSpec: *mut IppiHOGSpec) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetBufferSize(
        pHOGSpec: *const IppiHOGSpec,
        roiSize: IppiSize,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOGGetDescriptorSize(
        pHOGSpec: *const IppiHOGSpec,
        pWinDescriptorSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_8u32f_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16u32f_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16s32f_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGSpec: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_8u32f_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16u32f_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp16u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_16s32f_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiHOG_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        pLocation: *const IppiPoint,
        nLocations: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pHOGCtx: *const IppiHOGSpec,
        borderID: IppiBorderType,
        borderValue: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResizeGetBufSize(
        srcVOI: IpprCuboid,
        dstVOI: IpprCuboid,
        nChannel: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprGetResizeCuboid(
        srcVOI: IpprCuboid,
        pDstCuboid: *mut IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16s_C1V(
        pSrc: *const Ipp16s,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_16s_C1PV(
        pSrc: *const *const Ipp16s,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprResize_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        xFactor: f64,
        yFactor: f64,
        zFactor: f64,
        xShift: f64,
        yShift: f64,
        zShift: f64,
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffineGetBufSize(
        srcVolume: IpprVolume,
        srcVOI: IpprCuboid,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        nChannel: ::std::os::raw::c_int,
        interpolation: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprWarpAffine_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVOI: IpprCuboid,
        coeffs: *const [f64; 4usize],
        interpolation: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_8u_C1PV(
        pSrc: *const *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_16u_C1PV(
        pSrc: *const *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_32f_C1PV(
        pSrc: *const *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const *const Ipp32f,
        pyMap: *const *const Ipp32f,
        pzMap: *const *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        pDst: *const *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_8u_C1V(
        pSrc: *const Ipp8u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_16u_C1V(
        pSrc: *const Ipp16u,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprRemap_32f_C1V(
        pSrc: *const Ipp32f,
        srcVolume: IpprVolume,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        srcVOI: IpprCuboid,
        pxMap: *const Ipp32f,
        pyMap: *const Ipp32f,
        pzMap: *const Ipp32f,
        mapStep: ::std::os::raw::c_int,
        mapPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        interpolation: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterGetBufSize(
        dstVolume: IpprVolume,
        kernelVolume: IpprVolume,
        nChannel: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilter_16s_C1PV(
        pSrc: *const *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut *const Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        pKernel: *const Ipp32s,
        kernelVolume: IpprVolume,
        anchor: IpprPoint,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilter_16s_C1V(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        srcPlaneStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        dstPlaneStep: ::std::os::raw::c_int,
        dstVolume: IpprVolume,
        pKernel: *const Ipp32s,
        kernelVolume: IpprVolume,
        anchor: IpprPoint,
        divisor: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C4R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C1R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C3R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C4R(
        pSrc: *const Ipp16u,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16u,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C1R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C3R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C4R(
        pSrc: *const Ipp16s,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C4R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C1IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C3IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_8u_C4IR(
        pSrcDst: *mut Ipp8u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C1IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C3IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16u_C4IR(
        pSrcDst: *mut Ipp16u,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C1IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C3IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiMulC64f_32f_C4IR(
        pSrcDst: *mut Ipp32f,
        srcDstStep: ::std::os::raw::c_int,
        value: *const Ipp64f,
        roiSize: IppiSize,
        hint: IppHintAlgorithm::Type,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderGetSize(
        kernelVolume: IpprVolume,
        dstRoiVolume: IpprVolume,
        dataType: IppDataType::Type,
        kernelType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_16s(
        pKernel: *const Ipp16s,
        kernelVolume: IpprVolume,
        divisor: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_32f(
        pKernel: *const Ipp32f,
        kernelVolume: IpprVolume,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorderInit_64f(
        pKernel: *const Ipp64f,
        kernelVolume: IpprVolume,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterBorderSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp8u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp16s,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp16u,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp32f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterBorder_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        borderValue: *const Ipp64f,
        pSpec: *const IpprFilterBorderSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedianGetSize(
        maskVolume: IpprVolume,
        dstRoiVolume: IpprVolume,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedianInit(
        maskVolume: IpprVolume,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpec: *mut IpprFilterMedianSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_8u_C1V(
        pSrc: *const Ipp8u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_16u_C1V(
        pSrc: *const Ipp16u,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp16u,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_16s_C1V(
        pSrc: *const Ipp16s,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp16s,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_32f_C1V(
        pSrc: *const Ipp32f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ipprFilterMedian_64f_C1V(
        pSrc: *const Ipp64f,
        srcPlaneStep: ::std::os::raw::c_int,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstPlaneStep: ::std::os::raw::c_int,
        dstStep: ::std::os::raw::c_int,
        dstRoiVolume: IpprVolume,
        borderType: IpprBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IpprFilterMedianSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralGetBufferSize(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSize,
        kernelWidthHeight: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethodType: IppiDistanceMethodType::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateralInit(
        filter: IppiFilterBilateralType::Type,
        dstRoiSize: IppiSize,
        kernelWidthHeight: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        distMethod: IppiDistanceMethodType::Type,
        valSquareSigma: Ipp64f,
        posSquareSigma: Ipp64f,
        pSpec: *mut IppiFilterBilateralSpec,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C1R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_C3R(
        pSrc: *const Ipp32f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C1R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_C3R(
        pSrc: *const Ipp64f,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_8u_P3R(
        pSrc: *mut *const Ipp8u,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp8u,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp8u,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_32f_P3R(
        pSrc: *mut *const Ipp32f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp32f,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp32f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterBilateral_64f_P3R(
        pSrc: *mut *const Ipp64f,
        srcStep: *mut ::std::os::raw::c_int,
        pDst: *mut *mut Ipp64f,
        dstStep: *mut ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        borderType: IppiBorderType,
        pBorderValue: *const Ipp64f,
        pSpec: *const IppiFilterBilateralSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C1R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C3R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C4R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_AC4R(
        pSrc: *mut Ipp32s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C1IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C3IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_C4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_32s_AC4IR(
        pSrcDst: *mut Ipp32s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C1R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C3R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C4R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_AC4R(
        pSrc: *mut Ipp16s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C1IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C3IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_C4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_16s_AC4IR(
        pSrcDst: *mut Ipp16s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C1R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C3R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C4R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_AC4R(
        pSrc: *mut Ipp8s,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8s,
        dstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C1IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C3IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_C4IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiComplement_8s_AC4IR(
        pSrcDst: *mut Ipp8s,
        srcDstStep: ::std::os::raw::c_int,
        roiSize: IppiSize,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterILSGetBufferSize(
        filter: IppiFilterILSType::Type,
        dstRoiSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufInitSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterILSInit(
        filter: IppiFilterILSType::Type,
        dstRoiSize: IppiSize,
        dataType: IppDataType::Type,
        numChannels: ::std::os::raw::c_int,
        lambda: Ipp64f,
        eps: Ipp64f,
        pow: Ipp64f,
        gamma: Ipp64f,
        pSpec: *mut IppiFilterILSSpec,
        pBufInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterILS_8u_C1R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        nIter: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterILSSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippiFilterILS_8u_C3R(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstStep: ::std::os::raw::c_int,
        dstRoiSize: IppiSize,
        nIter: ::std::os::raw::c_int,
        pSpec: *mut IppiFilterILSSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMalloc_8u_L(len: IppSizeL) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippsMalloc_16u_L(len: IppSizeL) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippsMalloc_32u_L(len: IppSizeL) -> *mut Ipp32u;
}
extern "C" {
    pub fn ippsMalloc_8s_L(len: IppSizeL) -> *mut Ipp8s;
}
extern "C" {
    pub fn ippsMalloc_16s_L(len: IppSizeL) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippsMalloc_32s_L(len: IppSizeL) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippsMalloc_64s_L(len: IppSizeL) -> *mut Ipp64s;
}
extern "C" {
    pub fn ippsMalloc_32f_L(len: IppSizeL) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippsMalloc_64f_L(len: IppSizeL) -> *mut Ipp64f;
}
extern "C" {
    pub fn ippsMalloc_8sc_L(len: IppSizeL) -> *mut Ipp8sc;
}
extern "C" {
    pub fn ippsMalloc_16sc_L(len: IppSizeL) -> *mut Ipp16sc;
}
extern "C" {
    pub fn ippsMalloc_32sc_L(len: IppSizeL) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippsMalloc_64sc_L(len: IppSizeL) -> *mut Ipp64sc;
}
extern "C" {
    pub fn ippsMalloc_32fc_L(len: IppSizeL) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippsMalloc_64fc_L(len: IppSizeL) -> *mut Ipp64fc;
}
extern "C" {
    pub fn ippsSortRadixGetBufferSize_L(
        len: IppSizeL,
        dataType: IppDataType::Type,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexGetBufferSize_L(
        len: IppSizeL,
        dataType: IppDataType::Type,
        pBufferSize: *mut IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_32s_I_L(
        pSrcDst: *mut Ipp32s,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_32f_I_L(
        pSrcDst: *mut Ipp32f,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64u_I_L(
        pSrcDst: *mut Ipp64u,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64s_I_L(
        pSrcDst: *mut Ipp64s,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64f_I_L(
        pSrcDst: *mut Ipp64f,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_32s_I_L(
        pSrcDst: *mut Ipp32s,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_32f_I_L(
        pSrcDst: *mut Ipp32f,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64u_I_L(
        pSrcDst: *mut Ipp64u,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64s_I_L(
        pSrcDst: *mut Ipp64s,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64f_I_L(
        pSrcDst: *mut Ipp64f,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_64s_L(
        pSrc: *const Ipp64s,
        srcStrideBytes: IppSizeL,
        pDstIndx: *mut IppSizeL,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_64u_L(
        pSrc: *const Ipp64u,
        srcStrideBytes: IppSizeL,
        pDstIndx: *mut IppSizeL,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_64s_L(
        pSrc: *const Ipp64s,
        srcStrideBytes: IppSizeL,
        pDstIndx: *mut IppSizeL,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_64u_L(
        pSrc: *const Ipp64u,
        srcStrideBytes: IppSizeL,
        pDstIndx: *mut IppSizeL,
        len: IppSizeL,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32s_ISfs_L(
        val: Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: IppSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32s_Sfs_L(
        pSrc: *const Ipp32s,
        val: Ipp32s,
        pDst: *mut Ipp32s,
        len: IppSizeL,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32f_L(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32fc_L(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32fc_I_L(val: Ipp32fc, pSrcDst: *mut Ipp32fc, len: IppSizeL) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64f_I_L(val: Ipp64f, pSrcDst: *mut Ipp64f, len: IppSizeL) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64f_L(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64fc_L(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: IppSizeL,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64fc_I_L(val: Ipp64fc, pSrcDst: *mut Ipp64fc, len: IppSizeL) -> IppStatus;
}
extern "C" {
    pub fn ippsGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippsMalloc_8u(len: ::std::os::raw::c_int) -> *mut Ipp8u;
}
extern "C" {
    pub fn ippsMalloc_16u(len: ::std::os::raw::c_int) -> *mut Ipp16u;
}
extern "C" {
    pub fn ippsMalloc_32u(len: ::std::os::raw::c_int) -> *mut Ipp32u;
}
extern "C" {
    pub fn ippsMalloc_8s(len: ::std::os::raw::c_int) -> *mut Ipp8s;
}
extern "C" {
    pub fn ippsMalloc_16s(len: ::std::os::raw::c_int) -> *mut Ipp16s;
}
extern "C" {
    pub fn ippsMalloc_32s(len: ::std::os::raw::c_int) -> *mut Ipp32s;
}
extern "C" {
    pub fn ippsMalloc_64s(len: ::std::os::raw::c_int) -> *mut Ipp64s;
}
extern "C" {
    pub fn ippsMalloc_32f(len: ::std::os::raw::c_int) -> *mut Ipp32f;
}
extern "C" {
    pub fn ippsMalloc_64f(len: ::std::os::raw::c_int) -> *mut Ipp64f;
}
extern "C" {
    pub fn ippsMalloc_8sc(len: ::std::os::raw::c_int) -> *mut Ipp8sc;
}
extern "C" {
    pub fn ippsMalloc_16sc(len: ::std::os::raw::c_int) -> *mut Ipp16sc;
}
extern "C" {
    pub fn ippsMalloc_32sc(len: ::std::os::raw::c_int) -> *mut Ipp32sc;
}
extern "C" {
    pub fn ippsMalloc_64sc(len: ::std::os::raw::c_int) -> *mut Ipp64sc;
}
extern "C" {
    pub fn ippsMalloc_32fc(len: ::std::os::raw::c_int) -> *mut Ipp32fc;
}
extern "C" {
    pub fn ippsMalloc_64fc(len: ::std::os::raw::c_int) -> *mut Ipp64fc;
}
extern "C" {
    pub fn ippsFree(ptr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn ippsCopy_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_32sc(
        pSrc: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_64s(
        pSrc: *const Ipp64s,
        pDst: *mut Ipp64s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopy_64sc(
        pSrc: *const Ipp64sc,
        pDst: *mut Ipp64sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopyLE_1u(
        pSrc: *const Ipp8u,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstBitOffset: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCopyBE_1u(
        pSrc: *const Ipp8u,
        srcBitOffset: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        dstBitOffset: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_32sc(
        pSrc: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_64s(
        pSrc: *const Ipp64s,
        pDst: *mut Ipp64s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMove_64sc(
        pSrc: *const Ipp64sc,
        pDst: *mut Ipp64sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_8u(val: Ipp8u, pDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_16s(val: Ipp16s, pDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_16sc(val: Ipp16sc, pDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_32s(val: Ipp32s, pDst: *mut Ipp32s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_32sc(val: Ipp32sc, pDst: *mut Ipp32sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_32f(val: Ipp32f, pDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_32fc(val: Ipp32fc, pDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_64s(val: Ipp64s, pDst: *mut Ipp64s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_64sc(val: Ipp64sc, pDst: *mut Ipp64sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_64f(val: Ipp64f, pDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSet_64fc(val: Ipp64fc, pDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_8u(pDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_16s(pDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_16sc(pDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_32f(pDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_32fc(pDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_64f(pDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_64fc(pDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_32s(pDst: *mut Ipp32s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_32sc(pDst: *mut Ipp32sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_64s(pDst: *mut Ipp64s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsZero_64sc(pDst: *mut Ipp64sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        magn: Ipp16s,
        rFreq: Ipp32f,
        pPhase: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_16sc(
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        magn: Ipp16s,
        rFreq: Ipp32f,
        pPhase: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        magn: Ipp32f,
        rFreq: Ipp32f,
        pPhase: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_32fc(
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        magn: Ipp32f,
        rFreq: Ipp32f,
        pPhase: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        magn: Ipp64f,
        rFreq: Ipp64f,
        pPhase: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTone_64fc(
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        magn: Ipp64f,
        rFreq: Ipp64f,
        pPhase: *mut Ipp64f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        magn: Ipp64f,
        rFreq: Ipp64f,
        asym: Ipp64f,
        pPhase: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_64fc(
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        magn: Ipp64f,
        rFreq: Ipp64f,
        asym: Ipp64f,
        pPhase: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        magn: Ipp32f,
        rFreq: Ipp32f,
        asym: Ipp32f,
        pPhase: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_32fc(
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        magn: Ipp32f,
        rFreq: Ipp32f,
        asym: Ipp32f,
        pPhase: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        magn: Ipp16s,
        rFreq: Ipp32f,
        asym: Ipp32f,
        pPhase: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTriangle_16sc(
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        magn: Ipp16s,
        rFreq: Ipp32f,
        asym: Ipp32f,
        pPhase: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniform_8u(
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pRandUniState: *mut IppsRandUniState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniform_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pRandUniState: *mut IppsRandUniState_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniform_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pRandUniState: *mut IppsRandUniState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniform_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pRandUniState: *mut IppsRandUniState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGauss_8u(
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pRandGaussState: *mut IppsRandGaussState_8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGauss_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pRandGaussState: *mut IppsRandGaussState_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGauss_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pRandGaussState: *mut IppsRandGaussState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGauss_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pRandGaussState: *mut IppsRandGaussState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussGetSize_8u(pRandGaussStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussGetSize_16s(pRandGaussStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussGetSize_32f(pRandGaussStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussGetSize_64f(pRandGaussStateSize: *mut ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussInit_8u(
        pRandGaussState: *mut IppsRandGaussState_8u,
        mean: Ipp8u,
        stdDev: Ipp8u,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussInit_16s(
        pRandGaussState: *mut IppsRandGaussState_16s,
        mean: Ipp16s,
        stdDev: Ipp16s,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussInit_32f(
        pRandGaussState: *mut IppsRandGaussState_32f,
        mean: Ipp32f,
        stdDev: Ipp32f,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandGaussInit_64f(
        pRandGaussState: *mut IppsRandGaussState_64f,
        mean: Ipp64f,
        stdDev: Ipp64f,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformGetSize_8u(
        pRandUniformStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformGetSize_16s(
        pRandUniformStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformGetSize_32f(
        pRandUniformStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformGetSize_64f(
        pRandUniformStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformInit_8u(
        pRandUniState: *mut IppsRandUniState_8u,
        low: Ipp8u,
        high: Ipp8u,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformInit_16s(
        pRandUniState: *mut IppsRandUniState_16s,
        low: Ipp16s,
        high: Ipp16s,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformInit_32f(
        pRandUniState: *mut IppsRandUniState_32f,
        low: Ipp32f,
        high: Ipp32f,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRandUniformInit_64f(
        pRandUniState: *mut IppsRandUniState_64f,
        low: Ipp64f,
        high: Ipp64f,
        seed: ::std::os::raw::c_uint,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_8u(
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        magn: Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_16u(
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        magn: Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        magn: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_32s(
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        magn: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        magn: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorJaehne_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        magn: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_8u(
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        offset: Ipp32f,
        slope: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_16u(
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        offset: Ipp32f,
        slope: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_16s(
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        offset: Ipp32f,
        slope: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_32u(
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
        offset: Ipp64f,
        slope: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_32s(
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        offset: Ipp64f,
        slope: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_32f(
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        offset: Ipp32f,
        slope: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsVectorSlope_64f(
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        offset: Ipp64f,
        slope: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_8u_I(val: Ipp8u, pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_8u(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_16u_I(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_16u(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_32u_I(
        val: Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAndC_32u(
        pSrc: *const Ipp32u,
        val: Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_8u_I(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_16u_I(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_32u_I(
        pSrc: *const Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAnd_32u(
        pSrc1: *const Ipp32u,
        pSrc2: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_8u_I(val: Ipp8u, pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_8u(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_16u_I(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_16u(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_32u_I(
        val: Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOrC_32u(
        pSrc: *const Ipp32u,
        val: Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_8u_I(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_16u_I(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_32u_I(
        pSrc: *const Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsOr_32u(
        pSrc1: *const Ipp32u,
        pSrc2: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_8u_I(val: Ipp8u, pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_8u(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_16u_I(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_16u(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_32u_I(
        val: Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXorC_32u(
        pSrc: *const Ipp32u,
        val: Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_8u_I(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_16u_I(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_32u_I(
        pSrc: *const Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsXor_32u(
        pSrc1: *const Ipp32u,
        pSrc2: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_16u_I(pSrcDst: *mut Ipp16u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_16u(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_32u_I(pSrcDst: *mut Ipp32u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsNot_32u(
        pSrc: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_8u_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_8u(
        pSrc: *const Ipp8u,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_16u_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_16u(
        pSrc: *const Ipp16u,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_16s_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_16s(
        pSrc: *const Ipp16s,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_32s_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLShiftC_32s(
        pSrc: *const Ipp32s,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_8u_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_8u(
        pSrc: *const Ipp8u,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_16u_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_16u(
        pSrc: *const Ipp16u,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_16s_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_16s(
        pSrc: *const Ipp16s,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_32s_I(
        val: ::std::os::raw::c_int,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRShiftC_32s(
        pSrc: *const Ipp32s,
        val: ::std::os::raw::c_int,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_8u_ISfs(
        val: Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_8u_Sfs(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16s_I(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16s_ISfs(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16s_Sfs(
        pSrc: *const Ipp16s,
        val: Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16sc_ISfs(
        val: Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16sc_Sfs(
        pSrc: *const Ipp16sc,
        val: Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16u_ISfs(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_16u_Sfs(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32s_ISfs(
        val: Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32s_Sfs(
        pSrc: *const Ipp32s,
        val: Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32sc_ISfs(
        val: Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32sc_Sfs(
        pSrc: *const Ipp32sc,
        val: Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64u_Sfs(
        pSrc: *const Ipp64u,
        val: Ipp64u,
        pDst: *mut Ipp64u,
        len: Ipp32u,
        scaleFactor: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64s_Sfs(
        pSrc: *const Ipp64s,
        val: Ipp64s,
        pDst: *mut Ipp64s,
        len: Ipp32u,
        scaleFactor: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32fc_I(
        val: Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_32fc(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64f_I(
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64fc_I(
        val: Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddC_64fc(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_8u_ISfs(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_8u_Sfs(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_8u16u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s_ISfs(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s32s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16sc_ISfs(
        pSrc: *const Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16sc_Sfs(
        pSrc1: *const Ipp16sc,
        pSrc2: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16u_ISfs(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16u_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32s_ISfs(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32sc_ISfs(
        pSrc: *const Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32sc_Sfs(
        pSrc1: *const Ipp32sc,
        pSrc2: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32u(
        pSrc1: *const Ipp32u,
        pSrc2: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32u_I(
        pSrc: *const Ipp32u,
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64s_Sfs(
        pSrc1: *const Ipp64s,
        pSrc2: *const Ipp64s,
        pDst: *mut Ipp64s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32fc_I(
        pSrc: *const Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64fc_I(
        pSrc: *const Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProductC_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProductC_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAddProduct_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_8u_ISfs(
        val: Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_8u_Sfs(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16s_I(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16s_ISfs(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16s_Sfs(
        pSrc: *const Ipp16s,
        val: Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16sc_ISfs(
        val: Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16sc_Sfs(
        pSrc: *const Ipp16sc,
        val: Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16u_ISfs(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_16u_Sfs(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32s_ISfs(
        val: Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32s_Sfs(
        pSrc: *const Ipp32s,
        val: Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32sc_ISfs(
        val: Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32sc_Sfs(
        pSrc: *const Ipp32sc,
        val: Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64s_ISfs(
        val: Ipp64s,
        pSrcDst: *mut Ipp64s,
        len: Ipp32u,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32fc_I(
        val: Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32fc(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_32f16s_Sfs(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_Low_32f16s(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64f_I(
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64fc_I(
        val: Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64fc(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulC_64f64s_ISfs(
        val: Ipp64f,
        pSrcDst: *mut Ipp64s,
        len: Ipp32u,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_8u_ISfs(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_8u_Sfs(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_8u16u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s_ISfs(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16sc_ISfs(
        pSrc: *const Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16sc_Sfs(
        pSrc1: *const Ipp16sc,
        pSrc2: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16u_ISfs(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16u_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_16u16s_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32s_ISfs(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32sc_ISfs(
        pSrc: *const Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32sc_Sfs(
        pSrc1: *const Ipp32sc,
        pSrc2: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32fc_I(
        pSrc: *const Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32f32fc_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32f32fc(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64fc_I(
        pSrc: *const Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_8u_ISfs(
        val: Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_8u_Sfs(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16s_I(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16s_ISfs(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16s_Sfs(
        pSrc: *const Ipp16s,
        val: Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16sc_ISfs(
        val: Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16sc_Sfs(
        pSrc: *const Ipp16sc,
        val: Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16u_ISfs(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_16u_Sfs(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32s_ISfs(
        val: Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32s_Sfs(
        pSrc: *const Ipp32s,
        val: Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32sc_ISfs(
        val: Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32sc_Sfs(
        pSrc: *const Ipp32sc,
        val: Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32fc_I(
        val: Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_32fc(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_64f_I(
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_64fc_I(
        val: Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubC_64fc(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_8u_ISfs(
        val: Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_8u_Sfs(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16s_ISfs(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16s_Sfs(
        pSrc: *const Ipp16s,
        val: Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16sc_ISfs(
        val: Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16sc_Sfs(
        pSrc: *const Ipp16sc,
        val: Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16u_ISfs(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_16u_Sfs(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32s_ISfs(
        val: Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32s_Sfs(
        pSrc: *const Ipp32s,
        val: Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32sc_ISfs(
        val: Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32sc_Sfs(
        pSrc: *const Ipp32sc,
        val: Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32fc_I(
        val: Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_32fc(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_64f_I(
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_64fc_I(
        val: Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSubCRev_64fc(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_8u_ISfs(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_8u_Sfs(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16s(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16s_ISfs(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16sc_ISfs(
        pSrc: *const Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16sc_Sfs(
        pSrc1: *const Ipp16sc,
        pSrc2: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16u_ISfs(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_16u_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32s_ISfs(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32sc_ISfs(
        pSrc: *const Ipp32sc,
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32sc_Sfs(
        pSrc1: *const Ipp32sc,
        pSrc2: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32fc_I(
        pSrc: *const Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64fc_I(
        pSrc: *const Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_8u_ISfs(
        val: Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_8u_Sfs(
        pSrc: *const Ipp8u,
        val: Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16s_ISfs(
        val: Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16s_Sfs(
        pSrc: *const Ipp16s,
        val: Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16sc_ISfs(
        val: Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16sc_Sfs(
        pSrc: *const Ipp16sc,
        val: Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16u_ISfs(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_16u_Sfs(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_64s_ISfs(
        val: Ipp64s,
        pSrcDst: *mut Ipp64s,
        len: Ipp32u,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_32fc_I(
        val: Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_32fc(
        pSrc: *const Ipp32fc,
        val: Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_64f_I(
        val: Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_64f(
        pSrc: *const Ipp64f,
        val: Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_64fc_I(
        val: Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivC_64fc(
        pSrc: *const Ipp64fc,
        val: Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivCRev_16u_I(
        val: Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivCRev_16u(
        pSrc: *const Ipp16u,
        val: Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivCRev_32f_I(
        val: Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDivCRev_32f(
        pSrc: *const Ipp32f,
        val: Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_8u_ISfs(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_8u_Sfs(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16s_ISfs(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16sc_ISfs(
        pSrc: *const Ipp16sc,
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16sc_Sfs(
        pSrc1: *const Ipp16sc,
        pSrc2: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32s_ISfs(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32s16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp32s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16u_ISfs(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_16u_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32fc_I(
        pSrc: *const Ipp32fc,
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64fc_I(
        pSrc: *const Ipp64fc,
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_8u_ISfs(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_8u_Sfs(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_16s_ISfs(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_16s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_16u_ISfs(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_Round_16u_Sfs(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32s_I(pSrcDst: *mut Ipp32s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_8u_ISfs(
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_8u_Sfs(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16sc_ISfs(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16u_ISfs(
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_16u_Sfs(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_8u_ISfs(
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_8u_Sfs(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16sc_ISfs(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16u_ISfs(
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_16u_Sfs(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32s16s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCubrt_32s16s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp16s,
        Len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCubrt_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32s_ISfs(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32s_ISfs(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumLn_16s32f(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumLn_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumLn_32f64f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumLn_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsArctan_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsArctan_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsArctan_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsArctan_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        vSub: Ipp16s,
        vDiv: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        vSub: Ipp16s,
        vDiv: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_16sc_ISfs(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        vSub: Ipp16sc,
        vDiv: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        vSub: Ipp16sc,
        vDiv: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        vSub: Ipp32f,
        vDiv: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        vSub: Ipp32f,
        vDiv: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        vSub: Ipp32fc,
        vDiv: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        vSub: Ipp32fc,
        vDiv: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        vSub: Ipp64f,
        vDiv: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        vSub: Ipp64f,
        vDiv: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        vSub: Ipp64fc,
        vDiv: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormalize_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        vSub: Ipp64fc,
        vDiv: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_16u_I(pSrcDst: *mut Ipp16u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_32s_I(pSrcDst: *mut Ipp32s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortAscend_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_16u_I(pSrcDst: *mut Ipp16u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_32s_I(pSrcDst: *mut Ipp32s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortDescend_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_8u_I(
        pSrcDst: *mut Ipp8u,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_16s_I(
        pSrcDst: *mut Ipp16s,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_16u_I(
        pSrcDst: *mut Ipp16u,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_32s_I(
        pSrcDst: *mut Ipp32s,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_32f_I(
        pSrcDst: *mut Ipp32f,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexAscend_64f_I(
        pSrcDst: *mut Ipp64f,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_8u_I(
        pSrcDst: *mut Ipp8u,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_16s_I(
        pSrcDst: *mut Ipp16s,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_16u_I(
        pSrcDst: *mut Ipp16u,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_32s_I(
        pSrcDst: *mut Ipp32s,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_32f_I(
        pSrcDst: *mut Ipp32f,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortIndexDescend_64f_I(
        pSrcDst: *mut Ipp64f,
        pDstIdx: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixGetBufferSize(
        len: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexGetBufferSize(
        len: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_8u_I(
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_16u_I(
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_32u_I(
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64u_I(
        pSrcDst: *mut Ipp64u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64s_I(
        pSrcDst: *mut Ipp64s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixAscend_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_8u_I(
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_16u_I(
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_32u_I(
        pSrcDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64u_I(
        pSrcDst: *mut Ipp64u,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64s_I(
        pSrcDst: *mut Ipp64s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixDescend_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_8u(
        pSrc: *const Ipp8u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_16s(
        pSrc: *const Ipp16s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_16u(
        pSrc: *const Ipp16u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_32s(
        pSrc: *const Ipp32s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_32u(
        pSrc: *const Ipp32u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_32f(
        pSrc: *const Ipp32f,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_64s(
        pSrc: *const Ipp64s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_64u(
        pSrc: *const Ipp64u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexAscend_64f(
        pSrc: *const Ipp64f,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_8u(
        pSrc: *const Ipp8u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_16s(
        pSrc: *const Ipp16s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_16u(
        pSrc: *const Ipp16u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_32s(
        pSrc: *const Ipp32s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_32u(
        pSrc: *const Ipp32u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_32f(
        pSrc: *const Ipp32f,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_64s(
        pSrc: *const Ipp64s,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_64u(
        pSrc: *const Ipp64u,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSortRadixIndexDescend_64f(
        pSrc: *const Ipp64f,
        srcStrideBytes: Ipp32s,
        pDstIndx: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_16u_I(pSrcDst: *mut Ipp16u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_16u(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_24u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_24u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_32u_I(pSrcDst: *mut Ipp32u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_32u(
        pSrc: *const Ipp32u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_64u_I(pSrcDst: *mut Ipp64u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsSwapBytes_64u(
        pSrc: *const Ipp64u,
        pDst: *mut Ipp64u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_8s16s(
        pSrc: *const Ipp8s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_8s32f(
        pSrc: *const Ipp8s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_8u32f(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s8s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp8s,
        len: Ipp32u,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s32s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s16f(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16f,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s32f(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s32f_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16s64f_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16u32f(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_24s32s(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_24s32f(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_24u32u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_24u32f(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s16s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s16s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s24s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s32f(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s32f_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s64f(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32s64f_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32u24u_Sfs(
        pSrc: *const Ipp32u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64s32s_Sfs(
        pSrc: *const Ipp64s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64s64f(pSrc: *const Ipp64s, pDst: *mut Ipp64f, len: Ipp32u) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16f16s_Sfs(
        pSrc: *const Ipp16f,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_16f32f(
        pSrc: *const Ipp16f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f8s_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp8s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f8u_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f16s_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f16u_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f24s_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f24u_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f32s_Sfs(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f16f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp16f,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_32f64f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f16s_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f32s_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f64s_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64s,
        len: Ipp32u,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f32f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_8s8u(
        pSrc: *const Ipp8s,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_8u8s_Sfs(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f8s_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp8s,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f8u_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvert_64f16u_Sfs(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
        rndMode: IppRoundMode::Type,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_16sc_I(pSrcDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjFlip_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjFlip_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjFlip_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjCcs_32fc_I(pSrcDst: *mut Ipp32fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjCcs_32fc(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjCcs_64fc_I(pSrcDst: *mut Ipp64fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjCcs_64fc(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPack_32fc_I(pSrcDst: *mut Ipp32fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPack_32fc(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPack_64fc_I(pSrcDst: *mut Ipp64fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPack_64fc(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPerm_32fc_I(pSrcDst: *mut Ipp32fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPerm_32fc(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPerm_64fc_I(pSrcDst: *mut Ipp64fc, lenDst: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsConjPerm_64fc(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64fc,
        lenDst: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_16s_Sfs(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_16s32f(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_16sc32f(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_32sc_Sfs(
        pSrc: *const Ipp32sc,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMagnitude_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_16sc32f(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_16s_Sfs(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_16s32f(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPhase_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_16s_Sfs(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_16s32f(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_16sc32f(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowerSpectr_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReal_64fc(
        pSrc: *const Ipp64fc,
        pDstRe: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReal_32fc(
        pSrc: *const Ipp32fc,
        pDstRe: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReal_16sc(
        pSrc: *const Ipp16sc,
        pDstRe: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsImag_64fc(
        pSrc: *const Ipp64fc,
        pDstIm: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsImag_32fc(
        pSrc: *const Ipp32fc,
        pDstIm: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsImag_16sc(
        pSrc: *const Ipp16sc,
        pDstIm: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRealToCplx_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRealToCplx_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsRealToCplx_16s(
        pSrcRe: *const Ipp16s,
        pSrcIm: *const Ipp16s,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCplxToReal_64fc(
        pSrc: *const Ipp64fc,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCplxToReal_32fc(
        pSrc: *const Ipp32fc,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCplxToReal_16sc(
        pSrc: *const Ipp16sc,
        pDstRe: *mut Ipp16s,
        pDstIm: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        relOp: IppCmpOp::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LT_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GT_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbs_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTAbs_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        level: Ipp32s,
        value: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTAbsVal_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTVal_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        level: Ipp16s,
        value: Ipp16sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
        value: Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_GTVal_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
        value: Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        levelLT: Ipp16s,
        valueLT: Ipp16s,
        levelGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        levelLT: Ipp16s,
        valueLT: Ipp16s,
        levelGT: Ipp16s,
        valueGT: Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        levelLT: Ipp32s,
        valueLT: Ipp32s,
        levelGT: Ipp32s,
        valueGT: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        levelLT: Ipp32s,
        valueLT: Ipp32s,
        levelGT: Ipp32s,
        valueGT: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        levelLT: Ipp32f,
        valueLT: Ipp32f,
        levelGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        levelLT: Ipp32f,
        valueLT: Ipp32f,
        levelGT: Ipp32f,
        valueGT: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        levelLT: Ipp64f,
        valueLT: Ipp64f,
        levelGT: Ipp64f,
        valueGT: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTValGTVal_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        levelLT: Ipp64f,
        valueLT: Ipp64f,
        levelGT: Ipp64f,
        valueGT: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        level: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsThreshold_LTInv_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        level: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCartToPolar_32fc(
        pSrc: *const Ipp32fc,
        pDstMagn: *mut Ipp32f,
        pDstPhase: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCartToPolar_64fc(
        pSrc: *const Ipp64fc,
        pDstMagn: *mut Ipp64f,
        pDstPhase: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCartToPolar_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDstMagn: *mut Ipp32f,
        pDstPhase: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCartToPolar_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDstMagn: *mut Ipp64f,
        pDstPhase: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCartToPolar_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDstMagn: *mut Ipp16s,
        pDstPhase: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        magnScaleFactor: ::std::os::raw::c_int,
        phaseScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPolarToCart_32fc(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPolarToCart_64fc(
        pSrcMagn: *const Ipp64f,
        pSrcPhase: *const Ipp64f,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPolarToCart_32f(
        pSrcMagn: *const Ipp32f,
        pSrcPhase: *const Ipp32f,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPolarToCart_64f(
        pSrcMagn: *const Ipp64f,
        pSrcPhase: *const Ipp64f,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPolarToCart_16sc_Sfs(
        pSrcMagn: *const Ipp16s,
        pSrcPhase: *const Ipp16s,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        magnScaleFactor: ::std::os::raw::c_int,
        phaseScaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_8u_I(pSrcDst: *mut Ipp8u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_16u(
        pSrc: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_16u_I(pSrcDst: *mut Ipp16u, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFlip_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsFindNearestOne_16u(
        inpVal: Ipp16u,
        pOutVal: *mut Ipp16u,
        pOutIndex: *mut ::std::os::raw::c_int,
        pTable: *const Ipp16u,
        tblLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFindNearest_16u(
        pVals: *const Ipp16u,
        pOutVals: *mut Ipp16u,
        pOutIndexes: *mut ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        pTable: *const Ipp16u,
        tblLen: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_16sc_I(pSrcDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBartlett_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_16sc_I(pSrcDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHann_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_16sc_I(pSrcDst: *mut Ipp16sc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_32fc_I(pSrcDst: *mut Ipp32fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_64fc_I(pSrcDst: *mut Ipp64fc, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinHamming_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackman_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanStd_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_16s_I(pSrcDst: *mut Ipp16s, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_32f_I(pSrcDst: *mut Ipp32f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_64f_I(pSrcDst: *mut Ipp64f, len: ::std::os::raw::c_int) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinBlackmanOpt_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_16sc_I(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWinKaiser_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        alpha: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_16sc_Sfs(
        pSrc: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_16sc32sc_Sfs(
        pSrc: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_32s_Sfs(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_32fc(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp32fc,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSum_64fc(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pSum: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMin_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMin_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMin_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMin_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMax_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMax_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMax_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMax_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp8u,
        pMax: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_16u(
        pSrc: *const Ipp16u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16u,
        pMax: *mut Ipp16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16s,
        pMax: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_32u(
        pSrc: *const Ipp32u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32u,
        pMax: *mut Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32s,
        pMax: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32f,
        pMax: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMax_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp64f,
        pMax: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbs_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbs_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbs_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbs_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbs_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbs_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbs_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbs_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinIndx_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinIndx_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinIndx_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinIndx_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp64f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxIndx_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp16s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxIndx_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp32s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxIndx_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp32f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxIndx_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMax: *mut Ipp64f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_8u(
        pSrc: *const Ipp8u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp8u,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp8u,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_16u(
        pSrc: *const Ipp16u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16u,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp16u,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp16s,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp16s,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_32u(
        pSrc: *const Ipp32u,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32u,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp32u,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32s,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp32s,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp32f,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp32f,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinMaxIndx_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMin: *mut Ipp64f,
        pMinIndx: *mut ::std::os::raw::c_int,
        pMax: *mut Ipp64f,
        pMaxIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbsIndx_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp16s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbsIndx_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp32s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbsIndx_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp32f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinAbsIndx_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMinAbs: *mut Ipp64f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbsIndx_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp16s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbsIndx_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp32s,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbsIndx_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp32f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxAbsIndx_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMaxAbs: *mut Ipp64f,
        pIndx: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_16sc_Sfs(
        pSrc: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_32s_Sfs(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_32fc(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp32fc,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMean_64fc(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsStdDev_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pStdDev: *mut Ipp16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsStdDev_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pStdDev: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsStdDev_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pStdDev: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsStdDev_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMeanStdDev_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp16s,
        pStdDev: *mut Ipp16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMeanStdDev_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp32s,
        pStdDev: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMeanStdDev_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp32f,
        pStdDev: *mut Ipp32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMeanStdDev_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pMean: *mut Ipp64f,
        pStdDev: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_16s32f(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_32fc32f(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_Inf_64fc64f(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_16s64s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_16s32f(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_32fc64f(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L1_64fc64f(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_16s32s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_16s32f(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_32fc64f(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2_64fc64f(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNorm_L2Sqr_16s64s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_32fc32f(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_Inf_64fc64f(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_16s64s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_32fc64f(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L1_64fc64f(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_32fc64f(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2_64fc64f(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsNormDiff_L2Sqr_16s64s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pNorm: *mut Ipp64s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16s64s(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16sc64sc(
        pSrc1: *const Ipp16sc,
        pSrc2: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16s16sc64sc(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64sc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16s32s32s_Sfs(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_16s32f(
        pSrc1: *const Ipp16s,
        pSrc2: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32s_Sfs(
        pSrc1: *const Ipp32s,
        pSrc2: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32f32fc(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32f32fc64fc(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32f64f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_32fc64fc(
        pSrc1: *const Ipp32fc,
        pSrc2: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_64fc(
        pSrc1: *const Ipp64fc,
        pSrc2: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDotProd_64f64fc(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pDp: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_8u_I(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_16u_I(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_16s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_32s_I(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_64f_I(pSrc: *const Ipp64f, pSrcDst: *mut Ipp64f, len: Ipp32u) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMinEvery_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_8u_I(
        pSrc: *const Ipp8u,
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_16u_I(
        pSrc: *const Ipp16u,
        pSrcDst: *mut Ipp16u,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_16s_I(
        pSrc: *const Ipp16s,
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_32s_I(
        pSrc: *const Ipp32s,
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_64f_I(pSrc: *const Ipp64f, pSrcDst: *mut Ipp64f, len: Ipp32u) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_8u(
        pSrc1: *const Ipp8u,
        pSrc2: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_16u(
        pSrc1: *const Ipp16u,
        pSrc2: *const Ipp16u,
        pDst: *mut Ipp16u,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxEvery_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: Ipp32u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxOrder_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pOrder: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxOrder_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pOrder: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxOrder_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pOrder: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMaxOrder_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pOrder: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCountInRange_32s(
        pSrc: *const Ipp32s,
        len: ::std::os::raw::c_int,
        pCounts: *mut ::std::os::raw::c_int,
        lowerBound: Ipp32s,
        upperBound: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsZeroCrossing_16s32f(
        pSrc: *const Ipp16s,
        len: Ipp32u,
        pValZCR: *mut Ipp32f,
        zcType: IppsZCType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsZeroCrossing_32f(
        pSrc: *const Ipp32f,
        len: Ipp32u,
        pValZCR: *mut Ipp32f,
        zcType: IppsZCType::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_16s(
        pSrc: *const Ipp16s,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_16sc(
        pSrc: *const Ipp16sc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16sc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_32f(
        pSrc: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_32fc(
        pSrc: *const Ipp32fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_64f(
        pSrc: *const Ipp64f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleUp_64fc(
        pSrc: *const Ipp64fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64fc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_16s(
        pSrc: *const Ipp16s,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_16sc(
        pSrc: *const Ipp16sc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16sc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_32f(
        pSrc: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_32fc(
        pSrc: *const Ipp32fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_64f(
        pSrc: *const Ipp64f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSampleDown_64fc(
        pSrc: *const Ipp64fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64fc,
        pDstLen: *mut ::std::os::raw::c_int,
        factor: ::std::os::raw::c_int,
        pPhase: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAutoCorrNormGetBufferSize(
        srcLen: ::std::os::raw::c_int,
        dstLen: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAutoCorrNorm_32f(
        pSrc: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAutoCorrNorm_64f(
        pSrc: *const Ipp64f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstLen: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAutoCorrNorm_32fc(
        pSrc: *const Ipp32fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstLen: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAutoCorrNorm_64fc(
        pSrc: *const Ipp64fc,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp64fc,
        dstLen: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCrossCorrNormGetBufferSize(
        src1Len: ::std::os::raw::c_int,
        src2Len: ::std::os::raw::c_int,
        dstLen: ::std::os::raw::c_int,
        lowLag: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCrossCorrNorm_32f(
        pSrc1: *const Ipp32f,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        lowLag: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCrossCorrNorm_64f(
        pSrc1: *const Ipp64f,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp64f,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        dstLen: ::std::os::raw::c_int,
        lowLag: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCrossCorrNorm_32fc(
        pSrc1: *const Ipp32fc,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp32fc,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp32fc,
        dstLen: ::std::os::raw::c_int,
        lowLag: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCrossCorrNorm_64fc(
        pSrc1: *const Ipp64fc,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp64fc,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp64fc,
        dstLen: ::std::os::raw::c_int,
        lowLag: ::std::os::raw::c_int,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvolveGetBufferSize(
        src1Len: ::std::os::raw::c_int,
        src2Len: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        algType: IppEnum,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvolve_32f(
        pSrc1: *const Ipp32f,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvolve_64f(
        pSrc1: *const Ipp64f,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp64f,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp64f,
        algType: IppEnum,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsConvBiased_32f(
        pSrc1: *const Ipp32f,
        src1Len: ::std::os::raw::c_int,
        pSrc2: *const Ipp32f,
        src2Len: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        bias: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumWindow_8u32f(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSumWindow_16s32f(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRGetSize(
        tapsLen: ::std::os::raw::c_int,
        tapsType: IppDataType::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRGetSize32f_32fc(
        tapsLen: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRInit_32f(
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        algType: IppAlgType::Type,
        pSpec: *mut IppsFIRSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRInit_64f(
        pTaps: *const Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        algType: IppAlgType::Type,
        pSpec: *mut IppsFIRSpec_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRInit_32fc(
        pTaps: *const Ipp32fc,
        tapsLen: ::std::os::raw::c_int,
        algType: IppAlgType::Type,
        pSpec: *mut IppsFIRSpec_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRInit_64fc(
        pTaps: *const Ipp64fc,
        tapsLen: ::std::os::raw::c_int,
        algType: IppAlgType::Type,
        pSpec: *mut IppsFIRSpec_64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSRInit32f_32fc(
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        algType: IppAlgType::Type,
        pSpec: *mut IppsFIRSpec32f_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32f,
        pDlySrc: *const Ipp16s,
        pDlyDst: *mut Ipp16s,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32fc,
        pDlySrc: *const Ipp16sc,
        pDlyDst: *mut Ipp16sc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32f,
        pDlySrc: *const Ipp32f,
        pDlyDst: *mut Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64f,
        pDlySrc: *const Ipp64f,
        pDlyDst: *mut Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32fc,
        pDlySrc: *const Ipp32fc,
        pDlyDst: *mut Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64fc,
        pDlySrc: *const Ipp64fc,
        pDlyDst: *mut Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSR32f_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec32f_32fc,
        pDlySrc: *const Ipp32fc,
        pDlyDst: *mut Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRGetSize(
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        tapsType: IppDataType::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRGetSize32f_32fc(
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRInit_32f(
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        upPhase: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        downPhase: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRInit_64f(
        pTaps: *const Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        upPhase: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        downPhase: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRInit_32fc(
        pTaps: *const Ipp32fc,
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        upPhase: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        downPhase: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRInit_64fc(
        pTaps: *const Ipp64fc,
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        upPhase: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        downPhase: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMRInit32f_32fc(
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        upFactor: ::std::os::raw::c_int,
        upPhase: ::std::os::raw::c_int,
        downFactor: ::std::os::raw::c_int,
        downPhase: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec32f_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32f,
        pDlySrc: *const Ipp16s,
        pDlyDst: *mut Ipp16s,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_16sc(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32fc,
        pDlySrc: *const Ipp16sc,
        pDlyDst: *mut Ipp16sc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32f,
        pDlySrc: *const Ipp32f,
        pDlyDst: *mut Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64f,
        pDlySrc: *const Ipp64f,
        pDlyDst: *mut Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_32fc,
        pDlySrc: *const Ipp32fc,
        pDlyDst: *mut Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec_64fc,
        pDlySrc: *const Ipp64fc,
        pDlyDst: *mut Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRMR32f_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        numIters: ::std::os::raw::c_int,
        pSpec: *mut IppsFIRSpec32f_32fc,
        pDlySrc: *const Ipp32fc,
        pDlyDst: *mut Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseGetStateSize_32f(
        nzTapsLen: ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseInit_32f(
        ppState: *mut *mut IppsFIRSparseState_32f,
        pNZTaps: *const Ipp32f,
        pNZTapPos: *const Ipp32s,
        nzTapsLen: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseGetStateSize_32fc(
        nzTapsLen: ::std::os::raw::c_int,
        order: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseInit_32fc(
        ppState: *mut *mut IppsFIRSparseState_32fc,
        pNZTaps: *const Ipp32fc,
        pNZTapPos: *const Ipp32s,
        nzTapsLen: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparse_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsFIRSparseState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparse_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsFIRSparseState_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseSetDlyLine_32f(
        pState: *mut IppsFIRSparseState_32f,
        pDlyLine: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseGetDlyLine_32f(
        pState: *const IppsFIRSparseState_32f,
        pDlyLine: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseSetDlyLine_32fc(
        pState: *mut IppsFIRSparseState_32fc,
        pDlyLine: *const Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRSparseGetDlyLine_32fc(
        pState: *const IppsFIRSparseState_32fc,
        pDlyLine: *mut Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRGenGetBufferSize(
        tapsLen: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRGenLowpass_64f(
        rFreq: Ipp64f,
        pTaps: *mut Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        winType: IppWinType::Type,
        doNormal: IppBool::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRGenHighpass_64f(
        rFreq: Ipp64f,
        pTaps: *mut Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        winType: IppWinType::Type,
        doNormal: IppBool::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRGenBandpass_64f(
        rLowFreq: Ipp64f,
        rHighFreq: Ipp64f,
        pTaps: *mut Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        winType: IppWinType::Type,
        doNormal: IppBool::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRGenBandstop_64f(
        rLowFreq: Ipp64f,
        rHighFreq: Ipp64f,
        pTaps: *mut Ipp64f,
        tapsLen: ::std::os::raw::c_int,
        winType: IppWinType::Type,
        doNormal: IppBool::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetStateSize32f_16s(
        tapsLen: ::std::os::raw::c_int,
        dlyIndex: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetStateSize_32f(
        tapsLen: ::std::os::raw::c_int,
        dlyIndex: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSInit32f_16s(
        ppState: *mut *mut IppsFIRLMSState32f_16s,
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        pDlyLine: *const Ipp16s,
        dlyIndex: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSInit_32f(
        ppState: *mut *mut IppsFIRLMSState_32f,
        pTaps: *const Ipp32f,
        tapsLen: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        dlyIndex: ::std::os::raw::c_int,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMS32f_16s(
        pSrc: *const Ipp16s,
        pRef: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        mu: f32,
        pState: *mut IppsFIRLMSState32f_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMS_32f(
        pSrc: *const Ipp32f,
        pRef: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        mu: f32,
        pState: *mut IppsFIRLMSState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetTaps32f_16s(
        pState: *const IppsFIRLMSState32f_16s,
        pOutTaps: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetTaps_32f(
        pState: *const IppsFIRLMSState_32f,
        pOutTaps: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetDlyLine32f_16s(
        pState: *const IppsFIRLMSState32f_16s,
        pDlyLine: *mut Ipp16s,
        pDlyLineIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSGetDlyLine_32f(
        pState: *const IppsFIRLMSState_32f,
        pDlyLine: *mut Ipp32f,
        pDlyLineIndex: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSSetDlyLine32f_16s(
        pState: *mut IppsFIRLMSState32f_16s,
        pDlyLine: *const Ipp16s,
        dlyLineIndex: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFIRLMSSetDlyLine_32f(
        pState: *mut IppsFIRLMSState_32f,
        pDlyLine: *const Ipp32f,
        dlyLineIndex: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine32f_16s(
        pState: *const IppsIIRState32f_16s,
        pDlyLine: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine32fc_16sc(
        pState: *const IppsIIRState32fc_16sc,
        pDlyLine: *mut Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine_32f(
        pState: *const IppsIIRState_32f,
        pDlyLine: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine_32fc(
        pState: *const IppsIIRState_32fc,
        pDlyLine: *mut Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64f_16s(
        pState: *const IppsIIRState64f_16s,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64fc_16sc(
        pState: *const IppsIIRState64fc_16sc,
        pDlyLine: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64f_32s(
        pState: *const IppsIIRState64f_32s,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64fc_32sc(
        pState: *const IppsIIRState64fc_32sc,
        pDlyLine: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64f_DF1_32s(
        pState: *const IppsIIRState64f_32s,
        pDlyLine: *mut Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64f_32f(
        pState: *const IppsIIRState64f_32f,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine64fc_32fc(
        pState: *const IppsIIRState64fc_32fc,
        pDlyLine: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine_64f(
        pState: *const IppsIIRState_64f,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetDlyLine_64fc(
        pState: *const IppsIIRState_64fc,
        pDlyLine: *mut Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine32f_16s(
        pState: *mut IppsIIRState32f_16s,
        pDlyLine: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine32fc_16sc(
        pState: *mut IppsIIRState32fc_16sc,
        pDlyLine: *const Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine_32f(
        pState: *mut IppsIIRState_32f,
        pDlyLine: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine_32fc(
        pState: *mut IppsIIRState_32fc,
        pDlyLine: *const Ipp32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64f_16s(
        pState: *mut IppsIIRState64f_16s,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64fc_16sc(
        pState: *mut IppsIIRState64fc_16sc,
        pDlyLine: *const Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64f_32s(
        pState: *mut IppsIIRState64f_32s,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64fc_32sc(
        pState: *mut IppsIIRState64fc_32sc,
        pDlyLine: *const Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64f_DF1_32s(
        pState: *mut IppsIIRState64f_32s,
        pDlyLine: *const Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64f_32f(
        pState: *mut IppsIIRState64f_32f,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine64fc_32fc(
        pState: *mut IppsIIRState64fc_32fc,
        pDlyLine: *const Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine_64f(
        pState: *mut IppsIIRState_64f,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSetDlyLine_64fc(
        pState: *mut IppsIIRState_64fc,
        pDlyLine: *const Ipp64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR32f_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState32f_16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR32f_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState32f_16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR32fc_16sc_ISfs(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState32fc_16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR32fc_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState32fc_16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_16s_ISfs(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_16s_Sfs(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_16sc_ISfs(
        pSrcDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_16sc_Sfs(
        pSrc: *const Ipp16sc,
        pDst: *mut Ipp16sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_16sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32s_ISfs(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32s_Sfs(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_32sc_ISfs(
        pSrcDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_32sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_32sc_Sfs(
        pSrc: *const Ipp32sc,
        pDst: *mut Ipp32sc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_32sc,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_32fc_I(
        pSrcDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64fc_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64fc_32fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_64fc_I(
        pSrcDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64fc,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32f_IP(
        ppSrcDst: *mut *mut Ipp32f,
        len: ::std::os::raw::c_int,
        nChannels: ::std::os::raw::c_int,
        ppState: *mut *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR_32f_P(
        ppSrc: *mut *const Ipp32f,
        ppDst: *mut *mut Ipp32f,
        len: ::std::os::raw::c_int,
        nChannels: ::std::os::raw::c_int,
        ppState: *mut *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32s_IPSfs(
        ppSrcDst: *mut *mut Ipp32s,
        len: ::std::os::raw::c_int,
        nChannels: ::std::os::raw::c_int,
        ppState: *mut *mut IppsIIRState64f_32s,
        pScaleFactor: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIR64f_32s_PSfs(
        ppSrc: *mut *const Ipp32s,
        ppDst: *mut *mut Ipp32s,
        len: ::std::os::raw::c_int,
        nChannels: ::std::os::raw::c_int,
        ppState: *mut *mut IppsIIRState64f_32s,
        pScaleFactor: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize32f_16s(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize32fc_16sc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_32f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_32fc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_16s(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_16sc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_32s(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_32sc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_32f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_32fc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_64f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_64fc(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize32f_BiQuad_16s(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize32fc_BiQuad_16sc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_BiQuad_32f(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_BiQuad_DF1_32f(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_BiQuad_32fc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_BiQuad_16s(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_BiQuad_16sc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_BiQuad_32s(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_BiQuad_DF1_32s(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_BiQuad_32sc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64f_BiQuad_32f(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize64fc_BiQuad_32fc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_BiQuad_64f(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGetStateSize_BiQuad_64fc(
        numBq: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit32f_16s(
        ppState: *mut *mut IppsIIRState32f_16s,
        pTaps: *const Ipp32f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit32fc_16sc(
        ppState: *mut *mut IppsIIRState32fc_16sc,
        pTaps: *const Ipp32fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_32f(
        ppState: *mut *mut IppsIIRState_32f,
        pTaps: *const Ipp32f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_32fc(
        ppState: *mut *mut IppsIIRState_32fc,
        pTaps: *const Ipp32fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_16s(
        ppState: *mut *mut IppsIIRState64f_16s,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_16sc(
        ppState: *mut *mut IppsIIRState64fc_16sc,
        pTaps: *const Ipp64fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_32s(
        ppState: *mut *mut IppsIIRState64f_32s,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_32sc(
        ppState: *mut *mut IppsIIRState64fc_32sc,
        pTaps: *const Ipp64fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_32f(
        ppState: *mut *mut IppsIIRState64f_32f,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_32fc(
        ppState: *mut *mut IppsIIRState64fc_32fc,
        pTaps: *const Ipp64fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_64f(
        ppState: *mut *mut IppsIIRState_64f,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_64fc(
        ppState: *mut *mut IppsIIRState_64fc,
        pTaps: *const Ipp64fc,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit32f_BiQuad_16s(
        ppState: *mut *mut IppsIIRState32f_16s,
        pTaps: *const Ipp32f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit32fc_BiQuad_16sc(
        ppState: *mut *mut IppsIIRState32fc_16sc,
        pTaps: *const Ipp32fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_BiQuad_32f(
        ppState: *mut *mut IppsIIRState_32f,
        pTaps: *const Ipp32f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_BiQuad_DF1_32f(
        ppState: *mut *mut IppsIIRState_32f,
        pTaps: *const Ipp32f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_BiQuad_32fc(
        ppState: *mut *mut IppsIIRState_32fc,
        pTaps: *const Ipp32fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_BiQuad_16s(
        ppState: *mut *mut IppsIIRState64f_16s,
        pTaps: *const Ipp64f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_BiQuad_16sc(
        ppState: *mut *mut IppsIIRState64fc_16sc,
        pTaps: *const Ipp64fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_BiQuad_32s(
        ppState: *mut *mut IppsIIRState64f_32s,
        pTaps: *const Ipp64f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_BiQuad_DF1_32s(
        ppState: *mut *mut IppsIIRState64f_32s,
        pTaps: *const Ipp64f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32s,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_BiQuad_32sc(
        ppState: *mut *mut IppsIIRState64fc_32sc,
        pTaps: *const Ipp64fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64f_BiQuad_32f(
        ppState: *mut *mut IppsIIRState64f_32f,
        pTaps: *const Ipp64f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit64fc_BiQuad_32fc(
        ppState: *mut *mut IppsIIRState64fc_32fc,
        pTaps: *const Ipp64fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_BiQuad_64f(
        ppState: *mut *mut IppsIIRState_64f,
        pTaps: *const Ipp64f,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRInit_BiQuad_64fc(
        ppState: *mut *mut IppsIIRState_64fc,
        pTaps: *const Ipp64fc,
        numBq: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64fc,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSparseGetStateSize_32f(
        nzTapsLen1: ::std::os::raw::c_int,
        nzTapsLen2: ::std::os::raw::c_int,
        order1: ::std::os::raw::c_int,
        order2: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSparseInit_32f(
        ppState: *mut *mut IppsIIRSparseState_32f,
        pNZTaps: *const Ipp32f,
        pNZTapPos: *const Ipp32s,
        nzTapsLen1: ::std::os::raw::c_int,
        nzTapsLen2: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRSparse_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRSparseState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGenLowpass_64f(
        rFreq: Ipp64f,
        ripple: Ipp64f,
        order: ::std::os::raw::c_int,
        pTaps: *mut Ipp64f,
        filterType: IppsIIRFilterType::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGenHighpass_64f(
        rFreq: Ipp64f,
        ripple: Ipp64f,
        order: ::std::os::raw::c_int,
        pTaps: *mut Ipp64f,
        filterType: IppsIIRFilterType::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRGenGetBufferSize(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedianGetBufferSize(
        maskSize: ::std::os::raw::c_int,
        dataType: IppDataType::Type,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_8u_I(
        pSrcDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp8u,
        pDlyDst: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_8u(
        pSrc: *const Ipp8u,
        pDst: *mut Ipp8u,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp8u,
        pDlyDst: *mut Ipp8u,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_16s_I(
        pSrcDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp16s,
        pDlyDst: *mut Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_16s(
        pSrc: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp16s,
        pDlyDst: *mut Ipp16s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_32s_I(
        pSrcDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp32s,
        pDlyDst: *mut Ipp32s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_32s(
        pSrc: *const Ipp32s,
        pDst: *mut Ipp32s,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp32s,
        pDlyDst: *mut Ipp32s,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp32f,
        pDlyDst: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp32f,
        pDlyDst: *mut Ipp32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp64f,
        pDlyDst: *mut Ipp64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFilterMedian_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        maskSize: ::std::os::raw::c_int,
        pDlySrc: *const Ipp64f,
        pDlyDst: *mut Ipp64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphase_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        factor: Ipp64f,
        norm: Ipp32f,
        pTime: *mut Ipp64f,
        pOutlen: *mut ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphase_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphase_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        factor: Ipp64f,
        norm: Ipp32f,
        pTime: *mut Ipp64f,
        pOutlen: *mut ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphase_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixed_16s(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        norm: Ipp32f,
        pTime: *mut Ipp64f,
        pOutlen: *mut ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphaseFixed_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixed_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        norm: Ipp32f,
        pTime: *mut Ipp64f,
        pOutlen: *mut ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphaseFixed_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseGetSize_16s(
        window: Ipp32f,
        nStep: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseGetSize_32f(
        window: Ipp32f,
        nStep: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixedGetSize_16s(
        inRate: ::std::os::raw::c_int,
        outRate: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
        pLen: *mut ::std::os::raw::c_int,
        pHeight: *mut ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixedGetSize_32f(
        inRate: ::std::os::raw::c_int,
        outRate: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        pSize: *mut ::std::os::raw::c_int,
        pLen: *mut ::std::os::raw::c_int,
        pHeight: *mut ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseInit_16s(
        window: Ipp32f,
        nStep: ::std::os::raw::c_int,
        rollf: Ipp32f,
        alpha: Ipp32f,
        pSpec: *mut IppsResamplingPolyphase_16s,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseInit_32f(
        window: Ipp32f,
        nStep: ::std::os::raw::c_int,
        rollf: Ipp32f,
        alpha: Ipp32f,
        pSpec: *mut IppsResamplingPolyphase_32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixedInit_16s(
        inRate: ::std::os::raw::c_int,
        outRate: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        rollf: Ipp32f,
        alpha: Ipp32f,
        pSpec: *mut IppsResamplingPolyphaseFixed_16s,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseFixedInit_32f(
        inRate: ::std::os::raw::c_int,
        outRate: ::std::os::raw::c_int,
        len: ::std::os::raw::c_int,
        rollf: Ipp32f,
        alpha: Ipp32f,
        pSpec: *mut IppsResamplingPolyphaseFixed_32f,
        hint: IppHintAlgorithm::Type,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseSetFixedFilter_16s(
        pSrc: *const Ipp16s,
        step: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        pSpec: *mut IppsResamplingPolyphaseFixed_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseSetFixedFilter_32f(
        pSrc: *const Ipp32f,
        step: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        pSpec: *mut IppsResamplingPolyphaseFixed_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseGetFixedFilter_16s(
        pDst: *mut Ipp16s,
        step: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphaseFixed_16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsResamplePolyphaseGetFixedFilter_32f(
        pDst: *mut Ipp32f,
        step: ::std::os::raw::c_int,
        height: ::std::os::raw::c_int,
        pSpec: *const IppsResamplingPolyphaseFixed_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetStateSize_32f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetStateSize64f_32f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetStateSize_64f(
        order: ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRInit64f_32f(
        ppState: *mut *mut IppsIIRState64f_32f,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRInit_32f(
        ppState: *mut *mut IppsIIRState_32f,
        pTaps: *const Ipp32f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp32f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRInit_64f(
        ppState: *mut *mut IppsIIRState_64f,
        pTaps: *const Ipp64f,
        order: ::std::os::raw::c_int,
        pDlyLine: *const Ipp64f,
        pBuf: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR64f_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR64f_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState64f_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        pState: *mut IppsIIRState_64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetDlyLine64f_32f(
        pState: *const IppsIIRState64f_32f,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRSetDlyLine64f_32f(
        pState: *mut IppsIIRState64f_32f,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetDlyLine_32f(
        pState: *const IppsIIRState_32f,
        pDlyLine: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRSetDlyLine_32f(
        pState: *mut IppsIIRState_32f,
        pDlyLine: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRGetDlyLine_64f(
        pState: *const IppsIIRState_64f,
        pDlyLine: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsIIRIIRSetDlyLine_64f(
        pState: *mut IppsIIRState_64f,
        pDlyLine: *const Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_C_16fc(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_C_32f(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_R_32f(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_C_32fc(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_C_64f(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_R_64f(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTGetSize_C_64fc(
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_C_16fc(
        ppFFTSpec: *mut *mut IppsFFTSpec_C_16fc,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_C_32f(
        ppFFTSpec: *mut *mut IppsFFTSpec_C_32f,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_R_32f(
        ppFFTSpec: *mut *mut IppsFFTSpec_R_32f,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_C_32fc(
        ppFFTSpec: *mut *mut IppsFFTSpec_C_32fc,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_C_64f(
        ppFFTSpec: *mut *mut IppsFFTSpec_C_64f,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_R_64f(
        ppFFTSpec: *mut *mut IppsFFTSpec_R_64f,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInit_C_64fc(
        ppFFTSpec: *mut *mut IppsFFTSpec_C_64fc,
        order: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        pFFTSpec: *const IppsFFTSpec_C_16fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        pFFTSpec: *const IppsFFTSpec_C_16fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        pFFTSpec: *const IppsFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        pFFTSpec: *const IppsFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        pFFTSpec: *const IppsFFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        pFFTSpec: *const IppsFFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_32fc_I(
        pSrcDst: *mut Ipp32fc,
        pFFTSpec: *const IppsFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_32fc_I(
        pSrcDst: *mut Ipp32fc,
        pFFTSpec: *const IppsFFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_64fc_I(
        pSrcDst: *mut Ipp64fc,
        pFFTSpec: *const IppsFFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_64fc_I(
        pSrcDst: *mut Ipp64fc,
        pFFTSpec: *const IppsFFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_32f_I(
        pSrcDstRe: *mut Ipp32f,
        pSrcDstIm: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_32f_I(
        pSrcDstRe: *mut Ipp32f,
        pSrcDstIm: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_64f_I(
        pSrcDstRe: *mut Ipp64f,
        pSrcDstIm: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_64f_I(
        pSrcDstRe: *mut Ipp64f,
        pSrcDstIm: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_CToC_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CToC_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPerm_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPack_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToCCS_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PermToR_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PackToR_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CCSToR_32f_I(
        pSrcDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPerm_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPack_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToCCS_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PermToR_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PackToR_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CCSToR_64f_I(
        pSrcDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPerm_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPack_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToCCS_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PermToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PackToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CCSToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pFFTSpec: *const IppsFFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPerm_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToPack_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTFwd_RToCCS_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PermToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_PackToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFFTInv_CCSToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pFFTSpec: *const IppsFFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_C_16fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_C_32f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_R_32f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_C_32fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_C_64f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_R_64f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTGetSize_C_64fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSizeSpec: *mut ::std::os::raw::c_int,
        pSizeInit: *mut ::std::os::raw::c_int,
        pSizeBuf: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_C_16fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_C_16fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_C_32f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_C_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_R_32f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_R_32f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_C_32fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_C_32fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_C_64f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_C_64f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_R_64f(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_R_64f,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInit_C_64fc(
        length: ::std::os::raw::c_int,
        flag: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pDFTSpec: *mut IppsDFTSpec_C_64fc,
        pMemInit: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        pDFTSpec: *const IppsDFTSpec_C_16fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        pDFTSpec: *const IppsDFTSpec_C_16fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_CToC_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        pDFTSpec: *const IppsDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CToC_32fc(
        pSrc: *const Ipp32fc,
        pDst: *mut Ipp32fc,
        pDFTSpec: *const IppsDFTSpec_C_32fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_CToC_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        pDFTSpec: *const IppsDFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CToC_64fc(
        pSrc: *const Ipp64fc,
        pDst: *mut Ipp64fc,
        pDFTSpec: *const IppsDFTSpec_C_64fc,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_CToC_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CToC_32f(
        pSrcRe: *const Ipp32f,
        pSrcIm: *const Ipp32f,
        pDstRe: *mut Ipp32f,
        pDstIm: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_C_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_CToC_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CToC_64f(
        pSrcRe: *const Ipp64f,
        pSrcIm: *const Ipp64f,
        pDstRe: *mut Ipp64f,
        pDstIm: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_C_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_Direct_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_Direct_CToC_16fc(
        pSrc: *const Ipp16fc,
        pDst: *mut Ipp16fc,
        length: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToPerm_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToPack_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToCCS_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_PermToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_PackToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CCSToR_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDFTSpec: *const IppsDFTSpec_R_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToPerm_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToPack_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTFwd_RToCCS_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_PermToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_PackToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDFTInv_CCSToR_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDFTSpec: *const IppsDFTSpec_R_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPack_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPerm_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPack_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPerm_32f(
        pSrc1: *const Ipp32f,
        pSrc2: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPack_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPerm_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPack_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPerm_64f(
        pSrc1: *const Ipp64f,
        pSrc2: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPackConj_32f_I(
        pSrc: *const Ipp32f,
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulPackConj_64f_I(
        pSrc: *const Ipp64f,
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp16sc,
        rFreq: Ipp32f,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_16sc_Sfs(
        pSrc: *const Ipp16sc,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp16sc,
        rFreq: Ipp32f,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp32fc,
        rFreq: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_32fc(
        pSrc: *const Ipp32fc,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp32fc,
        rFreq: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp64fc,
        rFreq: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsGoertz_64fc(
        pSrc: *const Ipp64fc,
        len: ::std::os::raw::c_int,
        pVal: *mut Ipp64fc,
        rFreq: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwdGetSize_32f(
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInvGetSize_32f(
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwdGetSize_64f(
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInvGetSize_64f(
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pSpecBufferSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwdInit_32f(
        ppDCTSpec: *mut *mut IppsDCTFwdSpec_32f,
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInvInit_32f(
        ppDCTSpec: *mut *mut IppsDCTInvSpec_32f,
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwdInit_64f(
        ppDCTSpec: *mut *mut IppsDCTFwdSpec_64f,
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInvInit_64f(
        ppDCTSpec: *mut *mut IppsDCTInvSpec_64f,
        len: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut Ipp8u,
        pSpecBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwd_32f_I(
        pSrcDst: *mut Ipp32f,
        pDCTSpec: *const IppsDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInv_32f_I(
        pSrcDst: *mut Ipp32f,
        pDCTSpec: *const IppsDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwd_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDCTSpec: *const IppsDCTFwdSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInv_32f(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32f,
        pDCTSpec: *const IppsDCTInvSpec_32f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwd_64f_I(
        pSrcDst: *mut Ipp64f,
        pDCTSpec: *const IppsDCTFwdSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInv_64f_I(
        pSrcDst: *mut Ipp64f,
        pDCTSpec: *const IppsDCTInvSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTFwd_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDCTSpec: *const IppsDCTFwdSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDCTInv_64f(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64f,
        pDCTSpec: *const IppsDCTInvSpec_64f,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbertGetSize_32f32fc(
        length: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbertGetSize_64f64fc(
        length: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpecSize: *mut ::std::os::raw::c_int,
        pBufferSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbertInit_32f32fc(
        length: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppsHilbertSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbertInit_64f64fc(
        length: ::std::os::raw::c_int,
        hint: IppHintAlgorithm::Type,
        pSpec: *mut IppsHilbertSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbert_32f32fc(
        pSrc: *const Ipp32f,
        pDst: *mut Ipp32fc,
        pSpec: *mut IppsHilbertSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHilbert_64f64fc(
        pSrc: *const Ipp64f,
        pDst: *mut Ipp64fc,
        pSpec: *mut IppsHilbertSpec,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarFwd_16s_Sfs(
        pSrc: *const Ipp16s,
        len: ::std::os::raw::c_int,
        pDstLow: *mut Ipp16s,
        pDstHigh: *mut Ipp16s,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarFwd_32f(
        pSrc: *const Ipp32f,
        len: ::std::os::raw::c_int,
        pDstLow: *mut Ipp32f,
        pDstHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarFwd_64f(
        pSrc: *const Ipp64f,
        len: ::std::os::raw::c_int,
        pDstLow: *mut Ipp64f,
        pDstHigh: *mut Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarInv_16s_Sfs(
        pSrcLow: *const Ipp16s,
        pSrcHigh: *const Ipp16s,
        pDst: *mut Ipp16s,
        len: ::std::os::raw::c_int,
        scaleFactor: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarInv_32f(
        pSrcLow: *const Ipp32f,
        pSrcHigh: *const Ipp32f,
        pDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTHaarInv_64f(
        pSrcLow: *const Ipp64f,
        pSrcHigh: *const Ipp64f,
        pDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdGetSize(
        srcType: IppDataType::Type,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdInit_8u32f(
        pState: *mut IppsWTFwdState_8u32f,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdInit_16s32f(
        pState: *mut IppsWTFwdState_16s32f,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdInit_16u32f(
        pState: *mut IppsWTFwdState_16u32f,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdInit_32f(
        pState: *mut IppsWTFwdState_32f,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdSetDlyLine_8u32f(
        pState: *mut IppsWTFwdState_8u32f,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdSetDlyLine_16s32f(
        pState: *mut IppsWTFwdState_16s32f,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdSetDlyLine_16u32f(
        pState: *mut IppsWTFwdState_16u32f,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdSetDlyLine_32f(
        pState: *mut IppsWTFwdState_32f,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdGetDlyLine_8u32f(
        pState: *mut IppsWTFwdState_8u32f,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdGetDlyLine_16s32f(
        pState: *mut IppsWTFwdState_16s32f,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdGetDlyLine_16u32f(
        pState: *mut IppsWTFwdState_16u32f,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwdGetDlyLine_32f(
        pState: *mut IppsWTFwdState_32f,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwd_8u32f(
        pSrc: *const Ipp8u,
        pDstLow: *mut Ipp32f,
        pDstHigh: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        pState: *mut IppsWTFwdState_8u32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwd_16s32f(
        pSrc: *const Ipp16s,
        pDstLow: *mut Ipp32f,
        pDstHigh: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        pState: *mut IppsWTFwdState_16s32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwd_16u32f(
        pSrc: *const Ipp16u,
        pDstLow: *mut Ipp32f,
        pDstHigh: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        pState: *mut IppsWTFwdState_16u32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTFwd_32f(
        pSrc: *const Ipp32f,
        pDstLow: *mut Ipp32f,
        pDstHigh: *mut Ipp32f,
        dstLen: ::std::os::raw::c_int,
        pState: *mut IppsWTFwdState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvGetSize(
        dstType: IppDataType::Type,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
        pStateSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvInit_32f8u(
        pState: *mut IppsWTInvState_32f8u,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvInit_32f16u(
        pState: *mut IppsWTInvState_32f16u,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvInit_32f16s(
        pState: *mut IppsWTInvState_32f16s,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvInit_32f(
        pState: *mut IppsWTInvState_32f,
        pTapsLow: *const Ipp32f,
        lenLow: ::std::os::raw::c_int,
        offsLow: ::std::os::raw::c_int,
        pTapsHigh: *const Ipp32f,
        lenHigh: ::std::os::raw::c_int,
        offsHigh: ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvSetDlyLine_32f8u(
        pState: *mut IppsWTInvState_32f8u,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvSetDlyLine_32f16s(
        pState: *mut IppsWTInvState_32f16s,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvSetDlyLine_32f16u(
        pState: *mut IppsWTInvState_32f16u,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvSetDlyLine_32f(
        pState: *mut IppsWTInvState_32f,
        pDlyLow: *const Ipp32f,
        pDlyHigh: *const Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvGetDlyLine_32f8u(
        pState: *mut IppsWTInvState_32f8u,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvGetDlyLine_32f16s(
        pState: *mut IppsWTInvState_32f16s,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvGetDlyLine_32f16u(
        pState: *mut IppsWTInvState_32f16u,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInvGetDlyLine_32f(
        pState: *mut IppsWTInvState_32f,
        pDlyLow: *mut Ipp32f,
        pDlyHigh: *mut Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInv_32f8u(
        pSrcLow: *const Ipp32f,
        pSrcHigh: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp8u,
        pState: *mut IppsWTInvState_32f8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInv_32f16s(
        pSrcLow: *const Ipp32f,
        pSrcHigh: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16s,
        pState: *mut IppsWTInvState_32f16s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInv_32f16u(
        pSrcLow: *const Ipp32f,
        pSrcHigh: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        pState: *mut IppsWTInvState_32f16u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsWTInv_32f(
        pSrcLow: *const Ipp32f,
        pSrcHigh: *const Ipp32f,
        srcLen: ::std::os::raw::c_int,
        pDst: *mut Ipp32f,
        pState: *mut IppsWTInvState_32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReplaceNAN_32f_I(
        pSrcDst: *mut Ipp32f,
        len: ::std::os::raw::c_int,
        value: Ipp32f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsReplaceNAN_64f_I(
        pSrcDst: *mut Ipp64f,
        len: ::std::os::raw::c_int,
        value: Ipp64f,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPatternMatchGetBufferSize(
        srcLen: ::std::os::raw::c_int,
        patternLen: ::std::os::raw::c_int,
        patternSize: ::std::os::raw::c_int,
        hint: IppPatternMatchMode::Type,
        bufSize: *mut ::std::os::raw::c_int,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPatternMatch_8u16u(
        pSrc: *const Ipp8u,
        srcStep: ::std::os::raw::c_int,
        srcLen: ::std::os::raw::c_int,
        pPattern: *const Ipp8u,
        patternStep: ::std::os::raw::c_int,
        patternLen: ::std::os::raw::c_int,
        patternSize: ::std::os::raw::c_int,
        pDst: *mut Ipp16u,
        hint: IppPatternMatchMode::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTopKGetBufferSize(
        srcLen: Ipp64s,
        dstLen: Ipp64s,
        dataType: IppDataType::Type,
        hint: IppTopKMode::Type,
        bufSize: *mut Ipp64s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTopKInit_32s(
        pDstValue: *mut Ipp32s,
        pDstIndex: *mut Ipp64s,
        dstLen: Ipp64s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTopKInit_32f(
        pDstValue: *mut Ipp32f,
        pDstIndex: *mut Ipp64s,
        dstLen: Ipp64s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTopK_32s(
        pSrc: *const Ipp32s,
        srcIndex: Ipp64s,
        srcStride: Ipp64s,
        srcLen: Ipp64s,
        pDstValue: *mut Ipp32s,
        pDstIndex: *mut Ipp64s,
        dstLen: Ipp64s,
        hint: IppTopKMode::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTopK_32f(
        pSrc: *const Ipp32f,
        srcIndex: Ipp64s,
        srcStride: Ipp64s,
        srcLen: Ipp64s,
        pDstValue: *mut Ipp32f,
        pDstIndex: *mut Ipp64s,
        dstLen: Ipp64s,
        hint: IppTopKMode::Type,
        pBuffer: *mut Ipp8u,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippvmGetLibVersion() -> *const IppLibraryVersion;
}
extern "C" {
    pub fn ippsAbs_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInv_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32f_A11(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32f_A21(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64f_A26(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64f_A50(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvSqrt_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCbrt_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsInvCbrt_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32f_A11(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32f_A21(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64f_A26(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64f_A50(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow2o3_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow3o2_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqr_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32f_A11(a: *const Ipp32f, b: Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32f_A21(a: *const Ipp32f, b: Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32f_A24(a: *const Ipp32f, b: Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64f_A26(a: *const Ipp64f, b: Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64f_A50(a: *const Ipp64f, b: Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64f_A53(a: *const Ipp64f, b: Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExpm1_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog1p_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_32f_A11(
        a: *const Ipp32f,
        r1: *mut Ipp32f,
        r2: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_32f_A21(
        a: *const Ipp32f,
        r1: *mut Ipp32f,
        r2: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_32f_A24(
        a: *const Ipp32f,
        r1: *mut Ipp32f,
        r2: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_64f_A26(
        a: *const Ipp64f,
        r1: *mut Ipp64f,
        r2: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_64f_A50(
        a: *const Ipp64f,
        r1: *mut Ipp64f,
        r2: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSinCos_64f_A53(
        a: *const Ipp64f,
        r1: *mut Ipp64f,
        r2: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_32f_A11(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_32f_A21(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_64f_A26(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_64f_A50(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan2_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErf_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfInv_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfc_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsErfcInv_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNorm_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_32f_A11(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_32f_A21(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_32f_A24(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_64f_A26(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_64f_A50(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCdfNormInv_64f_A53(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_32f_A11(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_32f_A21(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_32f_A24(
        a: *const Ipp32f,
        b: *const Ipp32f,
        r: *mut Ipp32f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_64f_A26(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_64f_A50(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsHypot_64f_A53(
        a: *const Ipp64f,
        b: *const Ipp64f,
        r: *mut Ipp64f,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAbs_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsArg_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsAdd_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsSub_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32fc_A11(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32fc_A21(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64fc_A26(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64fc_A50(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMul_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32fc_A11(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32fc_A21(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64fc_A26(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64fc_A50(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsDiv_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_32fc_A11(a: *const Ipp32f, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_32fc_A21(a: *const Ipp32f, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_32fc_A24(a: *const Ipp32f, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_64fc_A26(a: *const Ipp64f, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_64fc_A50(a: *const Ipp64f, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCIS_64fc_A53(a: *const Ipp64f, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsConj_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_32fc_A11(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_32fc_A21(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_64fc_A26(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_64fc_A50(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsMulByConj_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCos_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSin_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTan_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCosh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSinh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTanh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcos_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsin_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtan_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAcosh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAsinh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsAtanh_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsExp_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLn_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsLog10_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32fc_A11(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32fc_A21(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_32fc_A24(a: *const Ipp32fc, r: *mut Ipp32fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64fc_A26(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64fc_A50(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsSqrt_64fc_A53(a: *const Ipp64fc, r: *mut Ipp64fc, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32fc_A11(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32fc_A21(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_32fc_A24(
        a: *const Ipp32fc,
        b: *const Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64fc_A26(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64fc_A50(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPow_64fc_A53(
        a: *const Ipp64fc,
        b: *const Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32fc_A11(
        a: *const Ipp32fc,
        b: Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32fc_A21(
        a: *const Ipp32fc,
        b: Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_32fc_A24(
        a: *const Ipp32fc,
        b: Ipp32fc,
        r: *mut Ipp32fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64fc_A26(
        a: *const Ipp64fc,
        b: Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64fc_A50(
        a: *const Ipp64fc,
        b: Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsPowx_64fc_A53(
        a: *const Ipp64fc,
        b: Ipp64fc,
        r: *mut Ipp64fc,
        n: Ipp32s,
    ) -> IppStatus;
}
extern "C" {
    pub fn ippsFloor_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsFloor_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCeil_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsCeil_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTrunc_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsTrunc_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsRound_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsRound_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsRint_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsRint_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsNearbyInt_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsNearbyInt_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsModf_32f(a: *const Ipp32f, r1: *mut Ipp32f, r2: *mut Ipp32f, n: Ipp32s)
        -> IppStatus;
}
extern "C" {
    pub fn ippsModf_64f(a: *const Ipp64f, r1: *mut Ipp64f, r2: *mut Ipp64f, n: Ipp32s)
        -> IppStatus;
}
extern "C" {
    pub fn ippsFrac_32f(a: *const Ipp32f, r: *mut Ipp32f, n: Ipp32s) -> IppStatus;
}
extern "C" {
    pub fn ippsFrac_64f(a: *const Ipp64f, r: *mut Ipp64f, n: Ipp32s) -> IppStatus;
}
